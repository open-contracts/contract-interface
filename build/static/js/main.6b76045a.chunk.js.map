{"version":3,"sources":["Layouts/Header/HeaderLayoutDesktop.tsx","Theme/Colors.tsx","Theme/DesktopSizes.tsx","Theme/Shadows.tsx","Layouts/Header/HeaderLayoutMobile.tsx","Layouts/Main/MainLayoutDesktop.tsx","Layouts/Main/MainLayoutMobile.tsx","Theme/ColorProvider.tsx","Glitter/Logos/LogoB.tsx","Glitter/Animations/Grow/GrowOnEventAchamaenid.tsx","Glitter/Animations/ThroughGlass/ThroughGlassAgathocles.tsx","Components/Ready/AristophanesReady/AristophanesReady.tsx","Components/Ready/AristophanesReady/AristophanesReadyStack.tsx","Maps/ConnectionStatus/ConnectionStatus.tsx","Maps/Headers/HeaderDesktop.tsx","Maps/Headers/HeaderMobile.tsx","Sytems/MediaResponsive/MediaResponsive.tsx","Sytems/CheckProvider/CheckProvider.tsx","Maps/Headers/HeaderResponsive.tsx","Error/UniversalErrorBoundary/UniversalErrorBoundary.tsx","Error/ErrorNotification/CrashLogo.tsx","Error/ErrorNotification/ErrorNotification.tsx","Pages/ErrorPage/ErrorPage.tsx","Error/ErrorProvider/ErrorProvider.tsx","Error/ErrorProvider/ErrorDispatch.tsx","Error/IntegratedErrorBoundary/IntegratedErrorBoundary.tsx","Components/Buttons/AthenaButton/AthenaButton.tsx","Items/Dapp/ApolloDapp/ApolloRunDappContent.tsx","Items/DappPut/Standards/DefaultHeader.tsx","Items/DappPut/DappInput/DappInputHeader.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunction.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionsMobile.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionGridView.tsx","Items/DappPut/DappInput/DappInput.tsx","Items/DappPut/DappPutLayout.tsx","Items/DappPut/DappInteractput/DappInteractputHeader.tsx","Items/DappPut/DappInteractput/DappInteractputContent.tsx","Items/DappPut/Methods/color.ts","Items/DappPut/DappInteractput/DappInteractput.tsx","Items/DappPut/DappOutput/DappOutputHeader.tsx","Items/DappPut/DappOutput/DappOutputContent.tsx","Items/DappPut/DappOutput/DappOutput.tsx","Items/DappPut/DappErrput/DappErrputHeader.tsx","Items/DappPut/DappErrput/DappErrputContent.tsx","Items/DappPut/DappErrput/DappErrput.tsx","Items/DappPut/DappDescput/DappDescputHeader.tsx","Items/DappPut/DappDescput/DappDescputContent.tsx","Items/DappPut/DappDescput/DappDescput.tsx","Items/DappPut/DappOracleput/DappOracleputHeader.tsx","Items/DappPut/DappOracleput/OracleLink.tsx","Items/DappPut/DappOracleput/DappOracleputContent.tsx","Items/DappPut/DappOracleput/DappOracleput.tsx","Items/DappPut/DappResultput/DappResultputHeader.tsx","Items/DappPut/DappResultput/DappResultputContent.tsx","Items/DappPut/DappResultput/DappResultput.tsx","Items/DappPut/DappOracleInput/DappOracleInputHeader.tsx","Components/TextInput/TextInputApollo.tsx","Items/DappPut/DappOracleInput/DappOracleInputContent.tsx","Items/DappPut/DappOracleInput/DappOracleInput.tsx","Items/DappPut/DappOracleCallput/DappOracleCallput.tsx","Items/DappPut/DappWaitingPut/DappWaitingPutHeader.tsx","Components/ProgressBar/ProgressBarAlan.tsx","Items/DappPut/DappWaitingPut/DappWaitingPutContent.tsx","Items/DappPut/DappWaitingPut/DappWaitingPut.tsx","Items/DappPut/DappPut/DappPut.tsx","Items/DappFunction/StateMethods.tsx","Items/DappFunction/DappFunctionLogRunButton.tsx","Items/DappFunction/DappFunctionSubmitState.tsx","Items/DappFunction/DappFunctionLog.tsx","Items/DappFunction/DappFunctionAthena.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionView.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemMobileActions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemMobile.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemActions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemDesktop.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItem.tsx","Benches/Run/RunBenchDesktop.tsx","Pages/Run/RunPageWithRepo.tsx","Sytems/Octokit/index.ts","Items/Dapp/Dapp.tsx","Pages/Run/RunPageNoRepo.tsx","Pages/Run/ReadyToRun.tsx","Pages/Run/RunPage.tsx","Components/Walkthrough/Step/StepType.ts","Components/Walkthrough/Step/StepPre.tsx","Components/Walkthrough/Step/SuceededStepPost.tsx","Components/Walkthrough/Step/FailedStepPost.tsx","Components/Walkthrough/Step/StepPost.tsx","Components/Walkthrough/Step/Step.tsx","Statics/Steps/CrtStep.tsx","Statics/Steps/WalletStep.tsx","Statics/Steps/EnclaveStep.tsx","Statics/Steps/Steps.tsx","Statics/Steps/RunSteps.tsx","Pages/CheckPage/NotReadyToRun.tsx","Pages/CheckPage/CheckPage.tsx","Pages/MainPage/MainPage.tsx","Router/MainRouter.tsx","Segments/MainSegment.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Members","HeaderLayoutDesktop","children","getComponentMembers","Brand","Nav","Account","style","height","width","display","gridTemplateColumns","justifyContent","justifyItems","position","generateNamedMember","Colors","Maintheme","primaryTextColor","secondaryTextColor","tertiaryTextColor","quartenaryTextColor","backgroundColorSecondary","logoColor","readyGreen","waitingYellow","failedRed","greenCeramic","forestEdge","fadedRed","lilac","deepPurple","skyBlue","royalBlue","babyBlue","infoYellow","arizonaOrange","cyan","deepCyan","bloodOrange","jonasGray","backgroundGray","DesktopSizes","contentWidth","standard","whitespacePreferred","Shadows","defaultShadow","HeaderLayoutMobile","gap","padding","MainLayoutDesktop","Header","Content","Footer","overflow","MainLayoutMobile","flexDirection","margin","DefaultColorContext","colors","dispatch","ColorContext","createContext","useColorStore","context","useContext","Error","LogoB","main","post","size","fontSize","fontColor","label","_logoColor","_fontColor","alignContent","alignItems","viewBox","xmlns","id","x","y","clipPath","transform","d","fill","fillRule","color","textAlign","lineHeight","GrowOnEventAchamaenid","grow","className","ThroughGlassAgathocles","glass","glassOpacity","opacity","DefaultExpressions","DefaultColors","AristophanesReady","right","ready","expressions","information","lightStyle","onClick","_expressions","_information","_colors","useState","isHovered","setHovered","onMouseOver","onMouseOut","title","cursor","gridTemplateRows","verticalAlign","AristophanesReadyStack","wordWrap","overflowWrap","ConnectionStatus","wallet","stack","undefined","address","setAddress","useEffect","signer","ethers","providers","Web3Provider","window","ethereum","getSigner","getAddress","then","HeaderDesktop","HeaderMobile","navigate","useNavigate","handleSelect","item","location","href","MediaResponsive","Desktop","Laptop","Tablet","Mobile","minWidth","maxWidth","DefaultCheckContext","checksCompleted","CheckContext","CheckReducer","state","action","CheckProvider","useReducer","Provider","value","useCheckStore","HeaderResponsive","UniversalErrorBoundary","props","error","this","React","Component","CrashLogo","shapeRendering","textRendering","stroke","strokeWidth","rx","ry","ErrorNotification","errorText","toUpperCase","ErrorPage","useErrorContext","name","message","DefaultErrorContext","errorLoading","errorValidating","errorLoaded","ErrorContext","ErrorReducer","ErrorProvider","initialerror","console","log","ErrorDispatch","IntegratedErrorBoundary","AthenaButton","primaryColor","secondaryColor","invert","disabled","active","loading","hovered","e","a","onMouseEnter","onMouseLeave","setDisabled","isActive","setActive","isLoading","setLoading","setE","invertedBackground","Color","lighten","contrast","hex","_isHovered","Button","variant","boxShadow","transition","backgroundColor","Spinner","animation","ApolloRunDappContent","grid","setGrid","which","Single","Grid","flexGrow","zIndex","top","borderBottomRightRadius","borderBottomLeftRadius","borderTop","borderLeft","borderBottom","borderRight","background","borderTopRightRadius","DefaultHeader","dappPut","Pre","Post","paddingBottom","description","DappInputHeader","dappInput","type","ApolloDappFunction","dapp","func","selected","inputs","map","input","border","overflowX","overflowY","requiresOracle","ApolloDappFunctions","setWhich","onFunctionClick","funcs","contract","contractFunctions","index","paddingRight","borderRadius","paddingLeft","paddingTop","breakpointCols","ApolloDappFunctionsMobile","ApolloRunDappFunctionGridView","DappInput","setInput","DappPutLayout","end","borderCollapse","DappInteractputHeader","dappInteractput","DappInteractputContent","failedWindow","setFailedWindow","newWindow","open","sessionUrl","xpraExit","close","closed","darken","DappInteractput","DappOutputHeader","dappOutput","DappOutputContent","span","navigator","clipboard","writeText","DappOutput","DappErrputHeader","dappErrput","DappErrputContent","plugins","remarkGfm","DappErrput","DappDescputHeader","dappDescput","DappDescputContent","DappDescput","userSelect","DappOracleputHeader","dappOracleput","OracleLink","link","DappOracleputContent","contractFunction","oracleData","Object","keys","reduce","agg","key","oracleStatii","setOracleStatii","data","oracleStates","setOracleStates","catch","oraclePromiseReject","obj","allResolved","resolveCount","countPromisesResolved","links","oraclePromiseResolve","length","DappOracleput","DappResultputHeader","dappResultput","DappResultputContent","setResultput","DappResultput","errors","DappOracleInputHeader","dappOracleInput","TextInputApollo","onTextInput","rest","Form","Control","defaultValue","onChange","target","onKeyDown","onSubmit","DappOracleInputContent","setOracleInput","text","oracleInputs","response","onButtonSumbit","resolve","placeholder","DappOracleInput","reduceContractFunction","DappOracleCallput","dappOracleCallput","justifySelf","call","DappWaitingPutHeader","dappWaitingPut","ProgressBarAlan","duration","progress","_duration","opac","Math","floor","parseInt","toString","motion","div","animate","ease","DappWaitingPutContent","Date","getSeconds","timeStarted","DappWaitingPut","DappPut","put","putType","allPromisesResolved","createErrors","resetArgs","createXpras","xpras","xpra","createOutputs","prints","print","createOracleInputs","reject","prompt","createOracleCallPut","setFunc","createResult","createWaitingPut","seconds","removeWaitingPut","puts","filter","DappFunctionLogRunButton","pure","newInput","slice","borderTopLeftRadius","DappFunctionSubmitState","loadOracleData","setCalled","handleCall","ClientError","DappFunctionLog","setFunctionState","tick","forceUpdate","oc","updatedPuts","addOutput","contractFunctionState","newOutput","result","waiting","printHandler","addOracleInput","newOracleInput","generate","inputHandler","Promise","addError","newError","errorHandler","addOracleData","addResult","set","to","githubOracleDownloader","owner","repo","branch","oracleFolder","addOracleCallput","callOracle","handleSubmit","submitHandler","err","addInteractput","targetUrl","newXpra","xpraHandler","addWaitingPut","waitHandler","DappFunctionAthena","setDappFunction","ApolloRunDappFunctionView","ApolloRunDappMainItemMobileActions","gitUrl","getTokens","getOPN","approveHub","approveOPN","preventDefault","ApolloRunDappMainItemMobileInternals","dappItem","setDappItem","selectedFunc","contractName","contractDescription","oldContractFunction","ApolloRunDappMainItemMobile","updateDapp","ApolloRunDappMainItemActions","ApolloRunDappMainItemInternals","ApolloRunDappMainItemDesktop","ApolloRunDappMainItem","document","RunBenchDesktop","setDapp","RunPageWithRepo","createPullRequest","require","Octokit","plugin","auth","process","REACT_APP_GITHUB_TOKEN","getFileText","args","fetch","path","parseGitUrl","url","_indexCom","indexOf","indexCom","split","substring","trim","replace","README","parseName","readme","lines","getDappName","onGet","getOpenContractsInterface","JSON","ocInterface","parse","getDappContract","OpenContracts","opencontract","openContractsInterface","contractLocation","hash","parseContracts","RunPageNoRepo","setText","__isDapp__","ReadyToRun","RunPage","stepStatus","useParams","loc","setLoc","nameLoad","setNameLoad","contractLoad","setContractLoad","page","StepPre","next","Title","Info","SucceededStepPost","done","onAnimationComplete","scale","FailedStepPost","reload","StepPost","success","Step","CrtStep","WalletStep","src","EnclaveStep","AllSteps","Steps","status","crt","enclave","handleDone","checkMetaMaskAvail","provider","listAccounts","accounts","RunSteps","setStepStatus","stepIndex","setStepIndex","allDone","setAllDone","NotReadyToRun","handleAllDone","CheckPage","MainPage","MainRouter","element","MainSegment","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6b76045a.chunk.js","sourcesContent":["import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutDesktopProps = {}\n\nconst HeaderLayoutDesktop : FC<HeaderLayoutDesktopProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            height : \"100%\",\n            width : \"100%\",\n            display : \"grid\",\n            gridTemplateColumns : \"1fr 1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\",\n            position : \"sticky\"\n        }}>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Brand}\n            </div>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutDesktop.Brand = generateNamedMember('Brand');\nHeaderLayoutDesktop.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutDesktop.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutDesktop};","export const Colors = {\n    Maintheme : \"#373737\",\n    primaryTextColor : \"#FAF9F6\",\n    secondaryTextColor : \"#515151\",\n    tertiaryTextColor : \"#979797\",\n    quartenaryTextColor : \"#f1f1f1\",\n    backgroundColorSecondary : \"#D7D7D7\",\n    logoColor : \"#D7D7D7\",\n    readyGreen : \"#11db1e\",\n    waitingYellow : \"#fceb2f\",\n    failedRed : \"#ff0000\",\n    greenCeramic : \"#addcc9\",\n    forestEdge : \"#06955f\",\n    fadedRed : \"#f7a8a6\",\n    lilac : \"#C8A2C8\",\n    deepPurple: \"#d2a6cc\",\n    skyBlue : \"#bdd7ee\",\n    royalBlue : \"#4169e1\",\n    babyBlue : \"#4499ab\",\n    infoYellow : \"#faf264\",\n    arizonaOrange : \"#fdd2b5\",\n    cyan : \"#00b5b5\",\n    deepCyan : \"#004584\",\n    bloodOrange : \"#cc8866\",\n    jonasGray : \"#C3C3C3\",\n    backgroundGray : \"#F9F9FB\"\n} as const","export const DesktopSizes = {\n    Main : {\n        contentWidth : 950\n    },\n    Padding : {\n        standard : \"10px\",\n        whitespacePreferred : \"40px\"\n    },\n    BorderRadius : {\n        standard : \"5px\"\n    }\n} as const","import { Colors } from \"./Colors\";\n\nexport const Shadows = {\n    defaultShadow :`0px 2px 8px 2px ${Colors.Maintheme}44`,\n} as const;","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport { DesktopSizes } from '../../Theme';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutMobileProps = {}\n\nconst HeaderLayoutMobile : FC<HeaderLayoutMobileProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            display : \"grid\",\n            gridTemplateColumns : \"1fr\",\n            gap : DesktopSizes.Padding.whitespacePreferred,\n            padding : DesktopSizes.Padding.whitespacePreferred\n        }}>\n            <div>\n                {Brand}\n            </div>\n            <div>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutMobile.Brand = generateNamedMember('Brand');\nHeaderLayoutMobile.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutMobile.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutMobile};","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutDesktopProps = {}\n\nconst MainLayoutDesktop : FC<MainLayoutDesktopProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            height : \"auto\",\n            width : \"100vw\",\n            display : \"grid\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                width : DesktopSizes.Main.contentWidth,\n                overflow : \"visible\"\n            }}>\n                <div style={{\n                    height : \"200px\",\n                    width : \"100%\"\n                }}>\n                    {Header}\n                </div>\n                <div style={{\n                    height : \"auto\",\n                    width : \"100%\",\n                    // overflow : \"auto\",\n                }}> \n                    {Content}\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutDesktop.Header = generateNamedMember(\"Header\");\nMainLayoutDesktop.Content = generateNamedMember(\"Content\");\nMainLayoutDesktop.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutDesktop}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutMobileProps = {}\n\nconst MainLayoutMobile : FC<MainLayoutMobileProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            flexDirection : \"column\",\n            margin : \"0 auto\",\n            width : \"80vw\",\n        }}>\n            <div>\n                {Header}\n            </div>\n            <div>\n                {Content}\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutMobile.Header = generateNamedMember('Header');\nMainLayoutMobile.Content = generateNamedMember(\"Content\");\nMainLayoutMobile.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutMobile}","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { Colors } from './Colors';\n\n\nexport interface ColorContextI {\n    colors : typeof Colors,\n    dispatch : (fn : (state : ColorContextI)=>ColorContextI)=>void\n}\n\nconst DefaultColorContext : ColorContextI = {\n    colors : Colors,\n    dispatch : ()=>{}\n}\n\n\nexport const ColorContext = createContext(DefaultColorContext);\n\nexport const ColorReducer = (\n    state : ColorContextI, \n    action : (state : ColorContextI)=>ColorContextI\n)=>{\n    return action(state);\n}\n\nexport type ColorProviderProps = typeof Colors\n\nexport const ColorProvider : FC<ColorProviderProps>  = (props) =>{\n\n    const {\n        children,\n        ...colors\n    } = props;\n\n    const [state, dispatch] = useReducer(ColorReducer, DefaultColorContext);\n\n    return (\n\n        <ColorContext.Provider value={{\n            ...state,\n            colors : colors\n        }}>\n                {props.children}\n        </ColorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useColorStore = () : ColorContextI=>{\n\n    const context = useContext(ColorContext);\n\n    if(!context){\n        throw new Error(\"useColors must be called within a ColorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport {File} from \"react-bootstrap-icons\";\nimport { useColorStore } from '../../Theme/ColorProvider';\n\nexport type LogoBProps = {\n    main? : string,\n    post? : string,\n    size? : React.CSSProperties[\"height\"],\n    fontSize ? : React.CSSProperties[\"height\"],\n    logoColor? : React.CSSProperties[\"color\"],\n    fontColor? : React.CSSProperties[\"color\"]\n    label ? : boolean\n}\n\nexport const LogoB : FC<LogoBProps>  = ({\n    main = \"OPEN\",\n    post = \"CONTRACTS\",\n    size = \"80px\",\n    fontSize = \"24px\",\n    logoColor,\n    fontColor,\n    label = true\n}) =>{\n\n    const Colors = useColorStore();\n    const _logoColor = logoColor || Colors.colors.Maintheme;\n    const _fontColor = fontColor || Colors.colors.Maintheme;\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <div style={{\n                height : size,\n                width : size\n            }}>\n                <svg viewBox=\"0 0 1295 1296\" xmlns=\"http://www.w3.org/2000/svg\"\n                overflow=\"hidden\">\n                    <defs>\n                        <clipPath id=\"clip0\">\n                            <rect x=\"1308\" y=\"55\" width=\"1295\" height=\"1296\" />\n                        </clipPath>\n                    </defs>\n                    <g clipPath=\"url(#clip0)\" transform=\"translate(-1308 -55)\">\n                        <path\n                            d=\"M2281.32 449.263 2551.39 449.263 2552.12 450.769C2584.88 528.295 2603 613.53 2603 703 2603 792.47 2584.88 877.705 2552.12 955.231L2550.93 957.704 2280.6 957.704 2298.15 934.214C2342.71 868.213 2368.72 788.647 2368.72 703 2368.72 617.353 2342.71 537.787 2298.15 471.786ZM1955.5 55C2156.65 55 2336.38 146.796 2455.14 290.812L2455.18 290.863 1983.28 290.863 1955.5 289.459C1727.28 289.459 1542.28 474.608 1542.28 703 1542.28 931.392 1727.28 1116.54 1955.5 1116.54L1964.14 1116.1 2454.31 1116.1 2413.35 1161.21C2296.18 1278.47 2134.3 1351 1955.5 1351 1597.9 1351 1308 1060.88 1308 703 1308 345.119 1597.9 55 1955.5 55Z\"\n                            fill={_logoColor} fillRule=\"evenodd\" />\n                    </g>\n                </svg>\n            </div>\n            &emsp;\n            {label && <div style={{\n                fontSize : fontSize,\n                color : _fontColor,\n                textAlign : \"left\",\n                lineHeight : \"1.3em\"\n            }}>\n                {main}\n                <br/>\n                {post}\n            </div>}\n        </div>\n       \n    )\n\n}","import React, {FC, ReactElement} from 'react';\n\nexport type GrowOnEventAchamaenidProps = {\n    grow ? : boolean,\n    style? : React.CSSProperties\n}\n\nexport const GrowOnEventAchamaenid : FC<GrowOnEventAchamaenidProps>  = ({\n    grow = false,\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n        className={grow ? \"grow\" : \"anti-grow\"}\n        style={{\n            ...style\n        }}>\n            {children}\n        </div>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\n\nexport type ThroughGlassAgathoclesProps = {\n    glass ? : boolean,\n    style ? : React.CSSProperties,\n    glassOpacity ? : React.CSSProperties[\"opacity\"]\n}\n\nexport const ThroughGlassAgathocles : FC<ThroughGlassAgathoclesProps>  = ({\n    glass = false,\n    glassOpacity = \".95\",\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n            style={{\n                opacity : glass ? glassOpacity : \"1.0\",\n                ...style\n            }}>\n                {children}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Colors} from \"../../../Theme\";\nimport {CircleFill as Circle} from \"react-bootstrap-icons\";\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\nimport { useState } from 'react';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\n\nexport type ReadyT = \"ready\" | \"not ready\" | \"failed\";\n\nexport interface StateMapI<T extends any = string> {\n    \"ready\" ? : T,\n    \"not ready\" ? : T, \n    \"failed\" ? : T\n}\n\nexport type AristophanesReadyProps = {\n    right ? : boolean\n    ready ? : \"ready\" | \"not ready\" | \"failed\",\n    label ? : string,\n    size ? : React.CSSProperties[\"height\"],\n    expressions ? : StateMapI,\n    information ? : StateMapI,\n    colors ? : StateMapI<React.CSSProperties[\"color\"]>,\n    style ? : React.CSSProperties,\n    lightStyle ? : React.CSSProperties,\n    onClick ?  : (ready : AristophanesReadyProps[\"ready\"])=>void\n}\n\nexport const DefaultExpressions : StateMapI = {\n    \"ready\" : \"Ready!\",\n    \"not ready\" : \"Awaiting...\",\n    \"failed\" : \"Failed\"\n} as const\n\nexport const DefaultInformation : StateMapI = {\n    \"ready\" : \"The dependency has been loaded.\",\n    \"not ready\" : \"Trying to load the dependency.\",\n    \"failed\" : \"We could not load the dependency.\"\n} as const\n\nexport const DefaultColors : StateMapI<React.CSSProperties[\"color\"]> = {\n    \"ready\" : Colors.forestEdge,\n    \"not ready\" : Colors.waitingYellow,\n    \"failed\" : Colors.failedRed\n} as const\n\n/**\n * A Ready button.\n * @param props\n * @returns \n */\nexport const AristophanesReady : FC<AristophanesReadyProps>  = ({\n    right,\n    ready = \"not ready\",\n    label,\n    expressions,\n    information,\n    colors,\n    size,\n    style,\n    lightStyle,\n    onClick\n}) =>{\n\n    const _expressions = {\n        ...DefaultExpressions,\n        ...expressions\n    }\n\n    const _information = {\n        ...DefaultExpressions,\n        ...information\n    }\n\n    const _colors = {\n        ...DefaultColors,\n        ...colors\n    }\n\n    const handleClick = ()=>{\n        onClick && onClick(ready);\n    }\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n        <ThroughGlassAgathocles glass={isHovered} glassOpacity={.7}>\n             <GrowOnEventAchamaenid grow={isHovered}>\n                <div\n                onMouseOver={handleMouseOver}\n                onMouseOut={handleMouseOut}\n                title={_information[ready]}\n                onClick={handleClick}\n                style={{\n                    display : \"flex\",\n                    gridTemplateColumns : \"1fr 5fr\",\n                    justifyContent : \"left\",\n                    justifyItems : \"left\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    height : \"40px\",\n                    fontSize : \"15px\",\n                    width : \"auto\",\n                    cursor : \"pointer\",\n                    ...style\n                }}>\n                    {!right && <div style={{\n                        display: \"flex\",\n                        height : \"100%\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Circle \n                        color={_colors[ready]}\n                        size={\"65%\"}\n                        style={{\n                            ...lightStyle\n                        }}/>\n                    </div>}\n                    &ensp;\n                    <div style={{\n                        display : \"flex\",\n                        height : \"100%\",\n                        gridTemplateColumns : \"1fr\",\n                        gridTemplateRows : \"1fr 1fr\",\n                        verticalAlign : \"center\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <div>\n                            <span style={{\n                                color : Colors.Maintheme\n                            }}>{label}</span><br/>\n                            <span style={{\n                                color : Colors.tertiaryTextColor\n                            }}>\n                                {_expressions[ready]}\n                            </span>\n                        </div>\n                    </div>\n                    &ensp;\n                    {right && <div style={{\n                        display: \"flex\",\n                        height : \"100%\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Circle \n                        color={_colors[ready]}\n                        size={\"65%\"}\n                        style={{\n                            ...lightStyle\n                        }}/>\n                    </div>}\n                </div>\n            </GrowOnEventAchamaenid>\n        </ThroughGlassAgathocles>\n       \n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Colors} from \"../../../Theme\";\nimport {CircleFill as Circle} from \"react-bootstrap-icons\";\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\nimport { useState } from 'react';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\n\nexport type ReadyT = \"ready\" | \"not ready\" | \"failed\";\n\nexport interface StateMapI<T extends any = string> {\n    \"ready\" ? : T,\n    \"not ready\" ? : T, \n    \"failed\" ? : T\n}\n\nexport type AristophanesReadyStackProps = {\n    right ? : boolean\n    ready ? : \"ready\" | \"not ready\" | \"failed\",\n    label ? : string,\n    size ? : React.CSSProperties[\"height\"],\n    expressions ? : StateMapI,\n    information ? : StateMapI,\n    colors ? : StateMapI<React.CSSProperties[\"color\"]>,\n    style ? : React.CSSProperties,\n    lightStyle ? : React.CSSProperties,\n    onClick ?  : (ready : AristophanesReadyStackProps[\"ready\"])=>void\n}\n\nexport const DefaultExpressions : StateMapI = {\n    \"ready\" : \"Ready!\",\n    \"not ready\" : \"Awaiting...\",\n    \"failed\" : \"Failed\"\n} as const\n\nexport const DefaultInformation : StateMapI = {\n    \"ready\" : \"The dependency has been loaded.\",\n    \"not ready\" : \"Trying to load the dependency.\",\n    \"failed\" : \"We could not load the dependency.\"\n} as const\n\nexport const DefaultColors : StateMapI<React.CSSProperties[\"color\"]> = {\n    \"ready\" : Colors.forestEdge,\n    \"not ready\" : Colors.waitingYellow,\n    \"failed\" : Colors.failedRed\n} as const\n\n/**\n * A Ready button.\n * @param props\n * @returns \n */\nexport const AristophanesReadyStack : FC<AristophanesReadyStackProps>  = ({\n    right,\n    ready = \"not ready\",\n    label,\n    expressions,\n    information,\n    colors,\n    size,\n    style,\n    lightStyle,\n    onClick\n}) =>{\n\n    const _expressions = {\n        ...DefaultExpressions,\n        ...expressions\n    }\n\n    const _information = {\n        ...DefaultExpressions,\n        ...information\n    }\n\n    const _colors = {\n        ...DefaultColors,\n        ...colors\n    }\n\n    const handleClick = ()=>{\n        onClick && onClick(ready);\n    }\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n        <ThroughGlassAgathocles glass={isHovered} glassOpacity={.7}>\n             <GrowOnEventAchamaenid grow={isHovered}>\n                <div\n                onMouseOver={handleMouseOver}\n                onMouseOut={handleMouseOut}\n                title={_information[ready]}\n                onClick={handleClick}\n                style={{\n                    display : \"grid\",\n                    gridTemplateColumns : \"1fr\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    height : \"auto\",\n                    fontSize : \"15px\",\n                    width : \"auto\",\n                    cursor : \"pointer\",\n                    ...style\n                }}>\n                  \n                    <div>\n                        <Circle \n                            color={_colors[ready]}\n                            size={\"18px\"}\n                            style={{\n                                ...lightStyle\n                            }}/>\n                    </div>\n                    <div style={{\n                        display : \"flex\",\n                        height : \"100%\",\n                        gridTemplateColumns : \"1fr\",\n                        gridTemplateRows : \"1fr 1fr\",\n                        verticalAlign : \"center\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        textAlign : \"center\"\n                    }}>\n                        <div>\n                            <span style={{\n                                color : Colors.Maintheme\n                            }}>{label}</span><br/>\n                            <span style={{\n                                color : Colors.tertiaryTextColor,\n                                wordWrap : \"break-word\",\n                                overflowWrap : \"anywhere\"\n                            }}>\n                                {_expressions[ready]}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </GrowOnEventAchamaenid>\n        </ThroughGlassAgathocles>\n       \n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AristophanesReady, AristophanesReadyStack, ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {ethers} from \"ethers\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Colors } from '../../Theme';\n\nexport type ConnectionStatusProps = {\n    wallet ? : ReadyT,\n    style ? : React.CSSProperties,\n    stack ? : boolean\n}\n\nexport const ConnectionStatus : FC<ConnectionStatusProps>  = ({\n    wallet,\n    style,\n    stack\n}) =>{\n\n    const [address, setAddress] = useState<string|undefined>(undefined);\n\n    useEffect(()=>{\n\n        if(wallet === \"ready\"){\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            const signer = provider.getSigner();\n            !address && signer.getAddress().then((address)=>{\n                setAddress(address);\n            })\n        }\n\n    }, [wallet])\n\n    return (\n\n        <>\n           {stack ?\n            (<AristophanesReadyStack \n                style={{\n                    ...style\n                }}\n                right label={\"Metamask\"} ready={wallet} expressions={{\n                ready : address\n            }} />) :\n            (<AristophanesReady \n                style={{\n                    ...style\n                }}\n                right label={\"Metamask\"} ready={wallet} expressions={{\n                ready : address\n            }} />)\n           }   \n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutDesktop} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\nimport {ConnectionStatus} from \"../ConnectionStatus\";\nimport { ReadyT } from '../../Components/Ready/AristophanesReady/AristophanesReady';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\";\n\nexport type HeaderDesktopProps = {\n    wallet ? : ReadyT\n}\n\nexport const HeaderDesktop : FC<HeaderDesktopProps>  = ({\n    wallet,\n}) =>{\n\n    \n\n\n    return (\n\n        <HeaderLayoutDesktop>\n            <HeaderLayoutDesktop.Brand>\n                <div \n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"left\",\n                    justifyContent : \"left\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutDesktop.Brand>\n            <HeaderLayoutDesktop.Nav>\n                <div style={{\n                    height : \"100%\",\n                    display : \"flex\",\n                    alignItems : 'center',\n                    alignContent : \"center\",\n                    flexDirection : \"row-reverse\",\n                    textAlign : \"right\"\n                }}>\n                    <ConnectionStatus wallet={wallet}/>\n                </div>\n            </HeaderLayoutDesktop.Nav>\n        </HeaderLayoutDesktop>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutMobile} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\nimport { ReadyT } from '../../Components/Ready';\nimport { ConnectionStatus } from '../ConnectionStatus';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\"\n\nexport type HeaderMobileProps = {\n    wallet : ReadyT\n}\n\nexport const HeaderMobile : FC<HeaderMobileProps>  = ({\n    wallet\n}) =>{\n    const navigate = useNavigate();\n    const goHome = ()=>{\n        navigate(HOME_PATH);\n    }\n    const goAbout = ()=>{\n        navigate(ABOUT_PATH);\n    }\n    const goDocs = ()=>{\n        window.location.href = DOCS_PATH;\n    }\n    const handleSelect = (item : string)=>{\n\n        if(item === ABOUT) {\n            goAbout();\n        } else if(item === DOCS){\n            goDocs();\n        } else {\n            goHome();\n        }\n\n    }\n    const handleLogo  = ()=>{\n        handleSelect(\"HOME\")\n    }\n    return (\n\n        <HeaderLayoutMobile>\n            <HeaderLayoutMobile.Brand>\n                <div \n                    onClick={handleLogo}\n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"center\",\n                    justifyContent : \"center\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutMobile.Brand>\n            <HeaderLayoutMobile.Nav>\n                <ConnectionStatus\n                stack\n                style={{\n                    fontSize : \"12px\",\n                    margin : \"0 auto\",\n                    width : \"150px\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\",\n                    padding : DesktopSizes.Padding.standard\n                }} wallet={wallet}/>\n            </HeaderLayoutMobile.Nav>\n        </HeaderLayoutMobile>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport MediaQuery from \"react-responsive\";\n\nconst Members = [\"Desktop\", \"Laptop\", \"Tablet\", \"Mobile\"] as const;\n\nexport type MediaResponsiveProps = {}\n\n/**\n * Uses media queries to control component display by media type.\n * @param param0 \n * @returns a ReactNode displaying the appropriate component view by media type.\n */\nconst MediaResponsive : FC<MediaResponsiveProps> & {\n    Desktop : FC,\n    Laptop : FC,\n    Tablet : FC,\n    Mobile : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Desktop,\n        Laptop,\n        Tablet,\n        Mobile\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <>\n            <MediaQuery minWidth={1200}>\n                {Desktop}\n            </MediaQuery>   \n            <MediaQuery minWidth={992} maxWidth={1199}>\n                {Laptop}\n            </MediaQuery>\n            <MediaQuery minWidth={768} maxWidth={991}>\n                {Tablet}\n            </MediaQuery>\n            <MediaQuery maxWidth={767}>\n                {Mobile}\n            </MediaQuery>\n        </>\n\n    )\n\n}\n\nMediaResponsive.Desktop = generateNamedMember(\"Desktop\");\nMediaResponsive.Laptop = generateNamedMember(\"Laptop\");\nMediaResponsive.Tablet = generateNamedMember(\"Tablet\");\nMediaResponsive.Mobile = generateNamedMember(\"Mobile\")\n\nexport { MediaResponsive };\n\n","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\n\n\nexport interface CheckContextI {\n    checksCompleted : boolean\n    dispatch : (fn : (state : CheckContextI)=>CheckContextI)=>void\n}\n\nconst DefaultCheckContext : CheckContextI = {\n    checksCompleted : false,\n    dispatch : ()=>{}\n}\n\n\nexport const CheckContext = createContext(DefaultCheckContext);\n\nexport const CheckReducer = (\n    state : CheckContextI, \n    action : (state : CheckContextI)=>CheckContextI\n)=>{\n    return action(state);\n}\n\nexport type CheckProviderProps = {\n}\n\nexport const CheckProvider : FC<CheckProviderProps>  = ({\n    children\n}) =>{\n\n    const [state, dispatch] = useReducer(CheckReducer, DefaultCheckContext);\n\n    return (\n\n        <CheckContext.Provider value={{\n            ...state,\n            dispatch : dispatch\n        }}>\n                {children}\n        </CheckContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useCheckStore = () : CheckContextI=>{\n\n    const context = useContext(CheckContext);\n\n    if(!context){\n        throw new Error(\"useChecks must be called within a CheckProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport {MediaResponsive} from \"../../Sytems\";\nimport {HeaderDesktop, HeaderMobile} from \".\";\nimport { ReadyT } from '../../Components/Ready';\n\nexport type HeaderResponsiveProps = {\n    wallet : ReadyT\n}\n\nexport const HeaderResponsive : FC<HeaderResponsiveProps>  = ({\n    wallet\n}) =>{\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <HeaderDesktop wallet={wallet}/>\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <HeaderDesktop wallet={wallet}/>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <HeaderMobile wallet={wallet}/>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <HeaderMobile wallet={wallet}/>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React, { ErrorInfo } from \"react\";\nimport {ErrorDispatch, useErrorContext} from \"../ErrorProvider\";\n\ntype UniversalErrorBoundaryProps = {\n\n}\n\ntype UniversalErrorBoundaryStateI = {\n    error : Error | undefined\n}\n\nexport class UniversalErrorBoundary extends React.Component<UniversalErrorBoundaryProps, UniversalErrorBoundaryStateI> {\n    state : UniversalErrorBoundaryStateI = {\n        error : undefined\n    }\n\n    constructor(props : UniversalErrorBoundaryProps) {\n      super(props);\n      this.state = { error: undefined };\n    }\n  \n    static getDerivedStateFromError(error : Error) {\n      // Update state so the next render will show the fallback UI.\n      \n      return { error: error };\n    }\n  \n    render() {\n\n      \n\n      if (this.state.error) {\n\n        return <ErrorDispatch error={this.state.error}/>;\n      }\n  \n      return this.props.children; \n    }\n  }","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\n\nexport type CrashLogoProps = {\n    color? : React.CSSProperties[\"color\"],\n    style ? : React.CSSProperties\n}\n\nexport const CrashLogo : FC<CrashLogoProps>  = ({\n    color = Colors.Maintheme,style\n}) =>{\n\n    return (\n\n        <div style={{\n            height : \"200px\",\n            width : \"200px\",\n            ...style\n        }}>\n            <svg id=\"e7l4ir2eLhD1\" xmlns=\"http://www.w3.org/2000/svg\" \n                viewBox=\"0 0 1295 1296\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\">\n                <g id=\"e7l4ir2eLhD2\" clipPath=\"url(#e7l4ir2eLhD5)\">\n                    <g id=\"e7l4ir2eLhD3\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <path id=\"e7l4ir2eLhD4\"\n                            d=\"M2281.32,449.263L2551.39,449.263L2552.12,450.769C2584.88,528.295,2603,613.53,2603,703C2603,792.47,2584.88,877.705,2552.12,955.231L2550.93,957.704L2280.6,957.704L2298.15,934.214C2342.71,868.213,2368.72,788.647,2368.72,703C2368.72,617.353,2342.71,537.787,2298.15,471.786ZM1955.5,55C2156.65,55,2336.38,146.796,2455.14,290.812L2455.18,290.863L1983.28,290.863L1955.5,289.459C1727.28,289.459,1542.28,474.608,1542.28,703C1542.28,931.392,1727.28,1116.54,1955.5,1116.54L1964.14,1116.1L2454.31,1116.1L2413.35,1161.21C2296.18,1278.47,2134.3,1351,1955.5,1351C1597.9,1351,1308,1060.88,1308,703C1308,345.119,1597.9,55,1955.5,55Z\"\n                            transform=\"matrix(0.103391 -0.251703 0.251703 0.103391 1297.463604 955.789861)\"\n                            fill={color} fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" />\n                    </g>\n                    <clipPath id=\"e7l4ir2eLhD5\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <rect id=\"e7l4ir2eLhD6\" width=\"1295\" height=\"1296\" rx=\"0\" ry=\"0\" transform=\"matrix(1 0 0 1 1308 55)\"\n                            fill={color} stroke=\"none\" strokeWidth=\"1\" />\n                    </clipPath>\n                </g>\n                <path id=\"e7l4ir2eLhD7\"\n                    d=\"M811.27241,1085.63037L755.48824,1058.06402L880.4497,805.18796C880.42923,804.69885,880.41891,804.20759,880.41891,803.71433C880.41891,797.8312,881.88713,792.2333,884.53541,787.16032L770.96006,668.53597L631.91347,909.37173L576.15756,877.18104L724.58424,620.0985L691.31772,585.35311L550.79195,828.75088L495.03604,796.56019L644.94189,536.91564L639.59344,531.32943L584.21684,514.54791L599.70208,463.44887L651.53212,479.15564C655.22556,478.48418,660.01241,479.17178,664.73022,481.33136C671.28682,484.33265,675.77869,489.29288,676.39603,493.6522L933.50579,762.19179C959.69536,763.51273,980.44439,781.59804,980.44439,803.71435C980.44439,811.51833,977.86091,818.82042,973.36652,825.06115L1011.26733,1101.2539L949.62144,1109.71331L916.96606,871.74531L811.27241,1085.63037Z\"\n                    fill={color} stroke=\"none\" strokeWidth=\"0\" />\n            </svg>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\nimport { CrashLogo } from './CrashLogo';\n\nexport type ErrorNotificationProps = {\n    errorText? : string,\n    style? : React.CSSProperties\n}\n\nexport const ErrorNotification : FC<ErrorNotificationProps>  = ({\n    errorText = \"Sorry, our site encountered an error. Please try refreshing the page.\", \n    style\n}) =>{\n\n    return (\n\n        <div style={{\n            display : \"grid\",\n            gridTemplateRows : \"5fr 1fr\",\n            width : \"100%\",\n            ...style\n        }}>\n            <div style={{\n                width : \"100%\",\n                justifyContent : \"center\",\n                alignContent : \"center\"\n            }}>\n                <CrashLogo style={{\n                    width : \"300px\",\n                    height : \"300px\",\n                    margin : \"auto\",\n                }}/>\n                <h6>{errorText.toUpperCase()}</h6>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { LogoA } from '../../Glitter';\nimport { isDapp } from '../../Items';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderResponsive } from '../../Maps/Headers';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {ErrorNotification} from \"../../Error\";\nimport { useErrorContext } from '../../Error/ErrorProvider';\n\nexport type ErrorPageProps = {}\n\nexport const ErrorPage : FC<ErrorPageProps>  = () =>{\n\n    const {\n        error\n    } = useErrorContext();\n\n    const errorText = `${error?.name}: ${error?.message}`;\n\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n    )\n\n}","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ErrorPage } from '../../Pages/ErrorPage';\n\n\nexport interface ErrorContextI {\n    errorLoading : boolean,\n    errorValidating : boolean,\n    errorLoaded : boolean,\n    error : undefined | Error,\n    dispatch : (fn : (state : ErrorContextI)=>ErrorContextI)=>void\n}\n\nconst DefaultErrorContext : ErrorContextI = {\n    errorLoading : false,\n    errorValidating : false,\n    errorLoaded : false,\n    error : undefined,\n    dispatch : ()=>{}\n}\n\n\nexport const ErrorContext = createContext(DefaultErrorContext);\n\nexport const ErrorReducer = (\n    state : ErrorContextI, \n    action : (state : ErrorContextI)=>ErrorContextI\n)=>{\n    return action(state);\n}\n\nexport type ErrorProviderProps = {\n    initialerror? : {\n        [key : string] : any\n    } \n}\n\nexport const ErrorProvider : FC<ErrorProviderProps>  = ({\n    initialerror,\n    children\n}) =>{\n\n    const [state, dispatch] = useReducer(ErrorReducer, DefaultErrorContext);\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && !state.errorValidating){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    dispatch : dispatch,\n                    errorValidating : true,\n                }\n            })\n\n        }\n\n    })\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && state.errorValidating && state.dispatch){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    errorValidating : false,\n                    errorLoaded : true\n                }\n            })\n\n\n        } \n    });\n\n    console.log(state.error);\n\n    return (\n\n        <ErrorContext.Provider value={{\n            ...state,\n            dispatch : dispatch\n        }}>\n            {state.error ? <ErrorPage/> : children}\n        </ErrorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useErrorContext = () : ErrorContextI=>{\n\n    const context = useContext(ErrorContext);\n\n    if(!context){\n        throw new Error(\"useErrorContext must be called within a ErrorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useErrorContext } from './ErrorProvider';\n\nexport type ErrorDispatchProps = {\n    error : Error\n}\n\nexport const ErrorDispatch : FC<ErrorDispatchProps>  = ({\n    error\n}) =>{\n\n    const {\n        dispatch \n    } = useErrorContext();\n\n    useEffect(()=>{\n        dispatch((state)=>{\n            return {\n                ...state,\n                error : error\n            }\n        })\n    })\n\n    return (\n\n        <>\n        \n\n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ErrorProvider } from '../ErrorProvider';\nimport { UniversalErrorBoundary } from '..';\n\nexport type IntegratedErrorBoundaryProps = {}\n\nexport const IntegratedErrorBoundary : FC<IntegratedErrorBoundaryProps>  = ({\n    children\n}) =>{\n\n    return (\n\n        <ErrorProvider>\n            <UniversalErrorBoundary>\n                {children}\n            </UniversalErrorBoundary>\n        </ErrorProvider>\n\n    )\n\n}","import Color from \"color\";\nimport React, { FC, useEffect, useState } from 'react';\nimport {Button, Spinner } from \"react-bootstrap\";\nimport { Colors, Shadows } from \"../../../Theme\";\n\n\n/**\n * @initialAuthor\n * @contributors\n */\n\n/**\n * @description\n */\nexport type AthenaButtonProps = {\n    className ? : string,\n    label?: string,\n    primaryColor: React.CSSProperties[\"color\"],\n    secondaryColor: React.CSSProperties[\"color\"],\n    invert? : boolean,\n    disabled?: boolean,\n    active?: boolean,\n    hovered? : boolean,\n    loading?: boolean,\n    size?: \"sm\" | \"lg\" | undefined,\n    action? : (e? : React.MouseEvent)=>Promise<void>,\n    onClick? : (e : React.MouseEvent)=>void,\n    onMouseEnter? : (e : React.MouseEvent)=>void,\n    onMouseLeave? : (e : React.MouseEvent)=>void,\n    style?: React.CSSProperties\n}\n\n/**\n * @description \n */\nexport const AthenaButton : FC<AthenaButtonProps>  = ({\n    className,\n    label, \n    primaryColor, \n    secondaryColor,\n    children,\n    invert=false,\n    disabled=false,\n    active=false,\n    loading=false,\n    size=undefined,\n    hovered,\n    action=async (e? : React.MouseEvent)=>{return},\n    onClick=(e: React.MouseEvent)=>{},\n    onMouseEnter=(e: React.MouseEvent)=>{},\n    onMouseLeave=(e: React.MouseEvent)=>{},\n    style\n}) =>{\n\n    const [isDisabled, setDisabled] = useState(disabled);\n    const [isActive, setActive] = useState(active);\n    const [isLoading, setLoading] = useState(loading);\n    const [e, setE] = useState<React.MouseEvent|undefined>(undefined)\n\n    useEffect(()=>{\n        if(isLoading){\n            action(e).then(()=>{\n                setDisabled(false);\n                setLoading(false);\n                setActive(false);\n            })\n        }\n    }, [isLoading])\n\n\n\n    const invertedBackground = Color(primaryColor).lighten(1/(10 - Color(primaryColor).contrast(Color(secondaryColor)))).hex()\n\n    const handleClick = (e : React.MouseEvent<HTMLElement>)=>{\n        onClick(e);\n        setE(e);\n        setDisabled(true);\n        setLoading(true);\n        setActive(true);\n        setHovered(false);\n    }\n\n    const [isHovered, setHovered] = useState(false); \n    const handleMouseEnter = (e : React.MouseEvent)=>{\n        setHovered(true);\n        onMouseEnter(e);\n    }\n    const handleMouseLeave = (e : React.MouseEvent)=>{\n        setHovered(false);\n        onMouseLeave(e);\n    }\n\n    const _isHovered = isHovered || hovered;\n\n    return (\n\n        <Button\n            // className={className ? className : \"shadow-sm\"}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            variant={`outline`}\n            disabled={isLoading||disabled}\n            active={isActive||active}\n            size={size}\n            onClick={handleClick}\n            style={{\n                boxShadow : Shadows.defaultShadow,\n                cursor: \"pointer\",\n                transition: _isHovered? \"all .1s ease-in-out\" : \"\",\n                display: \"inline-block\",\n                color: _isHovered? secondaryColor : !invert ? primaryColor : secondaryColor,\n                backgroundColor: _isHovered? primaryColor : invert ? invertedBackground : secondaryColor,\n                ...style\n            }}\n        >{label||children}<span style={{display: isLoading||loading ? \"inline-block\" : \"none\"}}>&ensp;</span><Spinner\n            animation=\"border\"\n            style={{\n                display : isLoading||loading ? \"inline-block\" : \"none\", \n                height : \"15px\",\n                width: \"15px\"\n            }}\n            ></Spinner>\n        </Button>\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport {AthenaButton} from \"../../../Components/Buttons\";\nimport {Colors, DesktopSizes, Shadows} from \"../../../Theme\";\nimport {Grid3x3GapFill} from \"react-bootstrap-icons\";\n\nconst Members = [\"Single\", \"Grid\"]\n\n\nexport type ApolloRunDappContentProps = {\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void\n    which ? : string\n}\n\nconst ApolloRunDappContent : FC<ApolloRunDappContentProps> & {\n    Single : FC,\n    Grid : FC\n}  = ({\n    children,\n    grid,\n    setGrid,\n    which\n}) =>{\n\n    const {\n        Single,\n        Grid\n    } = getComponentMembers(Members, children);\n\n    const handleGrid = ()=>{\n        setGrid && setGrid(true);\n    }\n    const handleSingle = ()=>{\n        setGrid && setGrid(false);\n    }\n\n    \n\n    return (\n\n        <div \n        style={{\n            display : \"flex\",\n            flexDirection : \"column\",\n            flexGrow : 1\n        }}>\n            <div style={{\n                display : \"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                position : \"relative\",\n                overflow  : \"visible\"\n            }}>\n                <AthenaButton\n                    className=\"none\"\n                    onClick={handleGrid}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={grid ? Colors.jonasGray : Colors.quartenaryTextColor}\n                    style={{\n                        boxShadow : \"none\",\n                        height : \"50px\",\n                        width : \"60px\",\n                        zIndex : 1000,\n                        position : \"relative\",\n                        top : grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop :  \"none\",\n                        borderLeft : \"none\",\n                        borderBottom : grid ? `1px solid ${Colors.jonasGray}` : \"none\",\n                        borderRight :  \"none\"\n                    }}\n                >\n                    <Grid3x3GapFill size={20}/>\n                </AthenaButton>\n                <AthenaButton\n                    className=\"none\"\n                    onClick={handleSingle}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={!grid ? Colors.jonasGray : Colors.quartenaryTextColor}\n                    style={{\n                        boxShadow : \"none\",\n                        zIndex : 100,\n                        position : \"relative\",\n                        top : !grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop :  \"none\",\n                        borderLeft : \"none\",\n                        borderBottom : !grid ? `1px solid ${Colors.jonasGray}` : \"none\",\n                        borderRight :  \"none\",\n                        fontSize : \"24px\"\n                    }}\n                >\n                    <b>ƒ<sub>𝑥</sub></b>&ensp;{which}\n                </AthenaButton>\n            </div>\n            <div style={{\n                boxShadow : Shadows.defaultShadow,\n                flexGrow : 1,\n                zIndex : 0,\n                background : Colors.jonasGray,\n                borderTopRightRadius : DesktopSizes.BorderRadius.standard,\n                borderBottomLeftRadius : DesktopSizes.BorderRadius.standard,\n                borderBottomRightRadius : DesktopSizes.BorderRadius.standard\n            }}>\n                {grid ? Grid : Single}\n            </div>\n        </div>\n\n    )\n\n}\n\nApolloRunDappContent.Grid = generateNamedMember(\"Grid\");\nApolloRunDappContent.Single = generateNamedMember(\"Single\");\n\nexport {ApolloRunDappContent}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappPutI } from '../DappPutType';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Pre\", \"Post\"];\n\nexport type DefaultHeaderProps = {\n    dappPut : DappPutI,\n    style ? : React.CSSProperties\n}\n\nconst DefaultHeader : FC<DefaultHeaderProps> & {\n    Pre : FC,\n    Post : FC\n}  = ({\n    dappPut,\n    children,\n    style\n}) =>{\n\n    const {\n        Pre,\n        Post\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            paddingBottom : DesktopSizes.Padding.standard\n        }}>\n            <div style={{\n                display :\"grid\",\n                gridTemplateColumns : \"30px auto\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                fontSize : \"20px\",\n                color : Colors.Maintheme,\n                textAlign : \"left\",\n                ...style\n            }}>\n                <div>\n                    <b>{Pre}</b>\n                </div>\n                <div>\n                    {dappPut.name}{Post}\n                </div>\n            </div>\n            <div>\n                {dappPut.description && <><br/>\n                <p style={{\n                    color : Colors.secondaryTextColor\n                }}>\n                {dappPut.description}\n                </p></>}\n            </div>\n        </div>\n\n    )\n\n}\n\nDefaultHeader.Pre = generateNamedMember(\"Pre\");\nDefaultHeader.Post = generateNamedMember(\"Post\");\n\nexport {DefaultHeader}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappInputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappInputHeaderProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n}\n\nexport const DappInputHeader : FC<DappInputHeaderProps>  = ({\n    dappInput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappInput} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}>{dappInput.type}</i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {DappI} from \"../Dapp\";\nimport {AthenaButton} from \"../../../Components/Buttons/AthenaButton\";\nimport {Colors, DesktopSizes} from \"../../../Theme\";\nimport { DappInputHeader } from '../../DappPut/DappInput/DappInputHeader';\nimport { DappInputI } from '../../DappPut/DappPutType';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\n\nexport type ApolloDappFunctionProps = {\n    dapp : DappI,\n    func : OpenContractFunctionI,\n    selected : boolean,\n    onClick ? : (\n        e : React.MouseEvent,\n        name : string\n    )=>void,\n    style ? : React.CSSProperties\n}\n\nexport const ApolloDappFunction : FC<ApolloDappFunctionProps>  = ({\n    dapp,\n    func,\n    selected,\n    onClick,\n    style \n}) =>{\n\n    const handleClick = (e : React.MouseEvent)=>{\n        onClick && onClick(e, func.name);\n    }\n\n    const inputs = func.inputs.map((input)=>{\n        return (<DappInputHeader\n            key={input.name}\n            dappInput={input as DappInputI} style={{\n            fontSize : \"16px\"\n        }}/>)\n    })\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n     \n        <ThroughGlassAgathocles \n            style={{\n                overflow : \"visible\"\n            }}\n            glass={isHovered} glassOpacity={.7}>\n            <GrowOnEventAchamaenid grow={isHovered}>\n            <AthenaButton \n                onMouseEnter={handleMouseOver}\n                onMouseLeave={handleMouseOut}\n                onClick={handleClick}\n                    style={{\n                        wordWrap : \"normal\",\n                        width : \"auto\",\n                        fontSize : \"18px\",\n                        border : \"none\",\n                        ...style\n                    }}\n                \n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                        <div style={{\n                            overflowX : \"scroll\",\n                            overflowY : \"scroll\",\n                            padding : DesktopSizes.Padding.standard\n                        }}>\n                                <div style={{\n                                    display : \"flex\",\n                                    justifyContent : \"left\",\n                                    alignContent : \"center\",\n                                    alignItems : \"center\",\n                                    fontSize : \"18px\"\n                                }}>\n                                    <div>\n                                        <b>ƒ<sub>𝑥</sub></b>&emsp;\n                                    </div>\n                                    <hr style={{\n                                        color : Colors.Maintheme\n                                    }}/>\n                                    <div>\n                                        {func.name}\n                                    </div>\n                                </div>  \n                                <div>\n                                    {inputs}\n                                </div>\n                                <div style={{\n                                    textAlign : \"left\"\n                                }}>\n                                    {func.requiresOracle && <i style={{\n                                        color : Colors.cyan,\n                                        fontSize : \"16px\",\n                                        textAlign : \"left\"\n                                    }}>\n                                        Oracle required.  \n                                    </i>}\n                                </div>\n                        </div>\n                </AthenaButton>\n            </GrowOnEventAchamaenid>\n    </ThroughGlassAgathocles>\n\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CollectionFill } from 'react-bootstrap-icons';\nimport { DappI } from '../Dapp';\nimport {ApolloDappFunction} from \"./ApolloRunDappFunction\";\nimport {LeftRightScrollAdorno} from \"../../../Components/Scroll/LeftRightScroll\";\nimport { DesktopSizes } from '../../../Theme';\nimport Masonry from \"react-masonry-css\";\n\nexport type ApolloDappFunctionsProps = {\n    dapp : DappI,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloDappFunctions : FC<ApolloDappFunctionsProps>  = ({\n    dapp,\n    which,\n    setWhich\n}) =>{\n\n    const onFunctionClick = (e : React.MouseEvent, name : string)=>{\n        setWhich && setWhich(name);\n    }\n\n\n    const funcs = dapp.contract && dapp.contract ? dapp.contract.contractFunctions.map((func, index)=>{\n\n\n        return (\n            <div \n            key={func.name}\n            style={{\n                overflow : \"visible\",\n                paddingRight : DesktopSizes.Padding.standard,\n                paddingBottom : DesktopSizes.Padding.standard,\n                width : \"100%\"\n            }}>\n                <ApolloDappFunction \n                    style={{\n                        width : \"100%\",\n                        height : \"auto\",\n                        borderRadius : DesktopSizes.BorderRadius.standard\n                    }}\n                    onClick={onFunctionClick}\n                    selected={func.name === which} \n                    dapp={dapp} \n                    func={func}/>\n            </div>\n        )\n    }) : <></>\n\n    return (\n\n        <div style={{\n            paddingLeft : DesktopSizes.Padding.standard,\n            paddingTop : DesktopSizes.Padding.standard\n        }}>\n            <Masonry \n                style={{\n                    overflow : \"visible\"\n                }}\n                className={\"masonry\"}\n                breakpointCols={3}>\n                {funcs}\n            </Masonry>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CollectionFill } from 'react-bootstrap-icons';\nimport { DappI } from '../Dapp';\nimport {ApolloDappFunction} from \"./ApolloRunDappFunction\";\nimport {LeftRightScrollAdorno} from \"../../../Components/Scroll/LeftRightScroll\";\nimport { DesktopSizes } from '../../../Theme';\nimport Masonry from \"react-masonry-css\";\n\nexport type ApolloDappFunctionsMobileProps = {\n    dapp : DappI,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloDappFunctionsMobile : FC<ApolloDappFunctionsMobileProps>  = ({\n    dapp,\n    which,\n    setWhich\n}) =>{\n\n    const onFunctionClick = (e : React.MouseEvent, name : string)=>{\n        setWhich && setWhich(name);\n    }\n\n\n    const funcs = dapp.contract && dapp.contract ? dapp.contract.contractFunctions.map((func, index)=>{\n\n\n        return (\n            <div style={{\n                paddingTop : index === 0 ? DesktopSizes.Padding.standard : 0,\n                paddingLeft : DesktopSizes.Padding.standard,\n                paddingRight : DesktopSizes.Padding.standard,\n                paddingBottom : DesktopSizes.Padding.standard,\n                overflow : \"visible\"\n            }}>\n                <ApolloDappFunction \n                    style={{\n                        overflow : \"visible\",\n                        width : \"100%\",\n                        height : \"auto\",\n                        borderRadius : DesktopSizes.BorderRadius.standard\n                    }}\n                    onClick={onFunctionClick}\n                    selected={func.name === which} \n                    dapp={dapp} \n                    func={func}/>\n            </div>\n        )\n    }) : <></>\n\n    return (\n\n        <>\n            {funcs}\n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MediaResponsive } from '../../../Sytems';\nimport { DappI } from '../Dapp';\nimport { ApolloDappFunctions } from './ApolloRunDappFunctions';\nimport {ApolloDappFunctionsMobile} from \"./ApolloRunDappFunctionsMobile\";\n\n\nexport type ApolloRunDappFunctionGridViewProps = {\n    which ? : string,\n    dapp : DappI,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappFunctionGridView : FC<ApolloRunDappFunctionGridViewProps>  = ({\n    which,\n    setWhich,\n    dapp\n}) =>{\n\n    return (\n\n        <MediaResponsive>\n            <MediaResponsive.Desktop>\n                <ApolloDappFunctions dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Desktop>\n            <MediaResponsive.Laptop>\n                <ApolloDappFunctions dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Laptop>\n            <MediaResponsive.Mobile>\n                <ApolloDappFunctionsMobile dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Mobile>\n            <MediaResponsive.Tablet>\n                <ApolloDappFunctionsMobile dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Tablet>\n        </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInputHeader } from './DappInputHeader';\nimport { DappInputContent } from './DappInputContent';\nimport { darkenStandard } from '../Methods';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n    setInput ? : (input : DappInputI)=>void,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappInput : FC<DappPutInputProps>  = ({\n    dappInput,\n    style,\n    setInput\n}) =>{\n\n    return (\n\n        <></>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport { Colors, DesktopSizes, Shadows } from '../../Theme';\n\nconst Members = [\"Content\", \"Header\"];\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties,\n    end ? : boolean\n}\n\nconst DappPutLayout : FC<DappPutInputProps> & {\n    Header : FC,\n    Content : FC\n} = ({\n    style,\n    end,\n    children\n}) =>{\n\n    const {\n        Header,\n        Content\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            textAlign : \"left\",\n            overflowWrap : \"anywhere\",\n            padding : \"20px\",\n            borderRadius : DesktopSizes.BorderRadius.standard,\n            borderCollapse : \"collapse\",\n            border : \"none\",\n            boxShadow : Shadows.defaultShadow,\n            ...style,\n        }}>\n            <div style={{\n                fontSize : \"24px\",\n            }}>\n                {Header}\n            </div>\n            <div style={{\n                fontSize : \"18px\"\n            }}>\n                {Content}\n            </div>\n        </div>\n\n    )\n\n}\n\nDappPutLayout.Header = generateNamedMember(\"Header\");\nDappPutLayout.Content = generateNamedMember(\"Content\")\n\nexport {DappPutLayout};","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards';\nimport { HandIndexFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../../Theme';\n\nexport type DappInteractputHeaderProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputHeader : FC<DappInteractputHeaderProps>  = ({\n    dappInteractput\n}) =>{\n\n    return (\n\n        <DefaultHeader \n            style={{\n                color : Colors.lilac\n            }}\n            dappPut={dappInteractput}>\n            <DefaultHeader.Pre>\n                <HandIndexFill size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {AthenaButton} from \"../../../Components/Buttons\"\nimport {\n    lightenStandard,\n    darkenStandard\n} from \"../Methods\";\nimport {Colors} from \"../../../Theme\";\nimport {\n    DappInteractputI\n} from \"../DappPutType\";\nimport { useNavigate } from 'react-router-dom';\n\nexport type DappInteractputContentProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputContent : FC<DappInteractputContentProps>  = ({\n    dappInteractput\n}) =>{\n    \n    const [failedWindow, setFailedWindow] = useState<boolean>(false);\n\n    return (\n\n        <div style={{\n            display : \"flex\"\n        }}>\n            <AthenaButton \n                style={{\n                    boxShadow : \"none\",\n                    border : `1px solid ${Colors.lilac}`\n                }}\n                onClick={()=>{\n                    const newWindow = window.open(dappInteractput.sessionUrl);\n                    dappInteractput.xpraExit.then(()=>{\n                        newWindow?.close();\n                    })\n                    if(!newWindow || newWindow.closed || newWindow.closed === undefined){\n                        setFailedWindow(false);\n                    }\n                }}\n                primaryColor={darkenStandard(Colors.lilac)}\n                secondaryColor={\"white\"}>\n                    Open interactive session\n                </AthenaButton>\n            {failedWindow && \n            <p>Failed to open a new window at <a href={dappInteractput.sessionUrl}>{dappInteractput.sessionUrl}</a>\n                Please enable popups and try again or click the link above.\n            </p>}\n        </div>\n\n    )\n\n}\n","import Color from \"color\";\nimport React from \"react\";\n\nexport const lightenStandard = (color : React.CSSProperties[\"color\"])=>{\n\n    return Color(color).lighten(.2).hex();\n\n}\n\nexport const darkenStandard = (color : React.CSSProperties[\"color\"])=>{\n    return Color(color).darken(.2).hex();\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInteractputHeader } from './DappInteractputHeader';\nimport {DappInteractputContent} from \"./DappInteractputContent\";\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutInteractputProps = {\n    style ? : React.CSSProperties\n    dappInteractput : DappInteractputI,\n    end ? : boolean,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappInteractput : FC<DappPutInteractputProps>  = ({\n    dappInteractput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappInteractputHeader dappInteractput={dappInteractput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappInteractputContent dappInteractput={dappInteractput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards/DefaultHeader\";\nimport {ArrowReturnRight} from \"react-bootstrap-icons\";\nimport { Colors, DesktopSizes } from '../../../Theme';\n\nexport type DappOutputHeaderProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputHeader : FC<DappOutputHeaderProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappOutput} style={{\n            color : Colors.Maintheme,\n            paddingBottom : DesktopSizes.Padding.standard\n        }}>\n            <DefaultHeader.Pre>\n                <ArrowReturnRight size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Clipboard } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappOutputI } from '../DappPutType';\n\nexport type DappOutputContentProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputContent : FC<DappOutputContentProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <div style={{\n            color : Colors.Maintheme,\n            width : \"100%\",\n            display : \"grid\",\n            alignContent : 'center',\n            alignItems : \"center\",\n        }}>\n            <table>\n                <colgroup>\n                    <col span={1} style={{\n                        width : \"80%\"\n                    }}/>\n                    <col span={1} style={{\n                        width : \"20%\"\n                    }}/>\n                </colgroup>\n                <tbody>\n                    <tr>\n                        <td>\n                            <div style={{\n                                color : Colors.secondaryTextColor,\n                                textAlign : \"left\"\n                            }}>\n                                {dappOutput.value}\n                            </div>\n                        </td>\n                        <td>\n                            <div style={{\n                                width : \"100%\",\n                                display : \"grid\",\n                                gridTemplateColumns : \"1fr\",\n                                justifyContent : \"center\"\n                            }}>\n                                <AthenaButton \n                                style={{\n                                    width : \"100%\",\n                                    border : `1px solid ${Colors.Maintheme}`,\n                                    boxShadow : \"none\"\n                                }}\n                                primaryColor={Colors.Maintheme}\n                                secondaryColor={\"white\"}\n                                action={async ()=>{\n                                    navigator.clipboard.writeText(dappOutput.value||\"\");\n                                }}>\n                                    <Clipboard size={16}/>\n                                </AthenaButton>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport {DappOutputHeader} from \"./DappOutputHeader\";\nimport { DappOutputContent } from '../DappOutput/DappOutputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutOutputProps = {\n    style ? : React.CSSProperties\n    dappOutput : DappOutputI,\n    end ? : boolean,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOutput : FC<DappPutOutputProps>  = ({\n    style,\n    dappOutput,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOutputHeader dappOutput={dappOutput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOutputContent dappOutput={dappOutput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill} from \"react-bootstrap-icons\";\nimport { Colors } from '../../../Theme';\n\nexport type DappErrputHeaderProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputHeader : FC<DappErrputHeaderProps>  = ({\n    dappErrput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            style={{\n                color : Colors.failedRed\n            }}\n            dappPut={dappErrput}>\n                <DefaultHeader.Pre>\n                    <ExclamationCircleFill size={18}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappErrputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from \"remark-gfm\";\n\nexport type DappErrputContentProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputContent : FC<DappErrputContentProps>  = ({\n    dappErrput\n}) =>{\n\n    return (\n\n        <div>\n             <ReactMarkdown plugins={[\n                remarkGfm\n            ]}>\n                {dappErrput.value}\n            </ReactMarkdown>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappErrputHeader } from './DappErrputHeader';\nimport { DappErrputContent } from './DappErrputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutErrputProps = {\n    style ? : React.CSSProperties\n    dappErrput : DappErrputI,\n    end ? : boolean,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappErrput : FC<DappPutErrputProps>  = ({\n    dappErrput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappErrputHeader dappErrput={dappErrput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappErrputContent dappErrput={dappErrput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill, InfoCircleFill} from \"react-bootstrap-icons\";\nimport { Colors } from '../../../Theme';\n\nexport type DappDescputHeaderProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputHeader : FC<DappDescputHeaderProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            style={{\n                color : Colors.Maintheme\n            }}\n            dappPut={dappDescput}>\n                <DefaultHeader.Pre>\n                    <InfoCircleFill size={14}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappDescputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\n\nexport type DappDescputContentProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputContent : FC<DappDescputContentProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <div>\n            {dappDescput.value}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappDescputHeader } from './DappDescputHeader';\nimport { DappDescputContent } from './DappDescputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutDescputProps = {\n    style ? : React.CSSProperties\n    dappDescput : DappDescputI\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappDescput : FC<DappPutDescputProps>  = ({\n    dappDescput,\n    style\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : \"white\",\n            userSelect : \"text\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappDescputHeader dappDescput={dappDescput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappDescputContent dappDescput={dappDescput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill, Eyeglasses} from \"react-bootstrap-icons\";\n\nexport type DappOracleputHeaderProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputHeader : FC<DappOracleputHeaderProps>  = ({\n    dappOracleput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            dappPut={dappOracleput}>\n                <DefaultHeader.Pre>\n                    <Eyeglasses size={24}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Check, X, Circle, CircleFill} from 'react-bootstrap-icons';\nimport { Ellipsis } from 'react-bootstrap/esm/PageItem';\nimport {ReadyT} from \"../../../Components/Ready\"\nimport { Colors } from '../../../Theme';\n\nexport type OracleLinkProps = {\n    ready ? :ReadyT,\n    link : string\n}\n\nexport const OracleLink : FC<OracleLinkProps>  = ({\n    ready,\n    link\n}) =>{\n\n\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n\n            <div style={{\n                width : \"30px\",\n                display : \"flex\",\n                alignItems : \"center\",\n                alignContent : 'center',\n                justifyItems : \"center\",\n                justifyContent : \"center\"\n            }}>\n                {ready === \"ready\"  && \n                    <Check size={20} style={{\n                        color : Colors.forestEdge\n                    }} />\n                }\n                {!ready || (ready === \"failed\") && \n                    <X size={20} style={{\n                        color : Colors.failedRed\n                    }}/>\n                }\n                {ready === \"not ready\" && \n                    <CircleFill size={10} style={{\n                        color : Colors.arizonaOrange\n                    }}/>\n                }\n            </div>\n            <div>\n            &emsp;<a style ={{\n                color  : Colors.babyBlue\n            }} href={link}>{link}</a>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useReducer} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappOracleputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\nimport {OracleLink} from \"./OracleLink\";\nimport { ReadyT } from '../../../Components/Ready';\n\nconst allPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        \n        return agg && (typeof obj[key] === \"string\")\n    }, true)\n}\n\nconst countPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg + ((typeof obj[key] === \"string\" ? 1 : 0) * 1)\n    }, 0)\n}\n\nexport type DappOracleputContentProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputContent : FC<DappOracleputContentProps>  = ({\n    dappOracleput\n}) =>{\n\n    const map = dappOracleput.contractFunction.oracleData||{};\n    const [oracleStatii, setOracleStatii] = useState<{[key : string] : ReadyT}>(\n        Object.keys(map).reduce((agg, key)=>{\n            return {\n                ...agg,\n                [key] : [typeof map[key] === \"string\"] ? \"ready\" :  \"not ready\"\n            }\n        }, {} as {[key : string] : ReadyT})\n    )\n    const [oracleStates, setOracleStates] = useReducer<\n        (state : {[key : string] : string}, data : {[key : string] : string})=>{[key : string] : string}\n    >(\n        (state, data)=>{\n            return {\n                ...state,\n                ...data\n            }\n        },\n        (dappOracleput.contractFunction.oracleData||{})as unknown as {[key : string] : string}\n    );\n    useEffect(()=>{\n        Object.keys(map).map((key)=>{\n            if((map[key] as Promise<String>).then){\n                (map[key] as Promise<String>).then((data)=>{\n                    setOracleStatii({\n                        ...oracleStatii,\n                        [key] : \"ready\"\n                    });\n                    \n                    setOracleStates({\n                        [key] : data\n                    } as {[key : string]: string})\n                }).catch(()=>{\n                    dappOracleput.contractFunction.oraclePromiseReject && \n                    dappOracleput.contractFunction.oraclePromiseReject();\n                    setOracleStatii({\n                        ...oracleStatii,\n                        [key] : \"not ready\"\n                    })      \n                })\n            }\n        })\n    }, [])\n\n    const allResolved = allPromisesResolved(oracleStates);\n    const resolveCount = countPromisesResolved(oracleStates);\n    const links = Object.keys(oracleStatii).map((key)=>{\n        return (\n            <OracleLink link={key} ready={oracleStatii[key]}/>\n        )\n    })\n\n    useEffect(()=>{\n        \n        if(allResolved\n            && oracleStates  \n            && dappOracleput.contractFunction.oraclePromiseResolve\n        ){\n           /* dappOracleput.setOracleData(\n                oracleStates\n            );*/\n            dappOracleput.contractFunction.oraclePromiseResolve(\n                oracleStates as {[key : string] : string}\n            );\n        }\n    })\n\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor\n        }}>\n           <div style={{\n               border : `1px solid ${Colors.cyan}`,\n               borderRadius : DesktopSizes.BorderRadius.standard,\n               padding : DesktopSizes.Padding.standard,\n               background : Colors.primaryTextColor,\n               color : Colors.deepCyan\n           }}>\n                <h6>{allResolved ? \"Finished\" : \"Awaiting...\"} {resolveCount}/{Object.keys(dappOracleput.contractFunction.oracleData||{}).length}</h6>\n                {links}\n           </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappOracleputHeader } from './DappOracleputHeader';\nimport { DappOracleputContent } from './DappOracleputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutOracleputProps = {\n    style ? : React.CSSProperties\n    dappOracleput : DappOracleputI,\n    end ? : boolean\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOracleput : FC<DappPutOracleputProps>  = ({\n    dappOracleput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOracleputHeader dappOracleput={dappOracleput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOracleputContent dappOracleput={dappOracleput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappResultputHeaderProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n}\n\nexport const DappResultputHeader : FC<DappResultputHeaderProps>  = ({\n    dappResultput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappResultput} style={{\n            color : Colors.forestEdge\n        }}>\n            <DefaultHeader.Pre>\n                𝑦  \n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\nimport { result } from 'cypress/types/lodash';\nimport remarkGfm from 'remark-gfm';\nimport ReactMarkdown from \"react-markdown\";\n\n\nexport type DappResultputContentProps = {\n    dappResultput : DappResultputI,\n    setResultput ? : (Resultput : DappResultputI)=>void\n}\n\nexport const DappResultputContent : FC<DappResultputContentProps>  = ({\n    dappResultput, \n    setResultput\n}) =>{\n\n    return (\n\n        <div style={{\n            userSelect : \"text\",\n            display : \"flex\",\n            color : Colors.babyBlue\n        }}>\n            <ReactMarkdown plugins={[\n                remarkGfm\n            ]}>\n                {dappResultput.value||\"No return value yet.\"}\n            </ReactMarkdown>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappResultputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappResultputHeader } from './DappResultputHeader';\nimport { DappResultputContent } from './DappResultputContent';\nimport { darkenStandard } from '../Methods';\nimport { DesktopSizes } from '../../../Theme';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutResultputProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappResultput : FC<DappPutResultputProps>  = ({\n    dappResultput,\n    style,\n}) =>{\n\n    const ethereumError = dappResultput.contractFunction.errors?.map((error)=>{\n        return error.name === \"EthereumError\";\n    }).length || -1 > 0\n\n    \n\n    return (\n\n        !ethereumError && dappResultput.value ? <DappPutLayout style={{\n            background : Colors.greenCeramic,\n            color : Colors.forestEdge,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappResultputHeader dappResultput={dappResultput} />\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappResultputContent dappResultput={dappResultput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout> : <></>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappOracleInputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappOracleInputHeaderProps = {\n    style ? : React.CSSProperties\n    dappOracleInput : DappOracleInputI,\n}\n\nexport const DappOracleInputHeader : FC<DappOracleInputHeaderProps>  = ({\n    dappOracleInput,\n    style\n}) =>{\n\n\n    return (\n\n        <DefaultHeader dappPut={dappOracleInput} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Pre>\n                𝑥\n            </DefaultHeader.Pre>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}> </i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}\n","import React, {FC, ReactElement} from 'react';\nimport {Form, FormControlProps} from \"react-bootstrap\";\n\nexport type TextInputApolloProps = FormControlProps & {\n    style ? : React.CSSProperties,\n    onTextInput ? : (text : string)=>void,\n    onSubmit ? : (text : string)=>void,\n    placeholder ? : string,\n    defaultValue ? : string\n}\n\nexport const TextInputApollo : FC<TextInputApolloProps>  = (props) =>{\n    const {\n        onTextInput,\n        ...rest\n    } = {\n        ...props,\n        type : \"text\"\n    };\n    \n    const handleChange : React.ChangeEventHandler = (e)=>{\n        onTextInput && onTextInput((e.target as any).value);\n    }\n    const handleKeyDown = (e : React.KeyboardEvent<HTMLInputElement>)=>{\n        if(e.key === \"Enter\"){\n            props.onSubmit && props.onSubmit((e.target as any).value);\n        }\n    }\n    return (\n        <Form.Control\n            defaultValue={props.defaultValue}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            {...rest}\n        />\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappOracleInputI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\nimport {\n    TextInputApollo\n} from \"../../../Components/TextInput\"\nimport { useState } from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\n\nexport type DappOracleInputContentProps = {\n    dappOracleInput : DappOracleInputI,\n    setOracleInput ? : (OracleInput : DappOracleInputI)=>void\n}\n\nexport const DappOracleInputContent : FC<DappOracleInputContentProps>  = ({\n    dappOracleInput, \n    setOracleInput\n}) =>{\n\n    const [disabled, setDisabled] = useState(false);\n\n   // const [text, setText] = useState(dappOracleInput.response);\n   const text = dappOracleInput.contractFunction.oracleInputs ? \n   dappOracleInput.contractFunction.oracleInputs[dappOracleInput.id].response||\"\" :\n   \"\";\n   \n\n    const onTextOracleInput = (text : string)=>{\n        \n       setOracleInput && setOracleInput({\n            ...dappOracleInput,\n            response : text\n        })\n    }\n\n    const onTextSubmit = (text : string)=>{\n        dappOracleInput.resolve(text);\n        setDisabled(true);\n    }\n\n    const onButtonSumbit = ()=>{\n        dappOracleInput.resolve(text);\n        setDisabled(true);\n    }\n\n    const handleKeyDown : React.KeyboardEventHandler= (e)=>{\n        if(e.key === \"Enter\") onButtonSumbit();\n    }\n\n    return (\n        <div style={{\n            paddingTop : DesktopSizes.Padding.standard,\n        }}>\n            <table style={{\n                width : \"100%\"\n            }}>\n                <colgroup>\n                    <col span={1} style={{\n                        width : \"80%\"\n                    }}/>\n                    <col span={1} style={{\n                        width : \"20%\"\n                    }}/>\n                </colgroup>\n                <tbody>\n                    <tr onKeyDown={handleKeyDown}>\n                        <td> <TextInputApollo \n                            value={text}\n                            placeholder={\"Enter value\"}\n                            onTextInput={onTextOracleInput}\n                            onSubmit={onTextSubmit}\n                        style={{\n                            background : \"white\",\n                            color : Colors.Maintheme,\n                            border : `1px solid ${Colors.Maintheme}`\n                        }}/></td>\n                        <td><AthenaButton \n                        style={{\n                            border : `1px solid ${Colors.Maintheme}`,\n                            boxShadow : \"none\",\n                            width : \"100%\"\n                        }}\n                        onClick={onButtonSumbit}\n                        primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                        Submit\n                    </AthenaButton></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        \n        \n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleInputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappOracleInputHeader } from './DappOracleInputHeader';\nimport { DappOracleInputContent } from './DappOracleInputContent';\nimport { darkenStandard } from '../Methods';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutOracleInputProps = {\n    style ? : React.CSSProperties\n    dappOracleInput : DappOracleInputI,\n    contractFunction : OpenContractFunctionI,\n    index : number,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOracleInput : FC<DappPutOracleInputProps>  = ({\n    dappOracleInput,\n    contractFunction,\n    reduceContractFunction,\n    index,\n    style,\n}) =>{\n\n    const setOracleInput = (dappOracleInput : DappOracleInputI)=>{\n\n        reduceContractFunction && reduceContractFunction((contractFunction)=>{\n            return {\n                ...contractFunction,\n                oracleInputs : {\n                    ...contractFunction.oracleInputs,\n                    [dappOracleInput.id] : dappOracleInput\n                }\n            }\n        });\n    }\n\n    return (\n\n        <DappPutLayout style={{\n            color : Colors.Maintheme,\n            background : \"white\",\n        }}>\n            <DappPutLayout.Header>\n                <DappOracleInputHeader dappOracleInput={dappOracleInput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOracleInputContent dappOracleInput={dappOracleInput} setOracleInput={setOracleInput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {AthenaButton} from \"../../../Components/Buttons\";\nimport {Colors} from \"../../../Theme\";\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\nimport { DappCallputI } from '../DappPutType';\n\nexport type DappOracleCallputProps = {\n    dappOracleCallput : DappCallputI,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOracleCallput : FC<DappOracleCallputProps>  = ({\n    dappOracleCallput\n}) =>{\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            justifyContent : \"right\",\n            justifyItems : \"right\",\n            width : \"100%\"\n        }}>\n            <AthenaButton \n                invert\n                style={{\n                    fontSize : \"16px\",\n                    justifySelf : \"right\"\n                }}\n                action={dappOracleCallput.call}\n                primaryColor={Colors.Maintheme}\n                secondaryColor={\"white\"}\n            >\n                <span style={{\n                    fontSize : \"18px\"\n                }}>Call hub</span>\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ClockFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../../Theme';\nimport { DappWaitingPutI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappWaitingPutHeaderProps = {\n    style ? : React.CSSProperties\n    dappWaitingPut : DappWaitingPutI,\n}\n\nexport const DappWaitingPutHeader : FC<DappWaitingPutHeaderProps>  = ({\n    dappWaitingPut,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappWaitingPut} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Pre>\n                <ClockFill size={16}/>\n            </DefaultHeader.Pre>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}>{dappWaitingPut.type}</i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors, DesktopSizes} from \"../../Theme\";\nimport { useState } from 'react';\n\nexport type ProgressBarAlanProps = {\n    style ? : React.CSSProperties,\n    innerStyle ? : React.CSSProperties\n    duration : number,\n    progress ? : number\n}\n\nexport const ProgressBarAlan : FC<ProgressBarAlanProps>  = ({\n    style,\n    duration,\n    progress\n}) =>{\n\n    const [_duration, _setDuration] = useState(duration);\n    \n    const opac = Math.floor((parseInt('44', 16) + (progress||0) * (255 - parseInt('44', 16)))).toString(16);\n\n    return (\n\n        <div style={{\n            ...style,\n            border : `1px solid ${Colors.forestEdge}`,\n            borderRadius : DesktopSizes.BorderRadius.standard,\n            display : \"flex\",\n            justifyContent : \"left\",\n            overflow : \"hidden\",\n            height : \"20px\"\n        }}>\n            <motion.div \n                style={{\n                    height : \"100%\"\n                }}\n                animate = {{\n                    width : [(progress ? `${progress * 100}%` : \"0%\"), \"100%\"],\n                    background : [`${Colors.readyGreen}${opac}`, Colors.readyGreen]\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : _duration\n                }}>\n\n            </motion.div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors } from '../../../Theme';\nimport { DappWaitingPutI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\nimport {ProgressBarAlan} from \"../../../Components/ProgressBar\"\nimport {\n    TextInputApollo\n} from \"../../../Components/TextInput\"\n\nexport type DappWaitingPutContentProps = {\n    dappWaitingPut : DappWaitingPutI,\n    setInput ? : (input : DappWaitingPutI)=>void\n}\n\nexport const DappWaitingPutContent : FC<DappWaitingPutContentProps>  = ({\n    dappWaitingPut, \n    setInput\n}) =>{\n\n    \n\n    const [duration, setDuration] = useState(dappWaitingPut.duration);\n\n    const progress = (new Date().getSeconds() - dappWaitingPut.timeStarted.getSeconds())/(dappWaitingPut.duration + 0.000001)\n\n    return (\n\n        <div>\n            <p>{dappWaitingPut.value}</p>\n            <ProgressBarAlan duration={duration} progress={progress}/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappWaitingPutI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappWaitingPutHeader } from './DappWaitingPutHeader';\nimport { DappWaitingPutContent } from './DappWaitingPutContent';\nimport { darkenStandard } from '../Methods';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutWaitingPutProps = {\n    style ? : React.CSSProperties\n    dappWaitingPut : DappWaitingPutI,\n    setInput ? : (input : DappWaitingPutI)=>void,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappWaitingPut : FC<DappPutWaitingPutProps>  = ({\n    dappWaitingPut,\n    style,\n    setInput\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : \"white\",\n        }}>\n            <DappPutLayout.Header>\n                <DappWaitingPutHeader\n                    dappWaitingPut={dappWaitingPut}\n                />\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappWaitingPutContent\n                    dappWaitingPut={dappWaitingPut}\n                />\n            </DappPutLayout.Content>\n        </DappPutLayout>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI, DappPutI , DappWaitingPutI, DappErrputI, DappDescputI, DappInteractputI, DappOutputI, DappOracleputI, DappResultputI, DappOracleInputI, DappCallputI} from '../DappPutType';\nimport {DappInput} from \"../DappInput\";\nimport {DappOutput} from \"../DappOutput\";\nimport { DappDescput } from '../DappDescput';\nimport {DappInteractput} from \"../DappInteractput\";\nimport {DappErrput} from \"../DappErrput\";\nimport {DappOracleput} from \"../DappOracleput\";\nimport { DappResultput } from '../DappResultput';\nimport {DappOracleInput} from \"../DappOracleInput\";\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\nimport { DappOracleCallput } from '../DappOracleCallput';\nimport { DappWaitingPut } from '../DappWaitingPut';\n\nexport type DappPutProps = {\n    put : DappPutI,\n    index : number,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (reducer : reduceContractFunctionI)=>void\n    end ? : boolean\n}\n\nexport const DappPut : FC<DappPutProps>  = ({\n    put,\n    index,\n    contractFunction,\n    reduceContractFunction,\n    end\n}) =>{\n\n    switch(put.putType){\n\n        case (\"input\") :{\n\n            return (\n                <DappInput   \n                dappInput={put as DappInputI} \n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"output\") :{\n\n            return (\n                <DappOutput \n                dappOutput={put as DappOutputI} \n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"error\") : {\n\n            return (\n                <DappErrput \n                dappErrput={put as DappErrputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"callput\") : {\n            return (\n                <DappOracleCallput\n                    dappOracleCallput={put as DappCallputI}\n                    contractFunction={contractFunction}\n                    reduceContractFunction={reduceContractFunction}\n                />\n            )\n        }\n\n        case (\"interactive\") : {\n\n            return (\n                <DappInteractput \n                dappInteractput={put as DappInteractputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"oracle\") : {\n            \n            return (\n                <DappOracleput \n                dappOracleput={put as DappOracleputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"result\") : {\n            return (\n                <DappResultput \n                dappResultput={put as DappResultputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n        }\n\n        case (\"oracle-input\") : {\n            return (\n                <DappOracleInput \n                index={index}\n                dappOracleInput={put as DappOracleInputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n        }\n\n        case (\"waiting\") : {\n            return (\n                <DappWaitingPut\n                    dappWaitingPut={put as DappWaitingPutI}\n                    contractFunction={contractFunction}\n                    reduceContractFunction={reduceContractFunction}\n                />\n            )\n        }\n\n        default : {\n            return (\n                <DappDescput \n                dappDescput={put as DappDescputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n        }\n\n    }\n\n}","import React, {FC, ReactElement, useReducer} from 'react';\nimport { DappDescputI, DappOracleInputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI, DappCallputI, DappWaitingPutI } from '../DappPut/DappPutType';\n\nexport interface reduceContractFunctionI {\n    (state : OpenContractFunctionI) : OpenContractFunctionI\n}\n\nexport const allPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg && (typeof obj[key] === \"string\")\n    }, true)\n}\n\nexport const countPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg + (typeof obj[key] === \"string\" ? 1 : 0)\n    }, 0)\n}\n\nexport const createInputs = (\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappInputI[]=>{\n    return contractFunction.inputs.map((input)=>{\n        return {\n            ...input,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"input\"\n        } as DappInputI\n    })\n}\n\nexport const createErrors = (\n    errors : OpenContractFunctionI[\"errors\"], \n    resetArgs : DappErrputI[\"resetArgs\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappErrputI[]=>{\n    return errors ? errors.map((error)=>{\n\n        \n\n        return {\n            ...error,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"error\",\n            resetArgs : resetArgs\n        }\n    }) : []\n}\n\nexport const createXpras = (\n    xpras : OpenContractFunctionI[\"xpras\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappInteractputI[]=>{\n    return xpras ? xpras.map((xpra)=>{\n        return {\n            ...xpra,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"interactive\"\n        } \n    }) : []\n}\n\nexport const createOutputs = (\n    prints : OpenContractFunctionI[\"prints\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappOutputI[]=>{\n    return prints ? prints.map((print)=>{\n        return {\n            ...print,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"output\"\n        } \n    }) : []\n}\n\nexport const createOracleInputs = (\n    inputs : OpenContractFunctionI[\"oracleInputs\"],\n    contractFunction : OpenContractFunctionI,\n    resolve : (message : string)=>void,\n    reject : (message : string)=>void,\n    reduceContractFunction : (func : reduceContractFunctionI)=>void,\n) : DappOracleInputI[]=>{\n    return inputs ? Object.keys(inputs).map((key)=>{\n        return {\n            ...inputs[key],\n            name : inputs[key].prompt,\n            value : inputs[key].prompt,\n            resolve : resolve,\n            reject : reject,\n            putType : \"oracle-input\",\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction\n        } \n    }) : []\n}\n\nexport const createOracleData = (\n    contractFunction : OpenContractFunctionI,\n    setFunc ? : (func : reduceContractFunctionI)=>void\n) : DappOracleputI=>{\n\n    return {\n        name : \"Oracle data\",\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        putType : \"oracle\",\n    } as DappOracleputI\n\n}\n\nexport const createOracleCallPut = (\n    call : DappCallputI[\"call\"],\n    contractFunction : OpenContractFunctionI,\n    setFunc : (func : reduceContractFunctionI)=>void\n) : DappCallputI=>{\n    return {\n        call : call,\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        name : contractFunction.name,\n        putType : \"callput\",\n        value : \"\"\n    }\n}\n\nexport const createResult = (\n    data : any,\n    contractFunction : OpenContractFunctionI,\n    setFunc : (func : reduceContractFunctionI)=>void\n) : DappResultputI=>{\n    return {\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        name : \"Result\",\n        value : data,\n        putType : \"result\"\n    }\n}\n\nexport const getContractFunctionInputs = (puts : DappPutI[])=>{\n    return puts.filter((put)=>{\n        return put.putType === \"input\";\n    });\n}\n\nexport const resetInputs = (inputs : OpenContractFunctionI[\"inputs\"])=>{\n    return inputs.map((value)=>{\n        return {\n            ...value,\n            value : undefined\n        }\n    })\n}\n\nexport const resetInputPuts = (puts : OpenContractFunctionI[\"puts\"])=>{\n    return puts?.map((put)=>{\n        return {\n            ...put,\n            value : put.putType === \"input\" ? undefined : put.value\n        }\n    })\n}\n\nexport const produceUpdatedPuts = (\n    puts : OpenContractFunctionI[\"puts\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void\n) : DappPutI[]=>{\n    return (puts||[]).map((put)=>{\n        return {\n            ...put,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction\n        } as DappPutI\n    })\n}\n\nexport const createWaitingPut = (\n    seconds : number,\n    message : string,\n    contractFunction : OpenContractFunctionI,\n    setFunc : (func : reduceContractFunctionI)=>void\n) : DappWaitingPutI=>{\n    return {\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        name : contractFunction.name,\n        value : message,\n        message : message,\n        duration : seconds,\n        putType : \"waiting\",\n        type : \"waiting\",\n        timeStarted : new Date()\n    }\n}\n\nexport const removeWaitingPut = (\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void\n)=>{\n\n    reduceContractFunction&& reduceContractFunction((state)=>{\n        return {\n            ...state,\n            puts : state.puts && state.puts.filter((put)=>{\n                return put.putType !== \"waiting\"\n            })\n        }\n    })\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes, Shadows } from '../../Theme';\nimport { DappInputHeader } from '../DappPut/DappInput/DappInputHeader';\nimport { TextInputApollo } from '../../Components/TextInput';\nimport * as pure from \"./StateMethods\";\nimport { DefaultHeader } from '../DappPut/Standards';\n\n\n\nexport type DappFunctionLogRunButtonProps = {\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction : (contractFunction : pure.reduceContractFunctionI)=>void,\n}\n\nexport const DappFunctionLogRunButton : FC<DappFunctionLogRunButtonProps>  = ({\n    contractFunction,\n    reduceContractFunction\n}) =>{\n\n\n    const inputs = pure.createInputs(\n        contractFunction,\n        reduceContractFunction\n    ).map((input, index)=>{\n\n        const onTextInput = (text : string)=>{\n\n            reduceContractFunction((contractFunction)=>{\n                \n                const newInput =  {\n                    ...contractFunction.inputs[index],\n                    value : text\n                };\n                return {\n                    ...contractFunction,\n                    inputs : [\n                        ...contractFunction.inputs.slice(0, index),\n                        newInput,\n                        ...contractFunction.inputs.slice(index + 1)\n                    ]\n                }\n            });\n        }\n\n        \n\n        return (\n                    <><div \n                    key={`${index}-${input.name}`}\n                    style={{\n                        alignContent : 'center',\n                        alignItems : \"center\",\n                        paddingBottom : DesktopSizes.Padding.standard,\n                        lineHeight : \"18px\"\n                    }}>\n                        <DappInputHeader dappInput={input} style={{\n                            fontSize : \"16px\",\n                        }}/>\n                        <div style={{\n                            display : \"flex\",\n                            color : Colors.secondaryTextColor,\n                            alignContent : \"center\",\n                            alignItems : \"center\",\n                            fontSize : \"16px\"\n                        }}>\n                           &emsp;<span style={{\n                               fontSize : \"16px\"\n                           }}>=&emsp;</span><TextInputApollo\n                            value={input.value||\"\"}\n                            onTextInput={onTextInput}\n                            style={{\n                                fontSize : \"16px\"\n                           }}/>\n                        </div>\n                    </div><br/></>\n                )\n         \n    });\n\n    return (\n             <div style={{\n                position : \"relative\",\n            }}>\n                <div\n                    style={{\n                        width : \"100%\",\n                        borderTopLeftRadius : DesktopSizes.BorderRadius.standard,\n                        borderTopRightRadius : DesktopSizes.BorderRadius.standard,\n                        borderBottomLeftRadius : DesktopSizes.BorderRadius.standard,\n                        borderBottomRightRadius : DesktopSizes.BorderRadius.standard,\n                        background : 'white',\n                        boxShadow : Shadows.defaultShadow,\n                        padding :  \"20px\"\n                    }}>\n                    <div style={{\n                        color : Colors.Maintheme\n                    }}>\n                        <DefaultHeader dappPut={{\n                            name : \"Inputs\",\n                            putType : \"Inputs\",\n                            value : \"any\",\n                            contractFunction : {} as OpenContractFunctionI,\n                            reduceContractFunction : ()=>{} \n                        }}>\n                            <DefaultHeader.Pre>\n                            𝑥\n                            </DefaultHeader.Pre>\n                        </DefaultHeader>\n                        <div style={{\n                            paddingLeft : DesktopSizes.Padding.whitespacePreferred\n                        }}>\n                            {inputs}\n                        </div>\n                    </div>\n                </div>\n            </div>\n       \n      \n\n    )\n\n}","import React, {FC, ReactElement, useState, useEffect, useReducer} from 'react';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors } from '../../Theme';\nimport { lightenStandard, darkenStandard } from '../DappPut/Methods';\nimport * as pure from \"./StateMethods\";\n\n\nexport type DappFunctionSubmitStateProps = {\n    contractFunction : OpenContractFunctionI,\n    call : ()=>Promise<any>,\n    loadOracleData : ()=>Promise<{[key : string] : string}>,\n    reduceContractFunction :  (contractFunction : pure.reduceContractFunctionI)=>void\n}\n\nexport const DappFunctionSubmitState : FC<DappFunctionSubmitStateProps>  = ({\n    contractFunction,\n    call,\n    loadOracleData,\n    reduceContractFunction\n}) =>{\n\n    const map = contractFunction.oracleData||{};\n    const resolved = pure.allPromisesResolved(map);\n    const count = pure.countPromisesResolved(map);\n    \n    const resetLog = ()=>{\n        setCalled(false);\n        reduceContractFunction((state)=>{\n            const _state = {\n                ...state,\n                // inputs : pure.resetInputs(state.inputs),\n                puts : [],\n                oracleData : undefined\n            }\n            \n            return _state;\n        })\n    }\n    \n    const [called, setCalled] = useState(false);\n    const handleCall = async ()=>{\n        setCalled(true);\n        return await call();\n    }\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            justifyContent : \"right\",\n            justifyItems : \"right\",\n            fontSize : \"18px\",\n        }}>\n            <AthenaButton\n            onClick={resetLog}\n            primaryColor={Colors.failedRed}\n            secondaryColor={\"white\"}>\n                    Reset\n            </AthenaButton>\n            &emsp;\n            <AthenaButton\n            invert\n            style={{\n                fontSize : \"18px\"\n            }}\n            action={handleCall}\n            primaryColor={Colors.Maintheme}\n            secondaryColor={\"white\"}>\n                Call function\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, PureComponent, ReactElement, useReducer} from 'react';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { DappI, parseGitUrl } from '../Dapp/Dapp';\nimport { DappDescput, DappInput, DappPut } from '../DappPut';\nimport { DappDescputI, DappOracleInputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI } from '../DappPut/DappPutType';\nimport {to} from \"await-to-js\";\nimport { useEffect } from 'react';\nimport {DappFunctionLogRunButton} from \"./DappFunctionLogRunButton\";\nimport {DappFunctionSubmitState} from \"./DappFunctionSubmitState\";\nimport {generate} from \"shortid\";\nimport * as log from \"./StateMethods\";\nimport { OpenContractFunctionReducer } from '../../Types';\n\n\nexport type DappFunctionLogProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setFunctionState : OpenContractFunctionReducer\n}\n\n/**\n * Declared here, but the ClientError from the window will be used.\n */\nexport class ClientError extends Error {};\n\nexport const DappFunctionLog : FC<DappFunctionLogProps>  = ({\n    dapp,\n    contractFunction,\n    setFunctionState\n}) =>{\n\n    const [tick, forceUpdate] = useReducer(x=>x+1, 0);\n\n    const resetArgs = (setFunctionState : (update : log.reduceContractFunctionI)=>void)=>{\n        setFunctionState((oc : OpenContractFunctionI)=>{\n            return {\n                ...oc,\n                inputs : log.resetInputs(oc.inputs)\n            }\n        })\n    };\n\n    const updatedPuts = log.produceUpdatedPuts(\n        contractFunction.puts,\n        contractFunction,\n        setFunctionState\n    );\n\n    const puts = updatedPuts.reduce((agg, put, index)=>{\n        return [\n            ...agg,\n            ...put.putType !== \"input\" ? [\n                (\n                    <div \n                        style={{\n                            paddingBottom : DesktopSizes.Padding.standard\n                        }}\n                        key={index}><DappPut \n                        key={`${index}-${tick}`} // this needs to be index to allow for updates, but...\n                        // we also need to inlcude an index \n                        contractFunction={contractFunction}\n                        reduceContractFunction={setFunctionState}\n                        end={index > (contractFunction.puts ? contractFunction.puts.length - 2 : -1)}\n                        index={index} put={put}/></div>\n                )\n            ] : []\n        ]\n    }, [] as React.ReactNode[])\n\n\n    const addOutput = (name : string, message : string)=>{\n        setFunctionState((contractFunctionState)=>{\n            const newOutput = {\n                name : name,\n                value : message\n            };\n            return {\n                ...contractFunctionState,\n                ...contractFunctionState.requiresOracle ? {\n                    result : \"Oracle output received! See below.\"\n                } : {},\n                waiting : false,\n                prints : [...contractFunctionState.prints||[], newOutput],\n                puts : [...contractFunctionState.puts||[], ...log.createOutputs(\n                    [newOutput],\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        });\n    }\n    contractFunction.printHandler = async (message : string)=>{\n        addOutput(\"Notification.\", message)\n    }\n\n    const addOracleInput = (\n        data : string,\n        resolve : (msg : string)=>void,\n        reject : (msg : string)=>void\n    )=>{\n        setFunctionState((contractFunction : OpenContractFunctionI)=>{\n            \n            const newOracleInput = {\n                prompt : data,\n                response : undefined,\n                id : generate()\n            }\n            return {\n                ...contractFunction,\n                waiting : false,\n                oracleInputs : {\n                    ...contractFunction.oracleInputs, \n                    [newOracleInput.id] : newOracleInput\n                },\n                puts : [...contractFunction.puts||[], ...log.createOracleInputs(\n                    {\n                        [newOracleInput.id] : newOracleInput\n                    },\n                    contractFunction,\n                    resolve,\n                    reject,\n                    setFunctionState\n                )]\n            }\n        });\n    };\n    useEffect(()=>{\n        contractFunction.inputHandler = async (message : string)=>{\n            return new Promise((resolve, reject)=>{\n                addOracleInput(message, resolve, reject);\n                forceUpdate();\n            })\n        }\n    })\n\n    const addError = (e : Error)=>{\n        setFunctionState((contractFunction : OpenContractFunctionI)=>{\n            const newError = {\n                ...e,\n                value : e.message\n            }\n            return {\n                ...contractFunction,\n                waiting : false,\n                errors : [...contractFunction.errors||[], newError],\n                puts : [...(contractFunction.puts||[]), ...log.createErrors(\n                    [newError], \n                    resetArgs,\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        });\n    }\n\n    contractFunction.errorHandler = async (e : Error)=>{\n        addError(e);\n    };\n\n    const addOracleData = (\n        data : OpenContractFunctionI[\"oracleData\"], \n        resolve : OpenContractFunctionI[\"oraclePromiseResolve\"],\n        reject : OpenContractFunctionI[\"oraclePromiseReject\"]\n    )=>{\n        \n        setFunctionState((contractFunction)=>{\n           return {\n            ...contractFunction,\n            waiting : false,\n            oracleData : {\n                ...contractFunction.oracleData,\n                ...data\n            },\n            oraclePromiseResolve : resolve,\n            oraclePromiseReject : reject\n           }\n        })\n\n    }\n\n    const addResult = (data : OpenContractFunctionI[\"result\"])=>{\n\n        \n\n        setFunctionState((contractFunction : OpenContractFunctionI)=>{\n            return {\n                ...contractFunction,\n                result : data,\n                puts : [...contractFunction.puts||[], log.createResult(\n                    data,\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        });\n\n    }\n\n    const [oracleStates, setOracleStates] = useReducer(\n        (\n            state : OpenContractFunctionI[\"oracleData\"], \n            set : (data : OpenContractFunctionI[\"oracleData\"])=>OpenContractFunctionI[\"oracleData\"]\n        )=>set(state),\n        contractFunction.oracleData\n    );\n    useEffect(()=>{\n        if(\n            oracleStates !== undefined\n            && log.allPromisesResolved(oracleStates) \n            && contractFunction.oracleData !== oracleStates\n        ){\n            contractFunction.oraclePromiseResolve && contractFunction.oraclePromiseResolve(oracleStates as any);\n            addOracleData(\n                oracleStates,\n                undefined,\n                undefined\n            );\n        }\n    }, [oracleStates])\n\n    const loadOracleData = async () : Promise<{[key : string] : string}>=>{\n\n        const [error, data]= await to<{[key : string] : Promise<string>}>(window.githubOracleDownloader(\n            dapp.owner || \"\",\n            dapp.repo || \"\",\n            dapp.branch || \"main\",\n            contractFunction.oracleFolder\n        ));\n\n        if(error){\n            addError(\n                new ClientError(\"Oracle data unavailable.\"),\n            )\n        }\n        return new Promise((resolve, reject)=>{\n            if(data){\n                Object.keys(data).map((key)=>{\n                    if((data[key] as Promise<string>).then){\n                        (data[key] as Promise<string>).then((data)=>{\n                            setOracleStates((oracleData)=>({\n                                ...oracleData,\n                                [key] : data\n                            }))\n                        }).catch(()=>{\n                            contractFunction.oraclePromiseReject && \n                            contractFunction.oraclePromiseReject(); \n                        })\n                    }\n                })\n            }\n            addOracleData(\n                data||{} as any,\n                resolve,\n                reject\n            );\n            if(error){\n                addError(new ClientError(\"GitHub download failed.\"));\n                reject();\n            }\n        })\n\n    }\n\n    const addOracleCallput = (call : ()=>Promise<void>)=>{\n        setFunctionState((contractFunction)=>{\n            return {\n                ...contractFunction,\n                waiting : false,\n                callOracle : call,\n                puts : [...contractFunction.puts||[], log.createOracleCallPut(\n                    call,\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        })\n    }\n\n    const handleSubmit = async (call : ()=>Promise<void>)=>{\n        \n        addOracleCallput(call);\n    }\n    contractFunction.submitHandler = handleSubmit;\n\n    const handleCall = async ()=>{\n\n       return new Promise((resolve, reject)=>{\n\n            if(contractFunction.requiresOracle){\n\n                contractFunction.call().then((data)=>{\n                    resolve(data);\n                }).catch((err)=>{\n                    addError(err);\n                    resolve({});\n                })\n                return;\n            } \n            \n            contractFunction.call().then((data)=>{\n                addResult(data);\n                resolve(data);\n            }).catch((err)=>{\n                addError(err);\n                resolve({});\n            })\n       })\n\n    }\n\n    const addInteractput = (name : string, targetUrl : string, sessionUrl : string, xpraExit : Promise<void>)=>{\n      setFunctionState((contractFunction)=>{\n        const newXpra : DappInteractputI =  {\n            name : name,\n            targetUrl : targetUrl,\n            sessionUrl : sessionUrl,\n            xpraExit : xpraExit,\n            description : \"\",\n            value : \"\",\n            putType : \"interactive\",\n            contractFunction : contractFunction,\n            reduceContractFunction : setFunctionState\n        };\n        return {\n            ...contractFunction,\n            ...contractFunction.requiresOracle ? {\n                result : \"Oracle output received! See below.\"\n            } : {},\n            waiting : false,\n            xpras : [...contractFunction.xpras||[], newXpra],\n            puts : [...contractFunction.puts||[], ...log.createXpras(\n                [newXpra],\n                contractFunction,\n                setFunctionState\n            )]\n        }\n      });\n\n    }\n\n    contractFunction.xpraHandler = async (targetUrl, sessionUrl, xpraExit)=>{\n\n        addInteractput(\"Interactive session started.\", targetUrl, sessionUrl, xpraExit);\n\n    }\n\n    const addWaitingPut = (seconds : number, message : string)=>{\n\n        log.removeWaitingPut(setFunctionState);\n\n        setFunctionState((state)=>{\n            return {\n                ...state,\n                waiting : true,\n                puts : [...state.puts||[], log.createWaitingPut(\n                    seconds, \n                    message,\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        })\n    }\n\n    contractFunction.waitHandler = async (seconds, message)=>{\n        addWaitingPut(seconds, message);\n    }\n\n    useEffect(()=>{\n        if(!contractFunction.waiting){\n            log.removeWaitingPut(setFunctionState);\n        }\n    }, [contractFunction.waiting]);\n\n    return (\n\n        <>\n            <div style={{\n                width : \"100%\",\n                paddingBottom : DesktopSizes.Padding.standard,\n            }}>\n                {contractFunction.description && <div style={{\n                    paddingBottom : DesktopSizes.Padding.standard\n                }}>\n                    <DappDescput\n                    contractFunction={contractFunction}\n                    reduceContractFunction={setFunctionState}\n                    dappDescput={{\n                        name : \"Description\",\n                        value : contractFunction.description,\n                        putType : \"description\",\n                        contractFunction : contractFunction,\n                        reduceContractFunction : setFunctionState\n                    }}/>    \n                </div>}\n                {contractFunction.inputs.length > 0 && <div style={{\n                    paddingBottom : DesktopSizes.Padding.standard\n                }}>\n                    <DappFunctionLogRunButton\n                    reduceContractFunction={setFunctionState}\n                    contractFunction={contractFunction}\n                /></div>}\n                <div style={{\n                    paddingBottom : DesktopSizes.Padding.standard\n                }}>\n                    <DappFunctionSubmitState\n                        reduceContractFunction={setFunctionState}\n                        loadOracleData={loadOracleData}\n                        call={handleCall}\n                        contractFunction={contractFunction}\n                    />\n                </div>\n                {puts}\n                <br/>\n            </div>\n        </>\n\n    )\n\n}\n","import React, {FC, ReactElement} from 'react';\nimport { OpenContractFunctionReducer } from '../../Types';\nimport {DappI} from \"../Dapp\";\nimport { DappFunctionLog } from './DappFunctionLog';\n\nexport type DappFunctionAthenaProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setDappFunction : OpenContractFunctionReducer\n}\n\nexport const DappFunctionAthena : FC<DappFunctionAthenaProps>  = ({\n    dapp,\n    contractFunction,\n    setDappFunction\n}) =>{\n\n    return (\n\n        <DappFunctionLog setFunctionState={setDappFunction} dapp={dapp} contractFunction={contractFunction}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../../Theme';\nimport { OpenContractFunctionReducer } from '../../../Types';\nimport {DappI} from \"../../Dapp\";\nimport { DappFunctionAthena } from '../../DappFunction';\n\nexport type ApolloRunDappFunctionViewProps = {\n    dapp : DappI,\n    setDappFunction : OpenContractFunctionReducer\n    contractFunction ? : OpenContractFunctionI\n}\n\nexport const ApolloRunDappFunctionView : FC<ApolloRunDappFunctionViewProps>  = ({\n    dapp,\n    setDappFunction,\n    contractFunction\n}) =>{\n\n    return (\n\n        <div style={{\n            padding: DesktopSizes.Padding.standard\n        }}>\n            {contractFunction && \n                <DappFunctionAthena\n                dapp={dapp}\n                setDappFunction={setDappFunction}\n                contractFunction={contractFunction}/>\n            }\n            {!contractFunction && <h2>No function selected.</h2>}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { Coin, Github, InfoCircle, PatchCheckFill, PatchPlus } from 'react-bootstrap-icons';\nimport { PlayFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { DappI, } from '../Dapp';\nimport { ethers, providers } from 'ethers';\n\nexport type ApolloRunDappMainItemMobileActionsProps = {\n    gitUrl : string,\n    dapp : DappI\n}\n\nexport const ApolloRunDappMainItemMobileActions : FC<ApolloRunDappMainItemMobileActionsProps>  = ({\n    gitUrl,\n    dapp\n}) =>{\n\n    const handleGitHub = ()=>{\n        window.open(`https://github.com/${dapp.owner}/${dapp.repo}/tree/${dapp.branch}`);\n    }\n\n    const getTokens = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).getOPN('3')\n        }\n    }\n\n    const approveHub = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).approveOPN('3')\n        }\n    }\n\n\n    return (\n\n        <div style={{\n        }}>\n            <p style={{\n                textAlign : \"left\"\n            }}>\n                <InfoCircle size={18}/>&emsp;If this is your first time here, you may need to&nbsp;<a\n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    getTokens();\n                }}\n                style={{\n                    color : \"#99aacc\"\n                }}>get some OPN</a>&nbsp;and&nbsp;<a\n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    approveHub();\n                }}\n                style={{\n                    color : \"#99aacc\"\n                }}>grant access to the Open Contracts hub</a>.\n            </p>\n            <br/>\n            <div style={{\n                display  : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                gap : DesktopSizes.Padding.standard\n            }}>\n                <AthenaButton \n                onClick={handleGitHub}\n                style={{\n                    width : \"100%\",\n                    border : \"none\"\n                }}\n                primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        See on GitHub&emsp;<Github/>\n                    </div>\n                </AthenaButton>\n                <AthenaButton\n                    style={{\n                        width : \"100%\",\n                        border : \"none\"\n                    }}\n                    action={getTokens}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        Get OPN&emsp;<Coin/>\n                    </div>\n                </AthenaButton>\n                <AthenaButton \n                    action={approveHub}\n                    style={{\n                        width : \"100%\",\n                        border : \"none\"\n                    }}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        Grant Hub Access&emsp;<PatchCheckFill/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n            </div>\n            <br/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName, getDappSolidityContract, getDappOracle, getDappImageUri, getDappReadMe, parseGitUrl, getDappContract } from '../Dapp';\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport {ApolloRunDappContent} from \"./ApolloRunDappContent\";\nimport { ApolloRunDappFunctionGridView } from './ApolloRunDappFunctionGridView';\nimport { ApolloRunDappFunctionView } from './ApolloRunDappFunctionView';\nimport { useErrorContext } from '../../../Error/ErrorProvider';\nimport { ApolloRunDappMainItemMobileActions } from './ApolloRunDappMainItemMobileActions';\nimport { OpenContractReducer } from '../../../Types';\n\n\nexport type ApolloRunDappMainItemMobileReadmeProps = {\n    style ? : React.CSSProperties,\n    readme : string | undefined\n}\n\nexport const ApolloRunDappMainItemMobileReadMe : FC<ApolloRunDappMainItemMobileReadmeProps> = ({\n    style,\n    readme\n})=>{\n\n    return (\n        <div style={{\n            ...style,\n            textAlign : 'left'\n        }}>\n            {!readme && <Skeleton width=\"100%\" count={5}/>}\n            {readme && <ReactMarkdown plugins={[remarkGfm]}>\n                {readme}    \n            </ReactMarkdown>}\n        </div>\n    )\n\n}\n\nexport type ApolloRunDappMainItemMobileInternalsProps = {\n    dappItem : DappI,\n    setDappItem : OpenContractReducer,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemMobileInternals : FC<ApolloRunDappMainItemMobileInternalsProps>  = ({\n    dappItem,\n    style,\n    setDappItem,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{\n\n    const _selectedFunc = dappItem.contract && dappItem.contract.contractFunctions ? \n                            dappItem.contract.contractFunctions.filter((func)=>{\n                                return func.name === which\n                            })[0] : undefined\n\n    const selectedFunc = _selectedFunc || (\n        dappItem.contract?.contractFunctions[0]\n    )\n\n    const setFunc = (set : (\n        contractFunction : OpenContractFunctionI\n    )=>OpenContractFunctionI)=>setDappItem((dappItem)=>{\n        return {\n            ...dappItem,\n            contract : dappItem.contract && {\n                ...dappItem.contract,\n                contractFunctions :  dappItem.contract.contractFunctions.reduce((agg, oldContractFunction)=>[\n                    ...agg,\n                    ...(which === oldContractFunction.name) ? [set(oldContractFunction)] : [oldContractFunction]\n                ], [] as OpenContractFunctionI[])\n            }\n        }\n    })\n\n    const handleWhich = (which : string)=>{\n        setGrid && setGrid(false);\n        setWhich && setWhich(which);\n    }\n\n    return (\n\n        <div style={{\n            paddingTop : DesktopSizes.Padding.standard,\n            width : \"100%\",\n            // paddingBottom : DesktopSizes.Padding.whitespacePreferred,\n            ...style\n        }}>\n            <div>\n                <div style={{\n                    textAlign : \"left\",\n                    color : Colors.Maintheme\n                }}>\n                    <h1>{dappItem.contract ? dappItem.contract.contractName : \"\"}</h1>\n                    <ReactMarkdown plugins={[remarkGfm]}>\n                        {dappItem.contract ? dappItem.contract.contractDescription : \"\"}\n                    </ReactMarkdown>\n                </div>\n                <div>\n                    <ApolloRunDappMainItemMobileActions\n                        dapp={dappItem}\n                        gitUrl={dappItem.gitUrl}\n                    />\n                </div>\n                <ApolloRunDappContent grid={grid} setGrid={setGrid}>\n                    <ApolloRunDappContent.Grid>\n                        <ApolloRunDappFunctionGridView\n                            dapp={dappItem}\n                            setWhich={handleWhich}\n                            which={which}\n                        />\n                    </ApolloRunDappContent.Grid>\n                    <ApolloRunDappContent.Single>\n                        <ApolloRunDappFunctionView\n                            dapp={dappItem}\n                            setDappFunction={setFunc}\n                            contractFunction={selectedFunc}\n                        />\n                    </ApolloRunDappContent.Single>\n                </ApolloRunDappContent>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport type ApolloRunDappMainItemMobileProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp : OpenContractReducer,\n    forceLoad ? : boolean,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemMobile : FC<ApolloRunDappMainItemMobileProps>  = ({\n    dappItem,\n    style,\n    updateDapp,\n    which,\n    setWhich,\n    setGrid,\n    grid\n}) =>{\n\n    return (\n\n        <ApolloRunDappMainItemMobileInternals \n            setDappItem={updateDapp} \n            dappItem={dappItem} \n            grid={grid}\n            setGrid={setGrid}\n            which={which}\n            setWhich={setWhich}\n            style={style}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { Coin, Github, InfoCircle, PatchCheckFill, PatchPlus } from 'react-bootstrap-icons';\nimport { PlayFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { DappI, parseGitUrl } from '../Dapp';\nimport { ethers, providers } from 'ethers';\n\nexport type ApolloRunDappMainItemActionsProps = {\n    gitUrl : string,\n    dapp : DappI\n}\n\nexport const ApolloRunDappMainItemActions : FC<ApolloRunDappMainItemActionsProps>  = ({\n    gitUrl,\n    dapp\n}) =>{\n\n    const handleGitHub = ()=>{\n        window.open(`https://github.com/${dapp.owner}/${dapp.repo}/tree/${dapp.branch}`);\n    }\n\n    const getTokens = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).getOPN('3')\n        }\n    }\n\n    const approveHub = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).approveOPN('3')\n        }\n    }\n\n    return (\n\n        <div style={{\n        }}>\n            <p style={{\n                textAlign : \"left\"\n            }}>\n                <InfoCircle size={18}/>&emsp;If this is your first time here, you may need to&nbsp;<a \n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    getTokens()\n                }}\n                style={{\n                    color : \"#99aacc\"\n                }}>get some OPN</a>&nbsp;and&nbsp;<a \n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    approveHub();\n                }}\n                style={{\n                    color : \"#99aacc\"\n                }}>grant access to the Open Contracts hub</a>.\n            </p>\n            <br/>\n            <div style={{\n            display : \"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n            }}>\n                <AthenaButton \n                style={{\n                    border : \"none\",\n                }}\n                onClick={handleGitHub}\n                primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        See on GitHub&emsp;<Github/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n                <AthenaButton\n                    style={{\n                        border : \"none\",\n                    }}\n                    action={getTokens}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        Get OPN&emsp;<Coin/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n                <AthenaButton \n                    style={{\n                        border : \"none\",\n                    }}\n                    action={approveHub}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        Grant Hub Access&emsp;<PatchCheckFill/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n            </div>\n            <br/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName,  getDappContract } from '../Dapp';\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport {ApolloRunDappContent} from \"./ApolloRunDappContent\";\nimport { ApolloRunDappFunctionGridView } from './ApolloRunDappFunctionGridView';\nimport { ApolloRunDappFunctionView } from './ApolloRunDappFunctionView';\nimport { ApolloRunDappMainItemActions } from './ApolloRunDappMainItemActions';\nimport { OpenContractReducer, OpenContractFunctionReducer } from '../../../Types';\n\n\n\nexport type ApolloRunDappMainItemReadmeProps = {\n    style ? : React.CSSProperties,\n    readme : string | undefined\n}\n\nexport const ApolloRunDappMainItemReadMe : FC<ApolloRunDappMainItemReadmeProps> = ({\n    style,\n    readme\n})=>{\n\n    return (\n        <div style={{\n            ...style,\n            textAlign : 'left'\n        }}>\n            {!readme && <Skeleton width=\"100%\" count={5}/>}\n            {readme && <ReactMarkdown plugins={[remarkGfm]}>\n                {readme}    \n            </ReactMarkdown>}\n        </div>\n    )\n\n}\n\nexport type ApolloRunDappMainItemInternalsProps = {\n    dappItem : DappI,\n    setDappItem : OpenContractReducer,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemInternals : FC<ApolloRunDappMainItemInternalsProps>  = ({\n    dappItem,\n    style,\n    setDappItem,\n    grid,\n    setGrid, \n    which,\n    setWhich\n}) =>{\n\n    const _selectedFunc = dappItem.contract && dappItem.contract.contractFunctions ? \n                            dappItem.contract.contractFunctions.filter((func)=>{\n                                return func.name === which\n                            })[0] : undefined\n\n    const selectedFunc = _selectedFunc || (\n        dappItem.contract?.contractFunctions[0]\n    )\n\n    const setFunc = (set : (\n        contractFunction : OpenContractFunctionI\n    )=>OpenContractFunctionI)=>setDappItem((dappItem)=>{\n        return {\n            ...dappItem,\n            contract : dappItem.contract && {\n                ...dappItem.contract,\n                contractFunctions :  dappItem.contract.contractFunctions.reduce((agg, oldContractFunction)=>[\n                    ...agg,\n                    ...(which === oldContractFunction.name) ? [set(oldContractFunction)] : [oldContractFunction]\n                ], [] as OpenContractFunctionI[])\n            }\n        }\n    })\n\n\n    const handleWhich = (which : string)=>{\n        setGrid && setGrid(false);\n        setWhich && setWhich(which);\n    }\n\n    return (\n\n        <div style={{\n            width : \"100%\",\n            ...style\n        }}>\n            <div>\n                <div style={{\n                    textAlign : \"left\",\n                    color : Colors.Maintheme\n                }}>\n                    <h1>{dappItem.contract ? dappItem.contract.contractName : \"\"}</h1>\n                    <ReactMarkdown plugins={[remarkGfm]}>\n                        {dappItem.contract ? dappItem.contract.contractDescription : \"\"}\n                    </ReactMarkdown>\n                </div>\n                <div>\n                    <ApolloRunDappMainItemActions\n                        dapp={dappItem}\n                        gitUrl={dappItem.gitUrl}\n                    />\n                </div>\n                <ApolloRunDappContent \n                    which={selectedFunc ? selectedFunc.name : \"\"}\n                    grid={grid} setGrid={setGrid}>\n                    <ApolloRunDappContent.Grid>\n                        <ApolloRunDappFunctionGridView\n                            dapp={dappItem}\n                            setWhich={handleWhich}\n                            which={which}\n                        />\n                    </ApolloRunDappContent.Grid>\n                    <ApolloRunDappContent.Single>\n                        <ApolloRunDappFunctionView\n                            dapp={dappItem}\n                            setDappFunction={setFunc}\n                            contractFunction={selectedFunc}\n                        />\n                    </ApolloRunDappContent.Single>\n                </ApolloRunDappContent>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport type ApolloRunDappMainItemProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp : OpenContractReducer,\n    forceLoad ? : boolean,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemDesktop : FC<ApolloRunDappMainItemProps>  = ({\n    dappItem,\n    style,\n    updateDapp,\n    grid,\n    setGrid,\n    setWhich,\n    which\n}) =>{\n\n    return (\n\n        <ApolloRunDappMainItemInternals \n        setWhich={setWhich}\n        which={which}\n        grid={grid}\n        setGrid={setGrid}\n        setDappItem={updateDapp} dappItem={dappItem} style={style}/>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport {ApolloRunDappMainItemMobile} from \"./ApolloRunDappMainItemMobile\";\nimport {ApolloRunDappMainItemDesktop} from \"./ApolloRunDappMainItemDesktop\";\nimport { useErrorContext } from '../../../Error/ErrorProvider';\nimport { ApolloRunDappMainItemActions } from './ApolloRunDappMainItemActions';\nimport { MediaResponsive } from '../../../Sytems';\nimport { DappI, getDappName,  getDappContract } from '../Dapp';\nimport { OpenContractReducer } from '../../../Types';\n\nexport type ApolloRunDappMainItemProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    updateDapp : OpenContractReducer,\n    grid : boolean,\n    setGrid : (grid : boolean)=>void,\n    which : string,\n    setWhich : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItem : FC<ApolloRunDappMainItemProps>  = (props) =>{\n\n    document.title = props.dappItem.name || \"Open Contracts - Run\";\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <ApolloRunDappMainItemDesktop \n                grid={props.grid}\n                setGrid={props.setGrid}\n                which={props.which}\n                setWhich={props.setWhich}\n                style={props.style}\n                dappItem={props.dappItem}\n                updateDapp={props.updateDapp}\n             />\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <ApolloRunDappMainItemDesktop \n                    grid={props.grid}\n                    setGrid={props.setGrid}\n                    which={props.which}\n                    setWhich={props.setWhich}\n                    style={props.style}\n                    dappItem={props.dappItem}\n                    updateDapp={props.updateDapp}\n                />\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <ApolloRunDappMainItemMobile\n                    grid={props.grid}\n                    setGrid={props.setGrid}\n                    which={props.which}\n                    setWhich={props.setWhich}\n                    style={props.style}\n                    dappItem={props.dappItem}\n                    updateDapp={props.updateDapp}\n                />\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <ApolloRunDappMainItemMobile\n                    grid={props.grid}\n                    setGrid={props.setGrid}\n                    which={props.which}\n                    setWhich={props.setWhich}\n                    style={props.style}\n                    dappItem={props.dappItem}\n                    updateDapp={props.updateDapp}\n                    />\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { DappI } from '../../Items';\nimport { ApolloRunDappMainItem } from '../../Items/Dapp/ApolloDapp/ApolloRunDappMainItem';\nimport { OpenContractReducer } from '../../Types';\n\nexport type RunBenchDesktopProps = {\n    dapp  : DappI,\n    setDapp : OpenContractReducer,\n    grid : boolean,\n    setGrid : (grid : boolean)=>void,\n    which : string,\n    setWhich : (which : string)=>void\n}\n\nexport const RunBenchDesktop : FC<RunBenchDesktopProps>  = ({\n    dapp, \n    setDapp,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{\n\n    return (\n            <ApolloRunDappMainItem \n            grid={grid}\n            setGrid={setGrid}\n            which={which}\n            setWhich={setWhich}\n            dappItem={dapp} updateDapp={setDapp} />\n       \n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { DappI } from '../../Items';\nimport { OpenContractReducer } from '../../Types';\n\nexport type RunPageWithRepoProps = {\n    dapp : DappI,\n    setDapp : OpenContractReducer,\n    grid : boolean,\n    setGrid : (grid : boolean)=>void,\n    which : string,\n    setWhich : (which : string)=>void\n}\n\nexport const RunPageWithRepo : FC<RunPageWithRepoProps>  = ({\n    dapp,\n    setDapp,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{\n\n    return (<RunBenchDesktop \n        grid={grid}\n        setGrid={setGrid}\n        which={which}\n        setWhich={setWhich}\n        dapp={dapp} setDapp={setDapp}/>)\n\n}","import { Octokit } from \"@octokit/rest\";\nimport to from \"await-to-js\";\nimport {fromByteArray} from \"base64-js\";\nconst { createPullRequest } = require(\"octokit-plugin-create-pull-request\");\n\nexport const MyOctokit = Octokit.plugin(createPullRequest);\nexport const octokit = new MyOctokit({\n    auth : process.env.REACT_APP_GITHUB_TOKEN\n});\n\nexport const getSha = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    const { data: { sha } } = await octokit.request(`GET /repos/${args.owner}/${args.repo}/contents/${args.path}`);\n\n    return sha\n}\n\nexport const getFileBlob = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    return await octokit.rest.git.getBlob({\n        owner : args.owner,\n        repo : args.repo,\n        file_sha : await getSha({\n            owner : args.owner,\n            repo : args.repo,\n            path : args.path\n        })\n    })\n\n}\n\n/**\n * https://stackoverflow.com/questions/30106476/using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\n * @param str \n * @returns \n */\nfunction b64DecodeUnicode(str : string) {\n    return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n    }).join(''))\n}\n\nexport const getFileText = async (args : {\n    owner : string,\n    repo : string,\n    branch ? : string\n    path : string\n}) : Promise<string>=> {\n\n    const [error, text] = await to(\n        (await fetch(`https://raw.githubusercontent.com/${args.owner}/${args.repo}/${args.branch||\"main\"}/${args.path}`)).text()\n    )\n\n    if(error){\n        throw error;\n    }\n\n    return text as string;\n\n}","import { getFileBlob, getFileText, getSha, octokit } from \"../../Sytems/Octokit\";\nimport {to} from \"await-to-js\";\n\nexport interface DappDataI {\n    name : string,\n    readme : string,\n    oracle : string,\n    appTile : string,\n    contract : OpenContractI,\n    openContractsInterface : OpenContractsInterfaceI,\n    dappInterface : OpenContractInterfaceI\n}\n\nexport interface DappI extends Partial<DappDataI>{\n    __isDapp__ : true\n    id : string\n    gitUrl : string,\n    owner : string,\n    repo : string,\n    branch : string,\n    // loaded : boolean\n}\n\nexport const isDapp = (obj : any) : obj is DappI => {\n\n    return obj.__isDapp__;\n\n}\n\nexport const parseGitUrl = (url : string) : {\n    owner : string |undefined,\n    repo : string | undefined,\n    branch : string | undefined\n}=>{\n\n    const _indexCom = url.indexOf(\".com\");\n    const indexCom = _indexCom > 0 ? _indexCom + 4 : 0;\n    const substr = url.substring(indexCom).trim().replace(/^\\/*|-\\/*$/, \"\");\n\n    const split = substr.split(\"/\");\n\n    \n\n    return {\n        owner : split.length ? split[0] : undefined,\n        repo : split.length > 1 ? split[1] : undefined,\n        branch : split.length > 2 ? split[2] : undefined\n    }\n    \n\n}\n\nconst README = 'README.md';\n\nexport const parseName = (readme : string)=>{\n\n    const lines = readme.split(\"\\n\");\n    return lines.length ? \n                    lines[0].replace(/(\\W|\\s)/, \"\").trim()\n                    : \"Unnamed\"\n\n\n}\n\nexport const getDappName = async (dapp : DappI, onGet ? : (name : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    \n\n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n    const name = parseName(readme||\"\");\n\n    onGet && onGet(name);\n\n    return name;\n\n}\n\nexport const isDescriptionLine = (line : string)=>{\n\n    return (\n        line.length < 1 ||\n        line[0] !== \"#\"\n    )\n\n}\n\nexport const getDescriptionLines = (readme : string) : [number, number]=>{\n\n    const lines = readme.split(\"\\n\");\n\n    if(lines.length < 2){\n        return [-1, -1];\n    }\n\n    if(!isDescriptionLine(lines[1])){\n        return [-1, -1];\n    }\n\n    let i = 1;\n    while(i < lines.length && isDescriptionLine(lines[i])) ++i;\n\n    return [1, i];\n\n}\n\nexport const parseDescription = (readme : string) : string=>{\n\n    const descriptionLines = getDescriptionLines(readme);\n\n    return readme.split(\"\\n\").slice(descriptionLines[0], descriptionLines[1] + 1).join(\"\\n\");\n\n}\n\nexport const getDescription = async (dapp : DappI, onGet ? : (description : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n\n    const description = parseDescription(readme||\"\");\n\n\n    onGet && onGet(description);\n\n    return description;\n\n}\n\nexport const SOLIDITY = \"contract.sol\";\n\nexport const getDappSolidityContract = async (dapp : DappI, onGet ? : (contract : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, contract] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : SOLIDITY\n    })) : [undefined, \"\"];\n\n    if(err) throw err;\n\n    onGet && onGet(contract||\"\");\n\n    return contract||\"\";\n\n}\n\nexport const ORACLE = \"oracle.py\";\n\nexport const getDappOracle = async (dapp : DappI, onGet ? : (oracle : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const oracle = owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : ORACLE\n    }) : \"\";\n\n    onGet && onGet(oracle);\n\n    return oracle;\n\n}\n\nexport const APPTILE = \"tile\";\n\nexport const imageUriFromRepoAndOwner = (args : {\n    owner : string,\n    repo : string,\n    branch ? : string\n    type : string\n})=>{\n\n    return `https://raw.githubusercontent.com/${args.owner}/${args.repo}/${args.branch||\"main\"}/${APPTILE}.${args.type}`\n\n}\n\nexport const getDappImageUri = async (dapp : DappI, onGet ? : (imageUri : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    let uri =  \"\";\n    try {\n\n        const ext = \"png\";\n\n        await getFileBlob({\n            owner : owner||\"\",\n            repo : repo||\"\",\n            path : `${APPTILE}.${ext}`\n        })\n\n        uri = owner && repo ? imageUriFromRepoAndOwner({\n            owner : owner,\n            repo : repo,\n            type : ext\n        })  : \"\"\n\n    \n\n    } catch(e){\n\n        try {\n\n            const ext = \"jpg\"\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n\n        } catch(e){\n\n            const ext = \"jpg\"\n\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n        }\n\n    } \n\n    onGet && onGet(uri);\n\n    return uri;\n\n}\n\nexport const getDappReadMe = async (dapp : DappI, onGet ? : (readme : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const readme = decodeURI(owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    }) : \"\");\n\n    onGet && onGet(readme);\n\n    return readme;\n\n}\n\nexport const jsonInterfacePath = \"interface.json\";\nexport const getDappInterface = async (\n    dapp : DappI,\n    onGet ? : (dappInterface : OpenContractInterfaceI)=>void\n) : Promise<OpenContractInterfaceI>=>{\n\n    const dappInterface = (dapp.owner && dapp.repo) ? JSON.parse(\n        await getFileText({\n            owner : dapp.owner,\n            repo : dapp.repo,\n            branch : dapp.branch,\n            path : jsonInterfacePath\n        })\n    ) : undefined\n\n    if(!dappInterface){\n        throw new Error(\"Failed to find a Dapp Interface.\");\n    }\n\n    onGet && onGet(dappInterface);\n\n    return dappInterface;\n\n}\n\nexport const ocInterfacePath = \"/client-protocol/opencontracts_interface.json\"\nexport const getOpenContractsInterface = async (\n    onGet ? : (dappInterface : OpenContractsInterfaceI)=>void\n) : Promise<OpenContractsInterfaceI>=>{\n\n    \n\n    const ocInterface = JSON.parse(await (await fetch(ocInterfacePath)).text())\n\n    if(!ocInterface){\n        throw new Error(\"Failed to find the Open Contracts interface for this site.\");\n    }\n\n    onGet && onGet(ocInterface);\n\n    return ocInterface;\n\n}\n\nexport const getDappContract = async (\n    dapp : DappI,\n    onGet ? : (contract : OpenContractI)=>void\n) : Promise<OpenContractI>=>{\n\n    const opencontract = await window.OpenContracts();\n    const openContractsInterface = dapp.openContractsInterface || await getOpenContractsInterface();\n    const contractLocation = '@git/' + window.location.hash.slice(2);\n    await opencontract.parseContracts(openContractsInterface, contractLocation);\n\n    onGet && onGet(opencontract);\n\n    return opencontract;\n\n}\n\nexport const getDappInfo = async (\n    dapp : DappI\n)=>{\n\n    \n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    return owner && repo && await octokit.rest.repos.get({\n        owner : owner,\n        repo : repo\n    });\n\n}\n","import React, {FC, ReactElement, useState} from 'react';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { TextInputApollo } from '../../Components/TextInput';\nimport { useNavigate } from 'react-router-dom';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors } from '../../Theme';\nimport { parseGitUrl } from '../../Items';\nimport { DappI } from '../../Items';\nimport { OpenContractReducer } from '../../Types';\n\nexport type RunPageNoRepoProps = {\n    setDapp : OpenContractReducer,\n}\n\n\nexport const RunPageNoRepo : FC<RunPageNoRepoProps>  = ({\n    setDapp\n}) =>{\n\n    const navigate = useNavigate();\n    const [text, setText] = useState(\"\");\n\n    const handleSubmit = ()=>{\n\n        const {\n            owner,\n            repo,\n            branch\n        } = parseGitUrl(text);\n\n        setDapp(()=>({\n            __isDapp__ : true,\n            gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n            id : `${owner}/${repo}/${branch||\"main\"}`,\n            owner : owner || \"\",\n            repo : repo || \"\", \n            branch : branch || \"main\",\n            // loaded : false\n        }));\n\n        navigate(`/${owner}/${repo}/${branch||\"main\"}`);\n\n    }\n\n    const handleEnter = (text : string)=>{\n        const {\n            owner,\n            repo,\n            branch\n        } = parseGitUrl(text);\n\n        setDapp(()=>({\n            __isDapp__ : true,\n            gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n            id : `${owner}/${repo}/${branch||\"main\"}`,\n            owner : owner || \"\",\n            repo : repo || \"\", \n            branch : branch || \"main\",\n            // loaded : false\n        }));\n\n        navigate(`/${owner}/${repo}/${branch||\"main\"}`);\n\n    }\n\n    return (\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <TextInputApollo \n            onSubmit={handleEnter}\n            placeholder={\"Enter repo\"}\n            onTextInput={setText}/>&emsp;<AthenaButton \n            onClick={handleSubmit}\n            primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                Submit\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { RunPageWithRepo } from './RunPageWithRepo';\nimport { RunPageNoRepo } from './RunPageNoRepo';\nimport { DappI } from '../../Items';\nimport {OpenContractReducer} from \"../../Types\";\n\nexport type ReadyToRunProps = {\n    dapp : DappI,\n    setDapp : OpenContractReducer,\n    grid : boolean,\n    setGrid : (grid : boolean)=>void,\n    which : string,\n    setWhich : (which : string)=>void\n}\n\nexport const ReadyToRun : FC<ReadyToRunProps>  = ({\n    dapp,\n    setDapp,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{    \n\n    return (dapp.owner.length && dapp.repo.length) ?\n    (<RunPageWithRepo \n        grid={grid}\n        setGrid={setGrid}\n        which={which}\n        setWhich={setWhich}\n        dapp={dapp} setDapp={setDapp}/>) :\n    (<RunPageNoRepo setDapp={setDapp}/>)\n\n}","import React, {FC, ReactElement, useReducer} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport {ReadyToRun} from \"./ReadyToRun\";\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {useParams} from \"react-router-dom\";\nimport { useErrorContext } from '../../Error/ErrorProvider';\nimport { DappI, getDappName,  getDappContract } from \"../../Items\";\n\nexport type RunPageProps = {\n    stepStatus : StepStatusT,\n    setStepStatus : (status : StepStatusT)=>void\n}\n\nexport const RunPage : FC<RunPageProps>  = ({\n    stepStatus\n}) =>{\n\n    const {\n        owner,\n        repo,\n        branch\n    } = useParams();\n\n    const [dapp, setDapp] = useReducer(\n        (dapp : DappI, set :(dapp : DappI)=>DappI)=>{\n            return set(dapp);\n        },\n        {\n            __isDapp__ : true,\n            gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n            id : `${owner}/${repo}/${branch||\"main\"}`,\n            owner : owner || \"\",\n            repo : repo || \"\", \n            branch : branch || \"main\",\n        } \n    )\n\n    const [loc, setLoc] = useState<string>(window.location.hash);\n    useEffect(()=>{\n        if(loc !== window.location.hash){\n            setDapp(()=>({\n                __isDapp__ : true,\n                gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n                id : `${owner}/${repo}/${branch||\"main\"}`,\n                owner : owner || \"\",\n                repo : repo || \"\", \n                branch : branch || \"main\"\n            }));\n            setLoc(window.location.hash);\n        }\n    }, [window.location.hash]); // I don't believe this dep array actually does anything.\n\n    const [grid, setGrid] = useState(true);\n    const [which, setWhich] = useState<string>(\"\");\n\n    // Logic for loading the contract\n    const {\n        dispatch\n    } = useErrorContext();\n\n\n    const [nameLoad, setNameLoad] = useState<string|undefined>(undefined);\n    useEffect(()=>{\n\n        if(!nameLoad && dapp.owner.length && dapp.repo.length){\n            getDappName(\n                dapp,\n                (name : string)=>setNameLoad(name)\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [dapp.name])\n    useEffect(()=>{\n\n        if(dapp.name !== nameLoad){\n            setDapp((dapp)=>{\n                return {\n                    ...dapp,\n                    name : nameLoad\n                }\n            })\n        }\n\n    })\n\n    const [contractLoad, setContractLoad] = useState<OpenContractI|undefined>(undefined);\n    useEffect(()=>{\n\n        if(!dapp.contract && dapp.owner.length && dapp.repo.length){\n            \n            getDappContract(\n                dapp,\n                (contract : OpenContractI)=>{\n                    setContractLoad(contract);\n                    setWhich(contract.contractFunctions[0].name);\n                }\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [dapp.contract?.contractName])\n    useEffect(()=>{\n\n        if(contractLoad && (dapp.contract !== contractLoad)){\n            setDapp(()=>({\n                ...dapp,\n                contract : contractLoad\n            }))\n        }\n\n    }, [contractLoad])\n\n\n    const page = (<ReadyToRun \n    grid={grid}\n    setGrid={setGrid}\n    which={which}\n    setWhich={setWhich}\n    dapp={dapp} \n    setDapp={setDapp}/>);\n\n    return (\n        <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        {page}\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                       {page}\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                       {page}\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        {page}\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n    )\n\n}","import React from \"react\";\n\nexport const Members = [\"Title\", \"Info\", \"Content\"] as const;\n\nexport type StepMemberI = typeof Members[number];\nexport type StepStylesT = {\n    [key in StepMemberI] : React.CSSProperties\n} & {\n    wrapper : React.CSSProperties\n}\n","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\n\nexport type StepPreProps = {\n    next ? : ()=>void\n}\n\nconst StepPre : FC<StepPreProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    next,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            y : [300, 0]\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : 1\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.Maintheme\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : [0, 0, 0, 0, 1.0]\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 1.25\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                <motion.div \n                    animate={{\n                        opacity : [0, 0, 1.0],\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 2.0\n                    }}\n                >\n                    {Content}\n                </motion.div>\n            </div>\n    )\n\n}\n\nStepPre.Title = generateNamedMember(\"Title\");\nStepPre.Info = generateNamedMember(\"Info\");\nStepPre.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPre}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {Check} from \"react-bootstrap-icons\";\n\nexport type SucceededStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const SucceededStepPost : FC<SucceededStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <motion.div \n            onAnimationComplete={()=>{\n                done && done(true);\n            }}\n            animate={{\n                opacity : [1.0, 1.0, 1.0, 0.0],\n                scale : [1.0, .75, .25, .05],\n                position : [\"relative\", \"relative\", \"relative\", \"relative\"],\n                y : [0, 0, -200, -300],\n                x : [0, 0, 200, 300]\n            }}\n            transition={{\n                ease : \"easeInOut\",\n                duration : .8\n            }}\n        >\n           {children}\n           <motion.div\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    width : [0, 80],\n                    color : Colors.readyGreen\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .2\n                }}\n            >\n                <Check size={60}/>\n            </motion.div>\n        </motion.div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {X} from \"react-bootstrap-icons\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type FailedStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const FailedStepPost : FC<FailedStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <div>\n           {children}\n           <motion.div\n                onAnimationComplete={()=>{\n                    done && done(false);\n                }}\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    scale : [0, 1.5, 1.1, 1.0, 1.0],\n                    color : Colors.failedRed\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .4\n                }}\n            >\n                <X size={60}/>\n            </motion.div>\n            <motion.div\n                style={{\n                    display: \"grid\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\" \n                }}\n                animate={{\n                    display : [\"none\", \"block\"],\n                    opacity : [0.0, 0.0, 0.0, 1.0],\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .8\n                }}\n            >\n                <AthenaButton \n                    onClick={()=>{\n                        window.location.reload();\n                    }}\n                    size={\"lg\"}\n                    primaryColor={Colors.Maintheme} \n                    secondaryColor={Colors.primaryTextColor}>Retry</AthenaButton>\n            </motion.div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport {SucceededStepPost} from \"./SuceededStepPost\";\nimport {FailedStepPost} from \"./FailedStepPost\";\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type StepPostProps = {\n    done ? : (success : boolean)=>void,\n    success ? : boolean\n}\n\nconst StepPost : FC<StepPostProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    done,\n    success,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\",\n                justifyContent : \"center\",\n                justifyItems : \"center\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            opacity : success ? [1.0, .25, 0] : 1.0,\n                            y : success ? [0, 0, 100] : 0\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : .8\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.Maintheme\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : success ? [1.0, 0, 0] : 1.0\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : .8\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                {success && <SucceededStepPost done={done}>\n                    {Content}\n                </SucceededStepPost>}\n                {!success && <FailedStepPost done={done}>\n                    {Content}\n                </FailedStepPost>}\n            </div>\n    )\n\n}\n\nStepPost.Title = generateNamedMember(\"Title\");\nStepPost.Info = generateNamedMember(\"Info\");\nStepPost.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPost}","import React, {FC, ReactElement} from 'react';\nimport { StepContainer } from './StepContainer';\nimport { StepPre, } from './StepPre';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport { Members } from './StepType';\nimport {StepPost} from \"./StepPost\";\nimport { ReadyT } from '../../Ready/AristophanesReady/AristophanesReady';\n\n\nexport type StepProps = {\n    style ? : React.CSSProperties,\n    ready ? : ReadyT,\n    done ? : (success : boolean)=>void\n}\n\nconst Step : FC<StepProps> & {\n    \n    Title : FC,\n    Info : FC,\n    Content : FC\n\n}  = ({\n    style,\n    children,\n    done,\n    ready = \"not ready\"\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children)\n\n    return (\n\n        <>{ready === \"not ready\" ? <StepPre>\n            <StepPre.Title>\n                {Title}\n            </StepPre.Title>\n            <StepPre.Info>\n                {Info}\n            </StepPre.Info>\n            <StepPre.Content>\n                {Content}\n            </StepPre.Content>\n        </StepPre> : ready === \"ready\" ? \n        <StepPost success={true} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost> : \n        <StepPost success={false} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost>\n        }\n        \n        </>\n\n    )\n\n}\n\nStep.Title = generateNamedMember(\"Title\");\nStep.Info = generateNamedMember(\"Info\");\nStep.Content = generateNamedMember(\"Content\");\n\nexport {Step}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type CrtStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const CrtStep : FC<CrtStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}\n        >\n            <Step.Title>\n                Step 2: Checking Root CA\n            </Step.Title>\n            <Step.Info>\n                You must have installed our Root CA to use this application.\n            </Step.Info>\n            <Step.Content>\n                <Key size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type WalletStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const WalletStep : FC<WalletStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}>\n            <Step.Title>\n               Connecting to MetaMask\n            </Step.Title>\n            <Step.Info>\n                We need to connect to your MetaMask to run the application.\n            </Step.Info>\n            <Step.Content>\n                <img \n                    width={60}\n                    src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/1200px-MetaMask_Fox.svg.png\"}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\nimport { CpuFill } from 'react-bootstrap-icons';\nimport { useState } from 'react';\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\n\nexport type EnclaveStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const EnclaveStep : FC<EnclaveStepProps>  = ({\n    ready,\n    done \n}) =>{\n\n    return (\n\n        <Step ready={ready} done={done}>\n            <Step.Title>\n                Step 3: Connecting to an enclave\n            </Step.Title>\n            <Step.Info>\n                Any oracles that require an enclave will be executed against the one we find for you.\n            </Step.Info>\n            <Step.Content>\n                <CpuFill size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {ReadyT} from \"../../Components/Ready/AristophanesReady\";\nimport { CrtStep } from './CrtStep';\nimport {WalletStep} from \"./WalletStep\";\nimport {EnclaveStep} from \"./EnclaveStep\";\n\nexport const AllSteps = [\"wallet\"];\n\nexport type StepStatusT = {\n    [key in typeof AllSteps[number]] : ReadyT\n}\n\nexport type StepsProps = {\n    done ? : (which : string, success : boolean)=>void\n    status ? : StepStatusT,\n    which ? : typeof AllSteps[number],\n}\n\nexport const Steps : FC<StepsProps>  = ({\n    done,\n    status = {\n        crt : \"not ready\",\n        wallet : \"not ready\",\n        enclave : \"not ready\"\n    },\n    which  = \"crt\"\n}) =>{\n\n    const handleDone = (success : boolean)=>{\n        done && done(which, success);\n    }\n\n    if(which === \"crt\"){\n\n        return (\n            <CrtStep ready={status[which]} done={handleDone}/>\n        )\n\n    }\n\n    if(which === \"wallet\"){\n        return (\n            <WalletStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    if(which === \"enclave\"){\n        return (\n            <EnclaveStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    return (\n\n        <>Step not found.</>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {Steps, AllSteps, StepStatusT} from \"./Steps\";\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\nimport { ethers } from 'ethers';\n\nexport const checkMetaMaskAvail =  async () : Promise<StepStatusT>=>{\n\n    return new Promise((resolve, reject)=>{\n\n        window.OpenContracts().then(async (data)=>{\n\n            (data as any).provider.listAccounts().then((accounts : any[])=>{\n                if(accounts.length > 0){\n                    resolve({\n                        wallet : \"ready\"\n                    })\n                    return;\n                } \n                resolve({\n                    wallet : \"failed\"\n                })\n            })\n\n        }).catch(()=>{\n            reject({\n                wallet : \"failed\"\n            })\n        })\n    })\n}\n\nexport type RunStepsProps = {\n    done ? : ()=>void,\n    setStepStatus ? : (stepStatus : StepStatusT)=>void,\n    stepStatus : StepStatusT\n}\n\nexport const RunSteps : FC<RunStepsProps>  = ({\n    done,\n    setStepStatus,\n    stepStatus\n}) =>{\n\n    const [stepIndex, setStepIndex] = useState(0);\n    const [allDone, setAllDone] = useState(false);\n\n    const handleDone = (which : string, success : boolean)=>{\n        const index = AllSteps.indexOf(which);\n        if((index !== undefined) && (index < AllSteps.length - 1) && success){\n            setStepIndex(stepIndex + 1);\n            return;\n        }\n        if((index !== undefined) && (index > AllSteps.length - 2) && success){\n            setAllDone(true);\n        }\n    }\n\n    useEffect(()=>{\n\n       checkMetaMaskAvail().then((data)=>{\n            setStepStatus && setStepStatus(data)\n        }).catch((data)=>{\n            setStepStatus && setStepStatus(data);\n        })\n\n    }, [])\n\n    useEffect(()=>{\n        if(allDone){\n            done && done();\n        }\n    })\n\n    return (\n\n        <Steps \n        done={handleDone}\n        which={AllSteps[stepIndex]}\n        status={stepStatus}/>\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {Step} from \"../../Components/Walkthrough/Step\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {RunSteps} from \"../../Statics/Steps/RunSteps\";\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport { ethers } from 'ethers';\n\ndeclare global {\n    interface Window {\n        ethereum : ethers.providers.ExternalProvider\n    }\n}\n\nexport type NotReadyToRunProps = {\n\n    handleAllDone : ()=>void,\n    stepStatus : StepStatusT,\n    setStepStatus : (stepStatus : StepStatusT)=>void\n\n}\n\nexport const NotReadyToRun : FC<NotReadyToRunProps>  = ({\n    handleAllDone,\n    stepStatus,\n    setStepStatus\n}) =>{\n   \n    return (<RunSteps done={handleAllDone} setStepStatus={setStepStatus} stepStatus={stepStatus}/>);\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { NotReadyToRun} from \"./NotReadyToRun\";\nimport {useCheckStore} from \"../../Sytems/CheckProvider\";\nimport { MediaResponsive } from '../../Sytems';\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport { MainLayoutDesktop, MainLayoutMobile } from '../../Layouts';\nimport { HeaderResponsive } from '../../Maps/Headers';\n\nexport type CheckPageProps = {\n    stepStatus : StepStatusT,\n    setStepStatus : (status : StepStatusT)=>void\n}\n\nexport const CheckPage : FC<CheckPageProps>  = ({\n    stepStatus,\n    setStepStatus\n}) =>{\n\n    const {\n        dispatch\n    } = useCheckStore();\n\n    const handleAllDone = ()=>dispatch((state)=>({\n        ...state,\n        checksCompleted : true\n    }));\n\n    const page = <NotReadyToRun \n    setStepStatus={setStepStatus} \n    stepStatus={stepStatus} \n    handleAllDone={handleAllDone}/>;\n\n    return (\n\n        <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        {page}\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                       {page}\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                       {page}\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        {page}\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { useCheckStore } from '../../Sytems';\nimport {RunPage} from \"../Run\";\nimport { CheckPage } from '../CheckPage/CheckPage';\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\n\nexport type MainPageProps = {}\n\nexport const MainPage : FC<MainPageProps>  = () =>{\n\n    const {\n        checksCompleted\n    } = useCheckStore()\n\n    const [stepStatus, setStepStatus] = useState<StepStatusT>({\n        wallet : \"not ready\",\n    });\n\n    return checksCompleted ? <RunPage stepStatus={stepStatus}\n    setStepStatus={setStepStatus}/> \n    : <CheckPage stepStatus={stepStatus}\n    setStepStatus={setStepStatus}/>\n\n}","import React, {FC, ReactElement} from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { IntegratedErrorBoundary } from '../Error/IntegratedErrorBoundary';\nimport { RunPage } from '../Pages';\nimport { ErrorPage } from '../Pages/ErrorPage';\nimport { CheckProvider } from '../Sytems';\nimport {MainPage} from \".././Pages/MainPage\"\n\nexport type MainRouterProps = {}\n\nexport const MainRouter : FC<MainRouterProps>  = () =>{\n\n    return (\n\n        <HashRouter>\n            <CheckProvider>\n                <IntegratedErrorBoundary>\n                    <Routes>\n                        <Route path=\"/:owner/:repo/:branch/error\" element={<ErrorPage/>}/>\n                        <Route path=\"/:owner/:repo/:branch\" element={<MainPage/>}/>\n                        <Route path=\"/:owner/:repo/error\" element={<MainPage/>}/>\n                        <Route path=\"/:owner/:repo\" element={<MainPage/>}/>\n                        <Route path=\"/error\" element={<ErrorPage/>}/>\n                        <Route path=\"/\" element={<MainPage/>}/>\n                    </Routes>\n                </IntegratedErrorBoundary>\n            </CheckProvider>\n        </HashRouter>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MainRouter } from \"../Router\";\n\n\nexport type MainSegmentProps = {}\n\nexport const MainSegment : FC<MainSegmentProps>  = () =>{\n\n    return (<MainRouter/>)\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './App.css';\nimport \"./CSS/Main.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { MainRouter } from './Router';\nimport { MainSegment } from './Segments';\nimport {editor} from \"monaco-editor\";\nimport {Colors} from \"./Theme\"\nimport { RunPage } from './Pages';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{\n      height : \"100vh\",\n      overflow : \"scroll\"\n    }}>\n      <MainSegment/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
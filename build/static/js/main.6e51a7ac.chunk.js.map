{"version":3,"sources":["Error/ErrorProvider/ErrorProvider.tsx","Error/ErrorProvider/ErrorDispatch.tsx","Error/UniversalErrorBoundary/UniversalErrorBoundary.tsx","Theme/Colors.tsx","Theme/DesktopSizes.tsx","Theme/Shadows.tsx","Error/ErrorNotification/CrashLogo.tsx","Error/ErrorNotification/ErrorNotification.tsx","Error/IntegratedErrorBoundary/IntegratedErrorBoundary.tsx","Components/Walkthrough/Step/StepType.ts","Components/Walkthrough/Step/StepPre.tsx","Components/Walkthrough/Step/SuceededStepPost.tsx","Components/Buttons/AthenaButton/AthenaButton.tsx","Components/Walkthrough/Step/FailedStepPost.tsx","Components/Walkthrough/Step/StepPost.tsx","Components/Walkthrough/Step/Step.tsx","Statics/Steps/CrtStep.tsx","Statics/Steps/WalletStep.tsx","Statics/Steps/EnclaveStep.tsx","Statics/Steps/Steps.tsx","Statics/Steps/RunSteps.tsx","Pages/Run/NotReadyToRun.tsx","Items/Dapp/ApolloDapp/ApolloRunDappContent.tsx","Sytems/MediaResponsive/MediaResponsive.tsx","Items/DappPut/Standards/DefaultHeader.tsx","Items/DappPut/DappInput/DappInputHeader.tsx","Glitter/Animations/ThroughGlass/ThroughGlassAgathocles.tsx","Glitter/Animations/Grow/GrowOnEventAchamaenid.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunction.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionsMobile.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionGridView.tsx","Items/DappPut/DappInput/DappInput.tsx","Items/DappPut/DappPutLayout.tsx","Items/DappPut/DappInteractput/DappInteractputHeader.tsx","Items/DappPut/DappInteractput/DappInteractputContent.tsx","Items/DappPut/Methods/color.ts","Items/DappPut/DappInteractput/DappInteractput.tsx","Items/DappPut/DappOutput/DappOutputHeader.tsx","Items/DappPut/DappOutput/DappOutputContent.tsx","Items/DappPut/DappOutput/DappOutput.tsx","Items/DappPut/DappErrput/DappErrputHeader.tsx","Items/DappPut/DappErrput/DappErrputContent.tsx","Items/DappPut/DappErrput/DappErrput.tsx","Items/DappPut/DappDescput/DappDescputHeader.tsx","Items/DappPut/DappDescput/DappDescputContent.tsx","Items/DappPut/DappDescput/DappDescput.tsx","Items/DappPut/DappOracleput/DappOracleputHeader.tsx","Items/DappPut/DappOracleput/OracleLink.tsx","Items/DappPut/DappOracleput/DappOracleputContent.tsx","Items/DappPut/DappOracleput/DappOracleput.tsx","Items/DappPut/DappResultput/DappResultputHeader.tsx","Items/DappPut/DappResultput/DappResultputContent.tsx","Items/DappPut/DappResultput/DappResultput.tsx","Items/DappPut/DappOracleInput/DappOracleInputHeader.tsx","Components/TextInput/TextInputApollo.tsx","Items/DappPut/DappOracleInput/DappOracleInputContent.tsx","Items/DappPut/DappOracleInput/DappOracleInput.tsx","Items/DappPut/DappOracleCallput/DappOracleCallput.tsx","Items/DappPut/DappWaitingPut/DappWaitingPutHeader.tsx","Components/ProgressBar/ProgressBarAlan.tsx","Items/DappPut/DappWaitingPut/DappWaitingPutContent.tsx","Items/DappPut/DappWaitingPut/DappWaitingPut.tsx","Items/DappPut/DappPut/DappPut.tsx","Items/DappFunction/StateMethods.tsx","Items/DappFunction/DappFunctionLogRunButton.tsx","Items/DappFunction/DappFunctionSubmitState.tsx","Items/DappFunction/DappFunctionLog.tsx","Items/DappFunction/DappFunctionAthena.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionView.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemMobileActions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemMobile.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemActions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemDesktop.tsx","Sytems/Octokit/index.ts","Items/Dapp/Dapp.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItem.tsx","Benches/Run/RunBenchDesktop.tsx","Pages/Run/RunPageWithRepo.tsx","Pages/Run/RunPageNoRepo.tsx","Pages/Run/ReadyToRun.tsx","Layouts/Header/HeaderLayoutDesktop.tsx","Layouts/Header/HeaderLayoutMobile.tsx","Layouts/Main/MainLayoutDesktop.tsx","Layouts/Main/MainLayoutMobile.tsx","Theme/ColorProvider.tsx","Glitter/Logos/LogoB.tsx","Components/Ready/AristophanesReady/AristophanesReady.tsx","Components/Ready/AristophanesReady/AristophanesReadyStack.tsx","Maps/ConnectionStatus/ConnectionStatus.tsx","Maps/Headers/HeaderDesktop.tsx","Maps/Headers/HeaderMobile.tsx","Maps/Headers/HeaderResponsive.tsx","Pages/Run/RunPage.tsx","Pages/ErrorPage/ErrorPage.tsx","Router/MainRouter.tsx","Segments/MainSegment.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DefaultErrorContext","errorLoading","errorValidating","errorLoaded","error","undefined","dispatch","ErrorContext","createContext","ErrorReducer","state","action","ErrorProvider","initialerror","children","navigate","useNavigate","useReducer","useEffect","Provider","value","useErrorContext","context","useContext","Error","ErrorDispatch","UniversalErrorBoundary","props","this","React","Component","Colors","Maintheme","primaryTextColor","secondaryTextColor","tertiaryTextColor","quartenaryTextColor","backgroundColorSecondary","logoColor","readyGreen","waitingYellow","failedRed","greenCeramic","forestEdge","fadedRed","lilac","deepPurple","skyBlue","royalBlue","babyBlue","infoYellow","arizonaOrange","cyan","deepCyan","bloodOrange","jonasGray","backgroundGray","DesktopSizes","contentWidth","standard","whitespacePreferred","Shadows","defaultShadow","CrashLogo","color","style","height","width","id","xmlns","viewBox","shapeRendering","textRendering","clipPath","transform","d","fill","fillRule","stroke","strokeWidth","rx","ry","ErrorNotification","errorText","display","gridTemplateRows","justifyContent","alignContent","margin","toUpperCase","IntegratedErrorBoundary","Members","StepPre","next","getComponentMembers","Title","Info","Content","gridTemplateColumns","motion","div","animate","position","y","transition","ease","duration","opacity","generateNamedMember","SucceededStepPost","done","onAnimationComplete","scale","x","overflow","size","AthenaButton","className","label","primaryColor","secondaryColor","invert","disabled","active","loading","hovered","e","a","onClick","onMouseEnter","onMouseLeave","useState","setDisabled","isActive","setActive","isLoading","setLoading","setE","then","invertedBackground","Color","lighten","contrast","hex","isHovered","setHovered","_isHovered","Button","variant","boxShadow","cursor","backgroundColor","Spinner","animation","FailedStepPost","justifyItems","window","location","reload","StepPost","success","Step","ready","CrtStep","WalletStep","src","EnclaveStep","AllSteps","Steps","status","crt","wallet","enclave","which","handleDone","checkMetaMaskAvail","Promise","resolve","reject","OpenContracts","data","provider","listAccounts","accounts","length","catch","RunSteps","setStepStatus","stepStatus","stepIndex","setStepIndex","allDone","setAllDone","index","indexOf","NotReadyToRun","handleAllDone","ApolloRunDappContent","grid","setGrid","Single","Grid","flexDirection","flexGrow","alignItems","zIndex","top","borderBottomRightRadius","borderBottomLeftRadius","borderTop","borderLeft","borderBottom","borderRight","fontSize","background","borderTopRightRadius","MediaResponsive","Desktop","Laptop","Tablet","Mobile","minWidth","maxWidth","DefaultHeader","dappPut","Pre","Post","paddingBottom","textAlign","name","description","DappInputHeader","dappInput","type","ThroughGlassAgathocles","glass","glassOpacity","GrowOnEventAchamaenid","grow","ApolloDappFunction","dapp","func","selected","inputs","map","input","wordWrap","border","overflowX","overflowY","padding","requiresOracle","ApolloDappFunctions","setWhich","onFunctionClick","funcs","contract","contractFunctions","paddingRight","borderRadius","paddingLeft","paddingTop","breakpointCols","ApolloDappFunctionsMobile","ApolloRunDappFunctionGridView","DappInput","setInput","DappPutLayout","end","Header","overflowWrap","borderCollapse","DappInteractputHeader","dappInteractput","DappInteractputContent","failedWindow","setFailedWindow","newWindow","open","sessionUrl","xpraExit","close","closed","darken","href","DappInteractput","DappOutputHeader","dappOutput","DappOutputContent","navigator","clipboard","writeText","DappOutput","DappErrputHeader","dappErrput","DappErrputContent","DappErrput","DappDescputHeader","dappDescput","DappDescputContent","DappDescput","userSelect","DappOracleputHeader","dappOracleput","OracleLink","link","DappOracleputContent","contractFunction","oracleData","Object","keys","reduce","agg","key","oracleStatii","setOracleStatii","oracleStates","setOracleStates","oraclePromiseReject","obj","allResolved","resolveCount","countPromisesResolved","links","oraclePromiseResolve","DappOracleput","DappResultputHeader","dappResultput","DappResultputContent","setResultput","DappResultput","errors","DappOracleInputHeader","dappOracleInput","TextInputApollo","onTextInput","rest","Form","Control","defaultValue","onChange","target","onKeyDown","onSubmit","DappOracleInputContent","setOracleInput","text","oracleInputs","response","gap","placeholder","DappOracleInput","reduceContractFunction","DappOracleCallput","dappOracleCallput","justifySelf","call","DappWaitingPutHeader","dappWaitingPut","ProgressBarAlan","progress","_duration","opac","Math","floor","parseInt","toString","DappWaitingPutContent","Date","getSeconds","timeStarted","DappWaitingPut","DappPut","put","putType","allPromisesResolved","createErrors","resetArgs","createXpras","xpras","xpra","createOutputs","prints","print","createOracleInputs","prompt","createOracleCallPut","setFunc","createResult","resetInputs","createWaitingPut","seconds","message","removeWaitingPut","puts","filter","DappFunctionLogRunButton","pure","lineHeight","newInput","slice","borderTopLeftRadius","DappFunctionSubmitState","loadOracleData","resolved","count","called","setCalled","handleCall","ClientError","DappFunctionLog","setFunctionState","update","reducedFunctionState","reduceFunctionState","oc","log","updatedPuts","addOutput","newOutput","result","waiting","printHandler","addOracleInput","newOracleInput","generate","inputHandler","addError","newError","handleError","errorHandler","addOracleData","addResult","to","githubOracleDownloader","owner","repo","branch","oracleFolder","addOracleCallput","callOracle","handleSubmit","submitHandler","err","addInteractput","targetUrl","newXpra","xpraHandler","addWaitingPut","waitHandler","DappFunctionAthena","setDappFunction","ApolloRunDappFunctionView","ApolloRunDappMainItemMobileActions","gitUrl","getTokens","getOPN","approveHub","approveOPN","preventDefault","ApolloRunDappMainItemMobileInternals","dappItem","setDappItem","selectedFunc","contractName","contractDescription","newContractFunctions","oldContractFunction","ApolloRunDappMainItemMobile","updateDapp","ApolloRunDappMainItemActions","ApolloRunDappMainItemInternals","ApolloRunDappMainItemDesktop","createPullRequest","require","Octokit","plugin","auth","process","REACT_APP_GITHUB_TOKEN","getFileText","args","fetch","path","parseGitUrl","url","_indexCom","indexCom","split","substring","trim","replace","README","parseName","readme","lines","getDappName","onGet","getDappInterface","JSON","parse","dappInterface","getOpenContractsInterface","ocInterface","getDappContract","opencontract","openContractsInterface","parseContracts","ApolloRunDappMainItem","nameLoad","setNameLoad","contractLoad","setContractLoad","RunBenchDesktop","setDapp","RunPageWithRepo","RunPageNoRepo","setText","__isDapp__","ReadyToRun","HeaderLayoutDesktop","Brand","Nav","Account","HeaderLayoutMobile","MainLayoutDesktop","Footer","MainLayoutMobile","DefaultColorContext","colors","ColorContext","useColorStore","LogoB","main","post","fontColor","_logoColor","_fontColor","DefaultExpressions","DefaultColors","AristophanesReady","right","expressions","information","lightStyle","_expressions","_information","_colors","onMouseOver","onMouseOut","title","verticalAlign","AristophanesReadyStack","ConnectionStatus","stack","address","setAddress","signer","ethers","providers","Web3Provider","ethereum","getSigner","getAddress","HeaderDesktop","HeaderMobile","handleSelect","item","HeaderResponsive","RunPage","readyToRun","setReadyToRun","useParams","hash","loc","setLoc","page","ErrorPage","MainRouter","element","MainSegment","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e51a7ac.chunk.js","sourcesContent":["import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nexport interface ErrorContextI {\n    errorLoading : boolean,\n    errorValidating : boolean,\n    errorLoaded : boolean,\n    error : undefined | Error,\n    dispatch : (fn : (state : ErrorContextI)=>ErrorContextI)=>void\n}\n\nconst DefaultErrorContext : ErrorContextI = {\n    errorLoading : false,\n    errorValidating : false,\n    errorLoaded : false,\n    error : undefined,\n    dispatch : ()=>{}\n}\n\n\nexport const ErrorContext = createContext(DefaultErrorContext);\n\nexport const ErrorReducer = (\n    state : ErrorContextI, \n    action : (state : ErrorContextI)=>ErrorContextI\n)=>{\n    return action(state);\n}\n\nexport type ErrorProviderProps = {\n    initialerror? : {\n        [key : string] : any\n    } \n}\n\nexport const ErrorProvider : FC<ErrorProviderProps>  = ({\n    initialerror,\n    children\n}) =>{\n\n    const navigate = useNavigate();\n\n    const [state, dispatch] = useReducer(ErrorReducer, DefaultErrorContext);\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && !state.errorValidating){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    dispatch : dispatch,\n                    errorValidating : true,\n                }\n            })\n\n        }\n\n    })\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && state.errorValidating && state.dispatch){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    errorValidating : false,\n                    errorLoaded : true\n                }\n            })\n\n\n        } \n    })\n\n    useEffect(()=>{\n\n        \n\n        if(state.error){\n            navigate(\"/error\");\n            dispatch((state)=>{\n                return {\n                    ...state,\n                    error : state.error\n                }\n            })\n        }\n\n    }, [state.error])\n\n    return (\n\n        <ErrorContext.Provider value={{\n            ...state,\n            dispatch : dispatch\n        }}>\n                {children}\n        </ErrorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useErrorContext = () : ErrorContextI=>{\n\n    const context = useContext(ErrorContext);\n\n    if(!context){\n        throw new Error(\"useerror must be called within a ErrorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useErrorContext } from './ErrorProvider';\n\nexport type ErrorDispatchProps = {\n    error : Error\n}\n\nexport const ErrorDispatch : FC<ErrorDispatchProps>  = ({\n    error\n}) =>{\n\n    const {\n        dispatch \n    } = useErrorContext();\n\n    useEffect(()=>{\n        dispatch((state)=>{\n            return {\n                ...state,\n                error : error\n            }\n        })\n    })\n\n    return (\n\n        <>\n        \n\n        </>\n\n    )\n\n}","import React, { ErrorInfo } from \"react\";\nimport {ErrorDispatch, useErrorContext} from \"../ErrorProvider\";\n\ntype UniversalErrorBoundaryProps = {\n\n}\n\ntype UniversalErrorBoundaryStateI = {\n    error : Error | undefined\n}\n\nexport class UniversalErrorBoundary extends React.Component<UniversalErrorBoundaryProps, UniversalErrorBoundaryStateI> {\n    state : UniversalErrorBoundaryStateI = {\n        error : undefined\n    }\n\n    constructor(props : UniversalErrorBoundaryProps) {\n      super(props);\n      this.state = { error: undefined };\n    }\n  \n    static getDerivedStateFromError(error : Error) {\n      // Update state so the next render will show the fallback UI.\n      \n      return { error: error };\n    }\n  \n    render() {\n\n      \n\n      if (this.state.error) {\n\n        return <ErrorDispatch error={this.state.error}/>;\n      }\n  \n      return this.props.children; \n    }\n  }","export const Colors = {\n    Maintheme : \"#373737\",\n    primaryTextColor : \"#FAF9F6\",\n    secondaryTextColor : \"#515151\",\n    tertiaryTextColor : \"#979797\",\n    quartenaryTextColor : \"#f1f1f1\",\n    backgroundColorSecondary : \"#D7D7D7\",\n    logoColor : \"#D7D7D7\",\n    readyGreen : \"#11db1e\",\n    waitingYellow : \"#fceb2f\",\n    failedRed : \"#ff0000\",\n    greenCeramic : \"#addcc9\",\n    forestEdge : \"#06955f\",\n    fadedRed : \"#f7a8a6\",\n    lilac : \"#C8A2C8\",\n    deepPurple: \"#d2a6cc\",\n    skyBlue : \"#bdd7ee\",\n    royalBlue : \"#4169e1\",\n    babyBlue : \"#4499ab\",\n    infoYellow : \"#faf264\",\n    arizonaOrange : \"#fdd2b5\",\n    cyan : \"#00b5b5\",\n    deepCyan : \"#004584\",\n    bloodOrange : \"#cc8866\",\n    jonasGray : \"#C3C3C3\",\n    backgroundGray : \"#F9F9FB\"\n} as const","export const DesktopSizes = {\n    Main : {\n        contentWidth : 950\n    },\n    Padding : {\n        standard : \"10px\",\n        whitespacePreferred : \"40px\"\n    },\n    BorderRadius : {\n        standard : \"5px\"\n    }\n} as const","import { Colors } from \"./Colors\";\n\nexport const Shadows = {\n    defaultShadow :`0px 2px 8px 2px ${Colors.Maintheme}44`,\n} as const;","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\n\nexport type CrashLogoProps = {\n    color? : React.CSSProperties[\"color\"],\n    style ? : React.CSSProperties\n}\n\nexport const CrashLogo : FC<CrashLogoProps>  = ({\n    color = Colors.Maintheme,style\n}) =>{\n\n    return (\n\n        <div style={{\n            height : \"200px\",\n            width : \"200px\",\n            ...style\n        }}>\n            <svg id=\"e7l4ir2eLhD1\" xmlns=\"http://www.w3.org/2000/svg\" \n                viewBox=\"0 0 1295 1296\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\">\n                <g id=\"e7l4ir2eLhD2\" clipPath=\"url(#e7l4ir2eLhD5)\">\n                    <g id=\"e7l4ir2eLhD3\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <path id=\"e7l4ir2eLhD4\"\n                            d=\"M2281.32,449.263L2551.39,449.263L2552.12,450.769C2584.88,528.295,2603,613.53,2603,703C2603,792.47,2584.88,877.705,2552.12,955.231L2550.93,957.704L2280.6,957.704L2298.15,934.214C2342.71,868.213,2368.72,788.647,2368.72,703C2368.72,617.353,2342.71,537.787,2298.15,471.786ZM1955.5,55C2156.65,55,2336.38,146.796,2455.14,290.812L2455.18,290.863L1983.28,290.863L1955.5,289.459C1727.28,289.459,1542.28,474.608,1542.28,703C1542.28,931.392,1727.28,1116.54,1955.5,1116.54L1964.14,1116.1L2454.31,1116.1L2413.35,1161.21C2296.18,1278.47,2134.3,1351,1955.5,1351C1597.9,1351,1308,1060.88,1308,703C1308,345.119,1597.9,55,1955.5,55Z\"\n                            transform=\"matrix(0.103391 -0.251703 0.251703 0.103391 1297.463604 955.789861)\"\n                            fill={color} fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" />\n                    </g>\n                    <clipPath id=\"e7l4ir2eLhD5\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <rect id=\"e7l4ir2eLhD6\" width=\"1295\" height=\"1296\" rx=\"0\" ry=\"0\" transform=\"matrix(1 0 0 1 1308 55)\"\n                            fill={color} stroke=\"none\" strokeWidth=\"1\" />\n                    </clipPath>\n                </g>\n                <path id=\"e7l4ir2eLhD7\"\n                    d=\"M811.27241,1085.63037L755.48824,1058.06402L880.4497,805.18796C880.42923,804.69885,880.41891,804.20759,880.41891,803.71433C880.41891,797.8312,881.88713,792.2333,884.53541,787.16032L770.96006,668.53597L631.91347,909.37173L576.15756,877.18104L724.58424,620.0985L691.31772,585.35311L550.79195,828.75088L495.03604,796.56019L644.94189,536.91564L639.59344,531.32943L584.21684,514.54791L599.70208,463.44887L651.53212,479.15564C655.22556,478.48418,660.01241,479.17178,664.73022,481.33136C671.28682,484.33265,675.77869,489.29288,676.39603,493.6522L933.50579,762.19179C959.69536,763.51273,980.44439,781.59804,980.44439,803.71435C980.44439,811.51833,977.86091,818.82042,973.36652,825.06115L1011.26733,1101.2539L949.62144,1109.71331L916.96606,871.74531L811.27241,1085.63037Z\"\n                    fill={color} stroke=\"none\" strokeWidth=\"0\" />\n            </svg>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\nimport { CrashLogo } from './CrashLogo';\n\nexport type ErrorNotificationProps = {\n    errorText? : string,\n    style? : React.CSSProperties\n}\n\nexport const ErrorNotification : FC<ErrorNotificationProps>  = ({\n    errorText = \"Sorry, our site encountered an error. Please try refreshing the page.\", \n    style\n}) =>{\n\n    return (\n\n        <div style={{\n            display : \"grid\",\n            gridTemplateRows : \"5fr 1fr\",\n            width : \"100%\",\n            ...style\n        }}>\n            <div style={{\n                width : \"100%\",\n                justifyContent : \"center\",\n                alignContent : \"center\"\n            }}>\n                <CrashLogo style={{\n                    width : \"300px\",\n                    height : \"300px\",\n                    margin : \"auto\",\n                }}/>\n                <h6>{errorText.toUpperCase()}</h6>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ErrorProvider } from '../ErrorProvider';\nimport { UniversalErrorBoundary } from '..';\n\nexport type IntegratedErrorBoundaryProps = {}\n\nexport const IntegratedErrorBoundary : FC<IntegratedErrorBoundaryProps>  = ({\n    children\n}) =>{\n\n    return (\n\n        <ErrorProvider>\n            <UniversalErrorBoundary>\n                {children}\n            </UniversalErrorBoundary>\n        </ErrorProvider>\n\n    )\n\n}","import React from \"react\";\n\nexport const Members = [\"Title\", \"Info\", \"Content\"] as const;\n\nexport type StepMemberI = typeof Members[number];\nexport type StepStylesT = {\n    [key in StepMemberI] : React.CSSProperties\n} & {\n    wrapper : React.CSSProperties\n}\n","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\n\nexport type StepPreProps = {\n    next ? : ()=>void\n}\n\nconst StepPre : FC<StepPreProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    next,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            y : [300, 0]\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : 1\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.Maintheme\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : [0, 0, 0, 0, 1.0]\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 1.25\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                <motion.div \n                    animate={{\n                        opacity : [0, 0, 1.0],\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 2.0\n                    }}\n                >\n                    {Content}\n                </motion.div>\n            </div>\n    )\n\n}\n\nStepPre.Title = generateNamedMember(\"Title\");\nStepPre.Info = generateNamedMember(\"Info\");\nStepPre.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPre}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {Check} from \"react-bootstrap-icons\";\n\nexport type SucceededStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const SucceededStepPost : FC<SucceededStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <motion.div \n            onAnimationComplete={()=>{\n                done && done(true);\n            }}\n            animate={{\n                opacity : [1.0, 1.0, 1.0, 0.0],\n                scale : [1.0, .75, .25, .05],\n                position : [\"relative\", \"relative\", \"relative\", \"relative\"],\n                y : [0, 0, -200, -300],\n                x : [0, 0, 200, 300]\n            }}\n            transition={{\n                ease : \"easeInOut\",\n                duration : .8\n            }}\n        >\n           {children}\n           <motion.div\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    width : [0, 80],\n                    color : Colors.readyGreen\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .2\n                }}\n            >\n                <Check size={60}/>\n            </motion.div>\n        </motion.div>\n\n    )\n\n}","import Color from \"color\";\nimport React, { FC, useEffect, useState } from 'react';\nimport {Button, Spinner } from \"react-bootstrap\";\nimport { Colors, Shadows } from \"../../../Theme\";\n\n\n/**\n * @initialAuthor\n * @contributors\n */\n\n/**\n * @description\n */\nexport type AthenaButtonProps = {\n    className ? : string,\n    label?: string,\n    primaryColor: React.CSSProperties[\"color\"],\n    secondaryColor: React.CSSProperties[\"color\"],\n    invert? : boolean,\n    disabled?: boolean,\n    active?: boolean,\n    hovered? : boolean,\n    loading?: boolean,\n    size?: \"sm\" | \"lg\" | undefined,\n    action? : (e? : React.MouseEvent)=>Promise<void>,\n    onClick? : (e : React.MouseEvent)=>void,\n    onMouseEnter? : (e : React.MouseEvent)=>void,\n    onMouseLeave? : (e : React.MouseEvent)=>void,\n    style?: React.CSSProperties\n}\n\n/**\n * @description \n */\nexport const AthenaButton : FC<AthenaButtonProps>  = ({\n    className,\n    label, \n    primaryColor, \n    secondaryColor,\n    children,\n    invert=false,\n    disabled=false,\n    active=false,\n    loading=false,\n    size=undefined,\n    hovered,\n    action=async (e? : React.MouseEvent)=>{return},\n    onClick=(e: React.MouseEvent)=>{},\n    onMouseEnter=(e: React.MouseEvent)=>{},\n    onMouseLeave=(e: React.MouseEvent)=>{},\n    style\n}) =>{\n\n    const [isDisabled, setDisabled] = useState(disabled);\n    const [isActive, setActive] = useState(active);\n    const [isLoading, setLoading] = useState(loading);\n    const [e, setE] = useState<React.MouseEvent|undefined>(undefined)\n\n    useEffect(()=>{\n        if(isLoading){\n            action(e).then(()=>{\n                setDisabled(false);\n                setLoading(false);\n                setActive(false);\n            })\n        }\n    }, [isLoading])\n\n\n\n    const invertedBackground = Color(primaryColor).lighten(1/(10 - Color(primaryColor).contrast(Color(secondaryColor)))).hex()\n\n    const handleClick = (e : React.MouseEvent<HTMLElement>)=>{\n        onClick(e);\n        setE(e);\n        setDisabled(true);\n        setLoading(true);\n        setActive(true);\n        setHovered(false);\n    }\n\n    const [isHovered, setHovered] = useState(false); \n    const handleMouseEnter = (e : React.MouseEvent)=>{\n        setHovered(true);\n        onMouseEnter(e);\n    }\n    const handleMouseLeave = (e : React.MouseEvent)=>{\n        setHovered(false);\n        onMouseLeave(e);\n    }\n\n    const _isHovered = isHovered || hovered;\n\n    return (\n\n        <Button\n            // className={className ? className : \"shadow-sm\"}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            variant={`outline`}\n            disabled={isLoading||disabled}\n            active={isActive||active}\n            size={size}\n            onClick={handleClick}\n            style={{\n                boxShadow : Shadows.defaultShadow,\n                cursor: \"pointer\",\n                transition: _isHovered? \"all .1s ease-in-out\" : \"\",\n                display: \"inline-block\",\n                color: _isHovered? secondaryColor : !invert ? primaryColor : secondaryColor,\n                backgroundColor: _isHovered? primaryColor : invert ? invertedBackground : secondaryColor,\n                ...style\n            }}\n        >{label||children}<span style={{display: isLoading||loading ? \"inline-block\" : \"none\"}}>&ensp;</span><Spinner\n            animation=\"border\"\n            style={{\n                display : isLoading||loading ? \"inline-block\" : \"none\", \n                height : \"15px\",\n                width: \"15px\"\n            }}\n            ></Spinner>\n        </Button>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {X} from \"react-bootstrap-icons\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type FailedStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const FailedStepPost : FC<FailedStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <div>\n           {children}\n           <motion.div\n                onAnimationComplete={()=>{\n                    done && done(false);\n                }}\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    scale : [0, 1.5, 1.1, 1.0, 1.0],\n                    color : Colors.failedRed\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .4\n                }}\n            >\n                <X size={60}/>\n            </motion.div>\n            <motion.div\n                style={{\n                    display: \"grid\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\" \n                }}\n                animate={{\n                    display : [\"none\", \"block\"],\n                    opacity : [0.0, 0.0, 0.0, 1.0],\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .8\n                }}\n            >\n                <AthenaButton \n                    onClick={()=>{\n                        window.location.reload();\n                    }}\n                    size={\"lg\"}\n                    primaryColor={Colors.Maintheme} \n                    secondaryColor={Colors.primaryTextColor}>Retry</AthenaButton>\n            </motion.div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport {SucceededStepPost} from \"./SuceededStepPost\";\nimport {FailedStepPost} from \"./FailedStepPost\";\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type StepPostProps = {\n    done ? : (success : boolean)=>void,\n    success ? : boolean\n}\n\nconst StepPost : FC<StepPostProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    done,\n    success,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\",\n                justifyContent : \"center\",\n                justifyItems : \"center\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            opacity : success ? [1.0, .25, 0] : 1.0,\n                            y : success ? [0, 0, 100] : 0\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : .8\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.Maintheme\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : success ? [1.0, 0, 0] : 1.0\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : .8\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                {success && <SucceededStepPost done={done}>\n                    {Content}\n                </SucceededStepPost>}\n                {!success && <FailedStepPost done={done}>\n                    {Content}\n                </FailedStepPost>}\n            </div>\n    )\n\n}\n\nStepPost.Title = generateNamedMember(\"Title\");\nStepPost.Info = generateNamedMember(\"Info\");\nStepPost.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPost}","import React, {FC, ReactElement} from 'react';\nimport { StepContainer } from './StepContainer';\nimport { StepPre, } from './StepPre';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport { Members } from './StepType';\nimport {StepPost} from \"./StepPost\";\nimport { ReadyT } from '../../Ready/AristophanesReady/AristophanesReady';\n\n\nexport type StepProps = {\n    style ? : React.CSSProperties,\n    ready ? : ReadyT,\n    done ? : (success : boolean)=>void\n}\n\nconst Step : FC<StepProps> & {\n    \n    Title : FC,\n    Info : FC,\n    Content : FC\n\n}  = ({\n    style,\n    children,\n    done,\n    ready = \"not ready\"\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children)\n\n    return (\n\n        <>{ready === \"not ready\" ? <StepPre>\n            <StepPre.Title>\n                {Title}\n            </StepPre.Title>\n            <StepPre.Info>\n                {Info}\n            </StepPre.Info>\n            <StepPre.Content>\n                {Content}\n            </StepPre.Content>\n        </StepPre> : ready === \"ready\" ? \n        <StepPost success={true} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost> : \n        <StepPost success={false} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost>\n        }\n        \n        </>\n\n    )\n\n}\n\nStep.Title = generateNamedMember(\"Title\");\nStep.Info = generateNamedMember(\"Info\");\nStep.Content = generateNamedMember(\"Content\");\n\nexport {Step}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type CrtStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const CrtStep : FC<CrtStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}\n        >\n            <Step.Title>\n                Step 2: Checking Root CA\n            </Step.Title>\n            <Step.Info>\n                You must have installed our Root CA to use this application.\n            </Step.Info>\n            <Step.Content>\n                <Key size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type WalletStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const WalletStep : FC<WalletStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}>\n            <Step.Title>\n               Connecting to MetaMask\n            </Step.Title>\n            <Step.Info>\n                We need to connect to your MetaMask to run the application.\n            </Step.Info>\n            <Step.Content>\n                <img \n                    width={60}\n                    src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/1200px-MetaMask_Fox.svg.png\"}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\nimport { CpuFill } from 'react-bootstrap-icons';\nimport { useState } from 'react';\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\n\nexport type EnclaveStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const EnclaveStep : FC<EnclaveStepProps>  = ({\n    ready,\n    done \n}) =>{\n\n    return (\n\n        <Step ready={ready} done={done}>\n            <Step.Title>\n                Step 3: Connecting to an enclave\n            </Step.Title>\n            <Step.Info>\n                Any oracles that require an enclave will be executed against the one we find for you.\n            </Step.Info>\n            <Step.Content>\n                <CpuFill size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {ReadyT} from \"../../Components/Ready/AristophanesReady\";\nimport { CrtStep } from './CrtStep';\nimport {WalletStep} from \"./WalletStep\";\nimport {EnclaveStep} from \"./EnclaveStep\";\n\nexport const AllSteps = [\"wallet\"];\n\nexport type StepStatusT = {\n    [key in typeof AllSteps[number]] : ReadyT\n}\n\nexport type StepsProps = {\n    done ? : (which : string, success : boolean)=>void\n    status ? : StepStatusT,\n    which ? : typeof AllSteps[number],\n}\n\nexport const Steps : FC<StepsProps>  = ({\n    done,\n    status = {\n        crt : \"not ready\",\n        wallet : \"not ready\",\n        enclave : \"not ready\"\n    },\n    which  = \"crt\"\n}) =>{\n\n    const handleDone = (success : boolean)=>{\n        done && done(which, success);\n    }\n\n    if(which === \"crt\"){\n\n        return (\n            <CrtStep ready={status[which]} done={handleDone}/>\n        )\n\n    }\n\n    if(which === \"wallet\"){\n        return (\n            <WalletStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    if(which === \"enclave\"){\n        return (\n            <EnclaveStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    return (\n\n        <>Step not found.</>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {Steps, AllSteps, StepStatusT} from \"./Steps\";\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\nimport { ethers } from 'ethers';\n\nexport const checkMetaMaskAvail =  async () : Promise<StepStatusT>=>{\n\n    return new Promise((resolve, reject)=>{\n\n        window.OpenContracts().then(async (data)=>{\n\n            (data as any).provider.listAccounts().then((accounts : any[])=>{\n                if(accounts.length > 0){\n                    resolve({\n                        wallet : \"ready\"\n                    })\n                    return;\n                } \n                resolve({\n                    wallet : \"failed\"\n                })\n            })\n\n        }).catch(()=>{\n            reject({\n                wallet : \"failed\"\n            })\n        })\n    })\n}\n\nexport type RunStepsProps = {\n    done ? : ()=>void,\n    setStepStatus ? : (stepStatus : StepStatusT)=>void,\n    stepStatus : StepStatusT\n}\n\nexport const RunSteps : FC<RunStepsProps>  = ({\n    done,\n    setStepStatus,\n    stepStatus\n}) =>{\n\n    const [stepIndex, setStepIndex] = useState(0);\n    const [allDone, setAllDone] = useState(false);\n\n    const handleDone = (which : string, success : boolean)=>{\n        const index = AllSteps.indexOf(which);\n        if((index !== undefined) && (index < AllSteps.length - 1) && success){\n            setStepIndex(stepIndex + 1);\n            return;\n        }\n        if((index !== undefined) && (index > AllSteps.length - 2) && success){\n            setAllDone(true);\n        }\n    }\n\n    useEffect(()=>{\n\n       checkMetaMaskAvail().then((data)=>{\n            setStepStatus && setStepStatus(data)\n        }).catch((data)=>{\n            setStepStatus && setStepStatus(data);\n        })\n\n    }, [])\n\n    useEffect(()=>{\n        if(allDone){\n            done && done();\n        }\n    })\n\n    return (\n\n        <Steps \n        done={handleDone}\n        which={AllSteps[stepIndex]}\n        status={stepStatus}/>\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {Step} from \"../../Components/Walkthrough/Step\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {RunSteps} from \"../../Statics/Steps/RunSteps\";\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport { ethers } from 'ethers';\n\ndeclare global {\n    interface Window {\n        ethereum : ethers.providers.ExternalProvider\n    }\n}\n\nexport type NotReadyToRunProps = {\n\n    handleAllDone : ()=>void,\n    stepStatus : StepStatusT,\n    setStepStatus : (stepStatus : StepStatusT)=>void\n\n}\n\nexport const NotReadyToRun : FC<NotReadyToRunProps>  = ({\n    handleAllDone,\n    stepStatus,\n    setStepStatus\n}) =>{\n   \n    return (<RunSteps done={handleAllDone} setStepStatus={setStepStatus} stepStatus={stepStatus}/>);\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport {AthenaButton} from \"../../../Components/Buttons\";\nimport {Colors, DesktopSizes, Shadows} from \"../../../Theme\";\nimport {Grid3x3GapFill} from \"react-bootstrap-icons\";\n\nconst Members = [\"Single\", \"Grid\"]\n\n\nexport type ApolloRunDappContentProps = {\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void\n    which ? : string\n}\n\nconst ApolloRunDappContent : FC<ApolloRunDappContentProps> & {\n    Single : FC,\n    Grid : FC\n}  = ({\n    children,\n    grid,\n    setGrid,\n    which\n}) =>{\n\n    const {\n        Single,\n        Grid\n    } = getComponentMembers(Members, children);\n\n    const handleGrid = ()=>{\n        setGrid && setGrid(true);\n    }\n    const handleSingle = ()=>{\n        setGrid && setGrid(false);\n    }\n\n    \n\n    return (\n\n        <div \n        style={{\n            display : \"flex\",\n            flexDirection : \"column\",\n            flexGrow : 1\n        }}>\n            <div style={{\n                display : \"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                position : \"relative\",\n                overflow  : \"visible\"\n            }}>\n                <AthenaButton\n                    className=\"none\"\n                    onClick={handleGrid}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={grid ? Colors.jonasGray : Colors.quartenaryTextColor}\n                    style={{\n                        boxShadow : \"none\",\n                        height : \"50px\",\n                        width : \"60px\",\n                        zIndex : 1000,\n                        position : \"relative\",\n                        top : grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop :  \"none\",\n                        borderLeft : \"none\",\n                        borderBottom : grid ? `1px solid ${Colors.jonasGray}` : \"none\",\n                        borderRight :  \"none\"\n                    }}\n                >\n                    <Grid3x3GapFill size={20}/>\n                </AthenaButton>\n                <AthenaButton\n                    className=\"none\"\n                    onClick={handleSingle}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={!grid ? Colors.jonasGray : Colors.quartenaryTextColor}\n                    style={{\n                        boxShadow : \"none\",\n                        zIndex : 100,\n                        position : \"relative\",\n                        top : !grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop :  \"none\",\n                        borderLeft : \"none\",\n                        borderBottom : !grid ? `1px solid ${Colors.jonasGray}` : \"none\",\n                        borderRight :  \"none\",\n                        fontSize : \"24px\"\n                    }}\n                >\n                    <b>ƒ<sub>𝑥</sub></b>&ensp;{which}\n                </AthenaButton>\n            </div>\n            <div style={{\n                boxShadow : Shadows.defaultShadow,\n                flexGrow : 1,\n                zIndex : 0,\n                background : Colors.jonasGray,\n                borderTopRightRadius : DesktopSizes.BorderRadius.standard,\n                borderBottomLeftRadius : DesktopSizes.BorderRadius.standard,\n                borderBottomRightRadius : DesktopSizes.BorderRadius.standard\n            }}>\n                {grid ? Grid : Single}\n            </div>\n        </div>\n\n    )\n\n}\n\nApolloRunDappContent.Grid = generateNamedMember(\"Grid\");\nApolloRunDappContent.Single = generateNamedMember(\"Single\");\n\nexport {ApolloRunDappContent}","import React, {Children, FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport MediaQuery from \"react-responsive\";\n\nconst Members = [\"Desktop\", \"Laptop\", \"Tablet\", \"Mobile\"] as const;\n\nexport type MediaResponsiveProps = {}\n\n/**\n * Uses media queries to control component display by media type.\n * @param param0 \n * @returns a ReactNode displaying the appropriate component view by media type.\n */\nconst MediaResponsive : FC<MediaResponsiveProps> & {\n    Desktop : FC,\n    Laptop : FC,\n    Tablet : FC,\n    Mobile : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Desktop,\n        Laptop,\n        Tablet,\n        Mobile\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <>\n            <MediaQuery minWidth={1200}>\n                {Desktop}\n            </MediaQuery>   \n            <MediaQuery minWidth={992} maxWidth={1199}>\n                {Laptop}\n            </MediaQuery>\n            <MediaQuery minWidth={768} maxWidth={991}>\n                {Tablet}\n            </MediaQuery>\n            <MediaQuery maxWidth={767}>\n                {Mobile}\n            </MediaQuery>\n        </>\n\n    )\n\n}\n\nMediaResponsive.Desktop = generateNamedMember(\"Desktop\");\nMediaResponsive.Laptop = generateNamedMember(\"Laptop\");\nMediaResponsive.Tablet = generateNamedMember(\"Tablet\");\nMediaResponsive.Mobile = generateNamedMember(\"Mobile\")\n\nexport { MediaResponsive };\n\n","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappPutI } from '../DappPutType';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Pre\", \"Post\"];\n\nexport type DefaultHeaderProps = {\n    dappPut : DappPutI,\n    style ? : React.CSSProperties\n}\n\nconst DefaultHeader : FC<DefaultHeaderProps> & {\n    Pre : FC,\n    Post : FC\n}  = ({\n    dappPut,\n    children,\n    style\n}) =>{\n\n    const {\n        Pre,\n        Post\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            paddingBottom : DesktopSizes.Padding.standard\n        }}>\n            <div style={{\n                display :\"grid\",\n                gridTemplateColumns : \"30px auto\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                fontSize : \"20px\",\n                color : Colors.Maintheme,\n                textAlign : \"left\",\n                ...style\n            }}>\n                <div>\n                    <b>{Pre}</b>\n                </div>\n                <div>\n                    {dappPut.name}{Post}\n                </div>\n            </div>\n            <div>\n                {dappPut.description && <><br/>\n                <p style={{\n                    color : Colors.secondaryTextColor\n                }}>\n                {dappPut.description}\n                </p></>}\n            </div>\n        </div>\n\n    )\n\n}\n\nDefaultHeader.Pre = generateNamedMember(\"Pre\");\nDefaultHeader.Post = generateNamedMember(\"Post\");\n\nexport {DefaultHeader}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappInputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappInputHeaderProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n}\n\nexport const DappInputHeader : FC<DappInputHeaderProps>  = ({\n    dappInput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappInput} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}>{dappInput.type}</i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\n\nexport type ThroughGlassAgathoclesProps = {\n    glass ? : boolean,\n    style ? : React.CSSProperties,\n    glassOpacity ? : React.CSSProperties[\"opacity\"]\n}\n\nexport const ThroughGlassAgathocles : FC<ThroughGlassAgathoclesProps>  = ({\n    glass = false,\n    glassOpacity = \".95\",\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n            style={{\n                opacity : glass ? glassOpacity : \"1.0\",\n                ...style\n            }}>\n                {children}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\n\nexport type GrowOnEventAchamaenidProps = {\n    grow ? : boolean,\n    style? : React.CSSProperties\n}\n\nexport const GrowOnEventAchamaenid : FC<GrowOnEventAchamaenidProps>  = ({\n    grow = false,\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n        className={grow ? \"grow\" : \"anti-grow\"}\n        style={{\n            ...style\n        }}>\n            {children}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {DappI} from \"../Dapp\";\nimport {AthenaButton} from \"../../../Components/Buttons/AthenaButton\";\nimport {Colors, DesktopSizes} from \"../../../Theme\";\nimport { DappInputHeader } from '../../DappPut/DappInput/DappInputHeader';\nimport { DappInputI } from '../../DappPut/DappPutType';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\n\nexport type ApolloDappFunctionProps = {\n    dapp : DappI,\n    func : OpenContractFunctionI,\n    selected : boolean,\n    onClick ? : (\n        e : React.MouseEvent,\n        name : string\n    )=>void,\n    style ? : React.CSSProperties\n}\n\nexport const ApolloDappFunction : FC<ApolloDappFunctionProps>  = ({\n    dapp,\n    func,\n    selected,\n    onClick,\n    style \n}) =>{\n\n    const handleClick = (e : React.MouseEvent)=>{\n        onClick && onClick(e, func.name);\n    }\n\n    const inputs = func.inputs.map((input)=>{\n        return (<DappInputHeader\n            key={input.name}\n            dappInput={input as DappInputI} style={{\n            fontSize : \"16px\"\n        }}/>)\n    })\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n     \n        <ThroughGlassAgathocles \n            style={{\n                overflow : \"visible\"\n            }}\n            glass={isHovered} glassOpacity={.7}>\n            <GrowOnEventAchamaenid grow={isHovered}>\n            <AthenaButton \n                onMouseEnter={handleMouseOver}\n                onMouseLeave={handleMouseOut}\n                onClick={handleClick}\n                    style={{\n                        wordWrap : \"normal\",\n                        width : \"auto\",\n                        fontSize : \"18px\",\n                        border : \"none\",\n                        ...style\n                    }}\n                \n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                        <div style={{\n                            overflowX : \"scroll\",\n                            overflowY : \"scroll\",\n                            padding : DesktopSizes.Padding.standard\n                        }}>\n                                <div style={{\n                                    display : \"flex\",\n                                    justifyContent : \"left\",\n                                    alignContent : \"center\",\n                                    alignItems : \"center\",\n                                    fontSize : \"18px\"\n                                }}>\n                                    <div>\n                                        <b>ƒ<sub>𝑥</sub></b>&emsp;\n                                    </div>\n                                    <hr style={{\n                                        color : Colors.Maintheme\n                                    }}/>\n                                    <div>\n                                        {func.name}\n                                    </div>\n                                </div>  \n                                <div>\n                                    {inputs}\n                                </div>\n                                <div style={{\n                                    textAlign : \"left\"\n                                }}>\n                                    {func.requiresOracle && <i style={{\n                                        color : Colors.cyan,\n                                        fontSize : \"16px\",\n                                        textAlign : \"left\"\n                                    }}>\n                                        Oracle required.  \n                                    </i>}\n                                </div>\n                        </div>\n                </AthenaButton>\n            </GrowOnEventAchamaenid>\n    </ThroughGlassAgathocles>\n\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CollectionFill } from 'react-bootstrap-icons';\nimport { DappI } from '../Dapp';\nimport {ApolloDappFunction} from \"./ApolloRunDappFunction\";\nimport {LeftRightScrollAdorno} from \"../../../Components/Scroll/LeftRightScroll\";\nimport { DesktopSizes } from '../../../Theme';\nimport Masonry from \"react-masonry-css\";\n\nexport type ApolloDappFunctionsProps = {\n    dapp : DappI,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloDappFunctions : FC<ApolloDappFunctionsProps>  = ({\n    dapp,\n    which,\n    setWhich\n}) =>{\n\n    const onFunctionClick = (e : React.MouseEvent, name : string)=>{\n        setWhich && setWhich(name);\n    }\n\n\n    const funcs = dapp.contract && dapp.contract ? dapp.contract.contractFunctions.map((func, index)=>{\n\n\n        return (\n            <div \n            key={func.name}\n            style={{\n                overflow : \"visible\",\n                paddingRight : DesktopSizes.Padding.standard,\n                paddingBottom : DesktopSizes.Padding.standard,\n                width : \"100%\"\n            }}>\n                <ApolloDappFunction \n                    style={{\n                        width : \"100%\",\n                        height : \"auto\",\n                        borderRadius : DesktopSizes.BorderRadius.standard\n                    }}\n                    onClick={onFunctionClick}\n                    selected={func.name === which} \n                    dapp={dapp} \n                    func={func}/>\n            </div>\n        )\n    }) : <></>\n\n    return (\n\n        <div style={{\n            paddingLeft : DesktopSizes.Padding.standard,\n            paddingTop : DesktopSizes.Padding.standard\n        }}>\n            <Masonry \n                style={{\n                    overflow : \"visible\"\n                }}\n                className={\"masonry\"}\n                breakpointCols={3}>\n                {funcs}\n            </Masonry>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CollectionFill } from 'react-bootstrap-icons';\nimport { DappI } from '../Dapp';\nimport {ApolloDappFunction} from \"./ApolloRunDappFunction\";\nimport {LeftRightScrollAdorno} from \"../../../Components/Scroll/LeftRightScroll\";\nimport { DesktopSizes } from '../../../Theme';\nimport Masonry from \"react-masonry-css\";\n\nexport type ApolloDappFunctionsMobileProps = {\n    dapp : DappI,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloDappFunctionsMobile : FC<ApolloDappFunctionsMobileProps>  = ({\n    dapp,\n    which,\n    setWhich\n}) =>{\n\n    const onFunctionClick = (e : React.MouseEvent, name : string)=>{\n        setWhich && setWhich(name);\n    }\n\n\n    const funcs = dapp.contract && dapp.contract ? dapp.contract.contractFunctions.map((func, index)=>{\n\n\n        return (\n            <div style={{\n                paddingTop : index === 0 ? DesktopSizes.Padding.standard : 0,\n                paddingLeft : DesktopSizes.Padding.standard,\n                paddingRight : DesktopSizes.Padding.standard,\n                paddingBottom : DesktopSizes.Padding.standard,\n                overflow : \"visible\"\n            }}>\n                <ApolloDappFunction \n                    style={{\n                        overflow : \"visible\",\n                        width : \"100%\",\n                        height : \"auto\",\n                        borderRadius : DesktopSizes.BorderRadius.standard\n                    }}\n                    onClick={onFunctionClick}\n                    selected={func.name === which} \n                    dapp={dapp} \n                    func={func}/>\n            </div>\n        )\n    }) : <></>\n\n    return (\n\n        <>\n            {funcs}\n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MediaResponsive } from '../../../Sytems';\nimport { DappI } from '../Dapp';\nimport { ApolloDappFunctions } from './ApolloRunDappFunctions';\nimport {ApolloDappFunctionsMobile} from \"./ApolloRunDappFunctionsMobile\";\n\n\nexport type ApolloRunDappFunctionGridViewProps = {\n    which ? : string,\n    dapp : DappI,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappFunctionGridView : FC<ApolloRunDappFunctionGridViewProps>  = ({\n    which,\n    setWhich,\n    dapp\n}) =>{\n\n    return (\n\n        <MediaResponsive>\n            <MediaResponsive.Desktop>\n                <ApolloDappFunctions dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Desktop>\n            <MediaResponsive.Laptop>\n                <ApolloDappFunctions dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Laptop>\n            <MediaResponsive.Mobile>\n                <ApolloDappFunctionsMobile dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Mobile>\n            <MediaResponsive.Tablet>\n                <ApolloDappFunctionsMobile dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Tablet>\n        </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInputHeader } from './DappInputHeader';\nimport { DappInputContent } from './DappInputContent';\nimport { darkenStandard } from '../Methods';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n    setInput ? : (input : DappInputI)=>void,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappInput : FC<DappPutInputProps>  = ({\n    dappInput,\n    style,\n    setInput\n}) =>{\n\n    return (\n\n        <></>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport { Colors, DesktopSizes, Shadows } from '../../Theme';\n\nconst Members = [\"Content\", \"Header\"];\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties,\n    end ? : boolean\n}\n\nconst DappPutLayout : FC<DappPutInputProps> & {\n    Header : FC,\n    Content : FC\n} = ({\n    style,\n    end,\n    children\n}) =>{\n\n    const {\n        Header,\n        Content\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            textAlign : \"left\",\n            overflowWrap : \"anywhere\",\n            padding : \"20px\",\n            borderRadius : DesktopSizes.BorderRadius.standard,\n            borderCollapse : \"collapse\",\n            border : \"none\",\n            boxShadow : Shadows.defaultShadow,\n            ...style,\n        }}>\n            <div style={{\n                fontSize : \"24px\",\n            }}>\n                {Header}\n            </div>\n            <div style={{\n                fontSize : \"18px\"\n            }}>\n                {Content}\n            </div>\n        </div>\n\n    )\n\n}\n\nDappPutLayout.Header = generateNamedMember(\"Header\");\nDappPutLayout.Content = generateNamedMember(\"Content\")\n\nexport {DappPutLayout};","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards';\nimport { HandIndexFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../../Theme';\n\nexport type DappInteractputHeaderProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputHeader : FC<DappInteractputHeaderProps>  = ({\n    dappInteractput\n}) =>{\n\n    return (\n\n        <DefaultHeader \n            style={{\n                color : Colors.lilac\n            }}\n            dappPut={dappInteractput}>\n            <DefaultHeader.Pre>\n                <HandIndexFill size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {AthenaButton} from \"../../../Components/Buttons\"\nimport {\n    lightenStandard,\n    darkenStandard\n} from \"../Methods\";\nimport {Colors} from \"../../../Theme\";\nimport {\n    DappInteractputI\n} from \"../DappPutType\";\nimport { useNavigate } from 'react-router-dom';\n\nexport type DappInteractputContentProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputContent : FC<DappInteractputContentProps>  = ({\n    dappInteractput\n}) =>{\n    \n    const [failedWindow, setFailedWindow] = useState<boolean>(false);\n\n    return (\n\n        <div style={{\n            display : \"flex\"\n        }}>\n            <AthenaButton \n                style={{\n                    boxShadow : \"none\",\n                    border : `1px solid ${Colors.lilac}`\n                }}\n                onClick={()=>{\n                    const newWindow = window.open(dappInteractput.sessionUrl);\n                    dappInteractput.xpraExit.then(()=>{\n                        newWindow?.close();\n                    })\n                    if(!newWindow || newWindow.closed || newWindow.closed === undefined){\n                        setFailedWindow(false);\n                    }\n                }}\n                primaryColor={darkenStandard(Colors.lilac)}\n                secondaryColor={\"white\"}>\n                    Open interactive session\n                </AthenaButton>\n            {failedWindow && \n            <p>Failed to open a new window at <a href={dappInteractput.sessionUrl}>{dappInteractput.sessionUrl}</a>\n                Please enable popups and try again or click the link above.\n            </p>}\n        </div>\n\n    )\n\n}\n","import Color from \"color\";\nimport React from \"react\";\n\nexport const lightenStandard = (color : React.CSSProperties[\"color\"])=>{\n\n    return Color(color).lighten(.2).hex();\n\n}\n\nexport const darkenStandard = (color : React.CSSProperties[\"color\"])=>{\n    return Color(color).darken(.2).hex();\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInteractputHeader } from './DappInteractputHeader';\nimport {DappInteractputContent} from \"./DappInteractputContent\";\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutInteractputProps = {\n    style ? : React.CSSProperties\n    dappInteractput : DappInteractputI,\n    end ? : boolean,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappInteractput : FC<DappPutInteractputProps>  = ({\n    dappInteractput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappInteractputHeader dappInteractput={dappInteractput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappInteractputContent dappInteractput={dappInteractput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards/DefaultHeader\";\nimport {ArrowReturnRight} from \"react-bootstrap-icons\";\nimport { Colors, DesktopSizes } from '../../../Theme';\n\nexport type DappOutputHeaderProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputHeader : FC<DappOutputHeaderProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappOutput} style={{\n            color : Colors.Maintheme,\n            paddingBottom : DesktopSizes.Padding.standard\n        }}>\n            <DefaultHeader.Pre>\n                <ArrowReturnRight size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Clipboard } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappOutputI } from '../DappPutType';\n\nexport type DappOutputContentProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputContent : FC<DappOutputContentProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <div style={{\n            color : Colors.Maintheme,\n            width : \"100%\",\n            display : \"grid\",\n            gridTemplateColumns : \"6fr 1fr\",\n            alignContent : 'center',\n            alignItems : \"center\",\n        }}>\n            <div style={{\n                color : Colors.secondaryTextColor,\n                textAlign : \"left\"\n            }}>\n                {dappOutput.value}\n            </div>\n            <div style={{\n                width : \"100%\",\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                justifyContent : \"center\"\n            }}>\n                <AthenaButton \n                style={{\n                    width : \"100%\",\n                    border : `1px solid ${Colors.Maintheme}`,\n                    boxShadow : \"none\"\n                }}\n                primaryColor={Colors.Maintheme}\n                secondaryColor={\"white\"}\n                action={async ()=>{\n                    navigator.clipboard.writeText(dappOutput.value||\"\");\n                }}>\n                   \n                            <Clipboard size={16}/>\n                </AthenaButton>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport {DappOutputHeader} from \"./DappOutputHeader\";\nimport { DappOutputContent } from '../DappOutput/DappOutputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutOutputProps = {\n    style ? : React.CSSProperties\n    dappOutput : DappOutputI,\n    end ? : boolean,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOutput : FC<DappPutOutputProps>  = ({\n    style,\n    dappOutput,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOutputHeader dappOutput={dappOutput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOutputContent dappOutput={dappOutput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill} from \"react-bootstrap-icons\";\nimport { Colors } from '../../../Theme';\n\nexport type DappErrputHeaderProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputHeader : FC<DappErrputHeaderProps>  = ({\n    dappErrput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            style={{\n                color : Colors.failedRed\n            }}\n            dappPut={dappErrput}>\n                <DefaultHeader.Pre>\n                    <ExclamationCircleFill size={18}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappErrputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\n\nexport type DappErrputContentProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputContent : FC<DappErrputContentProps>  = ({\n    dappErrput\n}) =>{\n\n    /*const resetArgs = ()=>{\n        dappErrput.resetArgs(dappErrput.reduceContractFunction);\n    }*/\n\n    return (\n\n        <div>\n            {dappErrput.value}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappErrputHeader } from './DappErrputHeader';\nimport { DappErrputContent } from './DappErrputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutErrputProps = {\n    style ? : React.CSSProperties\n    dappErrput : DappErrputI,\n    end ? : boolean,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappErrput : FC<DappPutErrputProps>  = ({\n    dappErrput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappErrputHeader dappErrput={dappErrput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappErrputContent dappErrput={dappErrput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill, InfoCircleFill} from \"react-bootstrap-icons\";\nimport { Colors } from '../../../Theme';\n\nexport type DappDescputHeaderProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputHeader : FC<DappDescputHeaderProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            style={{\n                color : Colors.Maintheme\n            }}\n            dappPut={dappDescput}>\n                <DefaultHeader.Pre>\n                    <InfoCircleFill size={14}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappDescputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\n\nexport type DappDescputContentProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputContent : FC<DappDescputContentProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <div>\n            {dappDescput.value}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappDescputHeader } from './DappDescputHeader';\nimport { DappDescputContent } from './DappDescputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutDescputProps = {\n    style ? : React.CSSProperties\n    dappDescput : DappDescputI\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappDescput : FC<DappPutDescputProps>  = ({\n    dappDescput,\n    style\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : \"white\",\n            userSelect : \"text\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappDescputHeader dappDescput={dappDescput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappDescputContent dappDescput={dappDescput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill, Eyeglasses} from \"react-bootstrap-icons\";\n\nexport type DappOracleputHeaderProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputHeader : FC<DappOracleputHeaderProps>  = ({\n    dappOracleput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            dappPut={dappOracleput}>\n                <DefaultHeader.Pre>\n                    <Eyeglasses size={24}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Check, X, Circle, CircleFill} from 'react-bootstrap-icons';\nimport { Ellipsis } from 'react-bootstrap/esm/PageItem';\nimport {ReadyT} from \"../../../Components/Ready\"\nimport { Colors } from '../../../Theme';\n\nexport type OracleLinkProps = {\n    ready ? :ReadyT,\n    link : string\n}\n\nexport const OracleLink : FC<OracleLinkProps>  = ({\n    ready,\n    link\n}) =>{\n\n\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n\n            <div style={{\n                width : \"30px\",\n                display : \"flex\",\n                alignItems : \"center\",\n                alignContent : 'center',\n                justifyItems : \"center\",\n                justifyContent : \"center\"\n            }}>\n                {ready === \"ready\"  && \n                    <Check size={20} style={{\n                        color : Colors.forestEdge\n                    }} />\n                }\n                {!ready || (ready === \"failed\") && \n                    <X size={20} style={{\n                        color : Colors.failedRed\n                    }}/>\n                }\n                {ready === \"not ready\" && \n                    <CircleFill size={10} style={{\n                        color : Colors.arizonaOrange\n                    }}/>\n                }\n            </div>\n            <div>\n            &emsp;<a style ={{\n                color  : Colors.babyBlue\n            }} href={link}>{link}</a>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useReducer} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappOracleputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\nimport {OracleLink} from \"./OracleLink\";\nimport { ReadyT } from '../../../Components/Ready';\n\nconst allPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        \n        return agg && (typeof obj[key] === \"string\")\n    }, true)\n}\n\nconst countPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg + ((typeof obj[key] === \"string\" ? 1 : 0) * 1)\n    }, 0)\n}\n\nexport type DappOracleputContentProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputContent : FC<DappOracleputContentProps>  = ({\n    dappOracleput\n}) =>{\n\n    const map = dappOracleput.contractFunction.oracleData||{};\n    const [oracleStatii, setOracleStatii] = useState<{[key : string] : ReadyT}>(\n        Object.keys(map).reduce((agg, key)=>{\n            return {\n                ...agg,\n                [key] : [typeof map[key] === \"string\"] ? \"ready\" :  \"not ready\"\n            }\n        }, {} as {[key : string] : ReadyT})\n    )\n    const [oracleStates, setOracleStates] = useReducer<\n        (state : {[key : string] : string}, data : {[key : string] : string})=>{[key : string] : string}\n    >(\n        (state, data)=>{\n            return {\n                ...state,\n                ...data\n            }\n        },\n        (dappOracleput.contractFunction.oracleData||{})as unknown as {[key : string] : string}\n    );\n    useEffect(()=>{\n        Object.keys(map).map((key)=>{\n            if((map[key] as Promise<String>).then){\n                (map[key] as Promise<String>).then((data)=>{\n                    setOracleStatii({\n                        ...oracleStatii,\n                        [key] : \"ready\"\n                    });\n                    \n                    setOracleStates({\n                        [key] : data\n                    } as {[key : string]: string})\n                }).catch(()=>{\n                    dappOracleput.contractFunction.oraclePromiseReject && \n                    dappOracleput.contractFunction.oraclePromiseReject();\n                    setOracleStatii({\n                        ...oracleStatii,\n                        [key] : \"not ready\"\n                    })      \n                })\n            }\n        })\n    }, [])\n\n    const allResolved = allPromisesResolved(oracleStates);\n    const resolveCount = countPromisesResolved(oracleStates);\n    const links = Object.keys(oracleStatii).map((key)=>{\n        return (\n            <OracleLink link={key} ready={oracleStatii[key]}/>\n        )\n    })\n\n    useEffect(()=>{\n        \n        if(allResolved\n            && oracleStates  \n            && dappOracleput.contractFunction.oraclePromiseResolve\n        ){\n           /* dappOracleput.setOracleData(\n                oracleStates\n            );*/\n            dappOracleput.contractFunction.oraclePromiseResolve(\n                oracleStates as {[key : string] : string}\n            );\n        }\n    })\n\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor\n        }}>\n           <div style={{\n               border : `1px solid ${Colors.cyan}`,\n               borderRadius : DesktopSizes.BorderRadius.standard,\n               padding : DesktopSizes.Padding.standard,\n               background : Colors.primaryTextColor,\n               color : Colors.deepCyan\n           }}>\n                <h6>{allResolved ? \"Finished\" : \"Awaiting...\"} {resolveCount}/{Object.keys(dappOracleput.contractFunction.oracleData||{}).length}</h6>\n                {links}\n           </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappOracleputHeader } from './DappOracleputHeader';\nimport { DappOracleputContent } from './DappOracleputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutOracleputProps = {\n    style ? : React.CSSProperties\n    dappOracleput : DappOracleputI,\n    end ? : boolean\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOracleput : FC<DappPutOracleputProps>  = ({\n    dappOracleput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOracleputHeader dappOracleput={dappOracleput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOracleputContent dappOracleput={dappOracleput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappResultputHeaderProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n}\n\nexport const DappResultputHeader : FC<DappResultputHeaderProps>  = ({\n    dappResultput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappResultput} style={{\n            color : Colors.forestEdge\n        }}>\n            <DefaultHeader.Pre>\n                𝑦  \n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\nimport { result } from 'cypress/types/lodash';\n\n\nexport type DappResultputContentProps = {\n    dappResultput : DappResultputI,\n    setResultput ? : (Resultput : DappResultputI)=>void\n}\n\nexport const DappResultputContent : FC<DappResultputContentProps>  = ({\n    dappResultput, \n    setResultput\n}) =>{\n\n    return (\n\n        <div style={{\n            userSelect : \"text\",\n            display : \"flex\",\n            color : Colors.babyBlue\n        }}>\n            {dappResultput.value||\"No return value yet.\"}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappResultputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappResultputHeader } from './DappResultputHeader';\nimport { DappResultputContent } from './DappResultputContent';\nimport { darkenStandard } from '../Methods';\nimport { DesktopSizes } from '../../../Theme';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutResultputProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappResultput : FC<DappPutResultputProps>  = ({\n    dappResultput,\n    style,\n}) =>{\n\n    const ethereumError = dappResultput.contractFunction.errors?.map((error)=>{\n        return error.name === \"EthereumError\";\n    }).length || -1 > 0\n\n    \n\n    return (\n\n        !ethereumError && dappResultput.value ? <DappPutLayout style={{\n            background : Colors.greenCeramic,\n            color : Colors.forestEdge,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappResultputHeader dappResultput={dappResultput} />\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappResultputContent dappResultput={dappResultput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout> : <></>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappOracleInputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappOracleInputHeaderProps = {\n    style ? : React.CSSProperties\n    dappOracleInput : DappOracleInputI,\n}\n\nexport const DappOracleInputHeader : FC<DappOracleInputHeaderProps>  = ({\n    dappOracleInput,\n    style\n}) =>{\n\n\n    return (\n\n        <DefaultHeader dappPut={dappOracleInput} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Pre>\n                𝑥\n            </DefaultHeader.Pre>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}> </i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}\n","import React, {FC, ReactElement} from 'react';\nimport {Form, FormControlProps} from \"react-bootstrap\";\n\nexport type TextInputApolloProps = FormControlProps & {\n    style ? : React.CSSProperties,\n    onTextInput ? : (text : string)=>void,\n    onSubmit ? : (text : string)=>void,\n    placeholder ? : string,\n    defaultValue ? : string\n}\n\nexport const TextInputApollo : FC<TextInputApolloProps>  = (props) =>{\n    const {\n        onTextInput,\n        ...rest\n    } = {\n        ...props,\n        type : \"text\"\n    };\n    \n    const handleChange : React.ChangeEventHandler = (e)=>{\n        onTextInput && onTextInput((e.target as any).value);\n    }\n    const handleKeyDown = (e : React.KeyboardEvent<HTMLInputElement>)=>{\n        if(e.key === \"Enter\"){\n            props.onSubmit && props.onSubmit((e.target as any).value);\n        }\n    }\n    return (\n        <Form.Control\n            defaultValue={props.defaultValue}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            {...rest}\n        />\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappOracleInputI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\nimport {\n    TextInputApollo\n} from \"../../../Components/TextInput\"\nimport { useState } from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\n\nexport type DappOracleInputContentProps = {\n    dappOracleInput : DappOracleInputI,\n    setOracleInput ? : (OracleInput : DappOracleInputI)=>void\n}\n\nexport const DappOracleInputContent : FC<DappOracleInputContentProps>  = ({\n    dappOracleInput, \n    setOracleInput\n}) =>{\n\n    const [disabled, setDisabled] = useState(false);\n\n   // const [text, setText] = useState(dappOracleInput.response);\n   const text = dappOracleInput.contractFunction.oracleInputs ? \n   dappOracleInput.contractFunction.oracleInputs[dappOracleInput.id].response||\"\" :\n   \"\";\n   \n\n    const onTextOracleInput = (text : string)=>{\n        \n       setOracleInput && setOracleInput({\n            ...dappOracleInput,\n            response : text\n        })\n    }\n\n    const onTextSubmit = (text : string)=>{\n        dappOracleInput.resolve(text);\n        setDisabled(true);\n    }\n\n    const onButtonSumbit = ()=>{\n        dappOracleInput.resolve(text);\n        setDisabled(true);\n    }\n\n    return (\n\n        <div style={{\n            paddingTop : DesktopSizes.Padding.standard,\n            display : \"grid\",\n            gridTemplateColumns : \"6fr 1fr\",\n            gap : DesktopSizes.Padding.standard\n        }}>\n            <TextInputApollo \n                disabled={disabled}\n                defaultValue={text}\n                placeholder={\"Enter value\"}\n                onTextInput={onTextOracleInput}\n                onSubmit={onTextSubmit}\n              style={{\n                background : \"white\",\n                color : Colors.Maintheme,\n                border : `1px solid ${Colors.Maintheme}`\n            }}/>\n            <AthenaButton \n                style={{\n                    border : `1px solid ${Colors.Maintheme}`,\n                    boxShadow : \"none\"\n                }}\n                onClick={onButtonSumbit}\n                primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                Submit\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleInputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappOracleInputHeader } from './DappOracleInputHeader';\nimport { DappOracleInputContent } from './DappOracleInputContent';\nimport { darkenStandard } from '../Methods';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutOracleInputProps = {\n    style ? : React.CSSProperties\n    dappOracleInput : DappOracleInputI,\n    contractFunction : OpenContractFunctionI,\n    index : number,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOracleInput : FC<DappPutOracleInputProps>  = ({\n    dappOracleInput,\n    contractFunction,\n    reduceContractFunction,\n    index,\n    style,\n}) =>{\n\n    const setOracleInput = (dappOracleInput : DappOracleInputI)=>{\n\n        reduceContractFunction && reduceContractFunction((contractFunction)=>{\n            return {\n                ...contractFunction,\n                oracleInputs : {\n                    ...contractFunction.oracleInputs,\n                    [dappOracleInput.id] : dappOracleInput\n                }\n            }\n        });\n    }\n\n    return (\n\n        <DappPutLayout style={{\n            color : Colors.Maintheme,\n            background : \"white\",\n        }}>\n            <DappPutLayout.Header>\n                <DappOracleInputHeader dappOracleInput={dappOracleInput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOracleInputContent dappOracleInput={dappOracleInput} setOracleInput={setOracleInput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {AthenaButton} from \"../../../Components/Buttons\";\nimport {Colors} from \"../../../Theme\";\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\nimport { DappCallputI } from '../DappPutType';\n\nexport type DappOracleCallputProps = {\n    dappOracleCallput : DappCallputI,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOracleCallput : FC<DappOracleCallputProps>  = ({\n    dappOracleCallput\n}) =>{\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            justifyContent : \"right\",\n            justifyItems : \"right\",\n            width : \"100%\"\n        }}>\n            <AthenaButton \n                invert\n                style={{\n                    fontSize : \"16px\",\n                    justifySelf : \"right\"\n                }}\n                action={dappOracleCallput.call}\n                primaryColor={Colors.Maintheme}\n                secondaryColor={\"white\"}\n            >\n                <span style={{\n                    fontSize : \"18px\"\n                }}>Call hub</span>\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ClockFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../../Theme';\nimport { DappWaitingPutI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappWaitingPutHeaderProps = {\n    style ? : React.CSSProperties\n    dappWaitingPut : DappWaitingPutI,\n}\n\nexport const DappWaitingPutHeader : FC<DappWaitingPutHeaderProps>  = ({\n    dappWaitingPut,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappWaitingPut} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Pre>\n                <ClockFill size={16}/>\n            </DefaultHeader.Pre>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}>{dappWaitingPut.type}</i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors, DesktopSizes} from \"../../Theme\";\nimport { useState } from 'react';\n\nexport type ProgressBarAlanProps = {\n    style ? : React.CSSProperties,\n    innerStyle ? : React.CSSProperties\n    duration : number,\n    progress ? : number\n}\n\nexport const ProgressBarAlan : FC<ProgressBarAlanProps>  = ({\n    style,\n    duration,\n    progress\n}) =>{\n\n    const [_duration, _setDuration] = useState(duration);\n    \n    const opac = Math.floor((parseInt('44', 16) + (progress||0) * (255 - parseInt('44', 16)))).toString(16);\n\n    return (\n\n        <div style={{\n            ...style,\n            border : `1px solid ${Colors.forestEdge}`,\n            borderRadius : DesktopSizes.BorderRadius.standard,\n            display : \"flex\",\n            justifyContent : \"left\",\n            overflow : \"hidden\",\n            height : \"20px\"\n        }}>\n            <motion.div \n                style={{\n                    height : \"100%\"\n                }}\n                animate = {{\n                    width : [(progress ? `${progress * 100}%` : \"0%\"), \"100%\"],\n                    background : [`${Colors.readyGreen}${opac}`, Colors.readyGreen]\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : _duration\n                }}>\n\n            </motion.div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors } from '../../../Theme';\nimport { DappWaitingPutI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\nimport {ProgressBarAlan} from \"../../../Components/ProgressBar\"\nimport {\n    TextInputApollo\n} from \"../../../Components/TextInput\"\n\nexport type DappWaitingPutContentProps = {\n    dappWaitingPut : DappWaitingPutI,\n    setInput ? : (input : DappWaitingPutI)=>void\n}\n\nexport const DappWaitingPutContent : FC<DappWaitingPutContentProps>  = ({\n    dappWaitingPut, \n    setInput\n}) =>{\n\n    \n\n    const [duration, setDuration] = useState(dappWaitingPut.duration);\n\n    const progress = (new Date().getSeconds() - dappWaitingPut.timeStarted.getSeconds())/(dappWaitingPut.duration + 0.000001)\n\n    return (\n\n        <div>\n            <p>{dappWaitingPut.value}</p>\n            <ProgressBarAlan duration={duration} progress={progress}/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappWaitingPutI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappWaitingPutHeader } from './DappWaitingPutHeader';\nimport { DappWaitingPutContent } from './DappWaitingPutContent';\nimport { darkenStandard } from '../Methods';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutWaitingPutProps = {\n    style ? : React.CSSProperties\n    dappWaitingPut : DappWaitingPutI,\n    setInput ? : (input : DappWaitingPutI)=>void,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappWaitingPut : FC<DappPutWaitingPutProps>  = ({\n    dappWaitingPut,\n    style,\n    setInput\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : \"white\",\n        }}>\n            <DappPutLayout.Header>\n                <DappWaitingPutHeader\n                    dappWaitingPut={dappWaitingPut}\n                />\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappWaitingPutContent\n                    dappWaitingPut={dappWaitingPut}\n                />\n            </DappPutLayout.Content>\n        </DappPutLayout>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI, DappPutI , DappWaitingPutI, DappErrputI, DappDescputI, DappInteractputI, DappOutputI, DappOracleputI, DappResultputI, DappOracleInputI, DappCallputI} from '../DappPutType';\nimport {DappInput} from \"../DappInput\";\nimport {DappOutput} from \"../DappOutput\";\nimport { DappDescput } from '../DappDescput';\nimport {DappInteractput} from \"../DappInteractput\";\nimport {DappErrput} from \"../DappErrput\";\nimport {DappOracleput} from \"../DappOracleput\";\nimport { DappResultput } from '../DappResultput';\nimport {DappOracleInput} from \"../DappOracleInput\";\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\nimport { DappOracleCallput } from '../DappOracleCallput';\nimport { DappWaitingPut } from '../DappWaitingPut';\n\nexport type DappPutProps = {\n    put : DappPutI,\n    index : number,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (reducer : reduceContractFunctionI)=>void\n    end ? : boolean\n}\n\nexport const DappPut : FC<DappPutProps>  = ({\n    put,\n    index,\n    contractFunction,\n    reduceContractFunction,\n    end\n}) =>{\n\n    switch(put.putType){\n\n        case (\"input\") :{\n\n            return (\n                <DappInput   \n                dappInput={put as DappInputI} \n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"output\") :{\n\n            return (\n                <DappOutput \n                dappOutput={put as DappOutputI} \n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"error\") : {\n\n            return (\n                <DappErrput \n                dappErrput={put as DappErrputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"callput\") : {\n            return (\n                <DappOracleCallput\n                    dappOracleCallput={put as DappCallputI}\n                    contractFunction={contractFunction}\n                    reduceContractFunction={reduceContractFunction}\n                />\n            )\n        }\n\n        case (\"interactive\") : {\n\n            return (\n                <DappInteractput \n                dappInteractput={put as DappInteractputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"oracle\") : {\n            \n            return (\n                <DappOracleput \n                dappOracleput={put as DappOracleputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"result\") : {\n            return (\n                <DappResultput \n                dappResultput={put as DappResultputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n        }\n\n        case (\"oracle-input\") : {\n            return (\n                <DappOracleInput \n                index={index}\n                dappOracleInput={put as DappOracleInputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n        }\n\n        case (\"waiting\") : {\n            return (\n                <DappWaitingPut\n                    dappWaitingPut={put as DappWaitingPutI}\n                    contractFunction={contractFunction}\n                    reduceContractFunction={reduceContractFunction}\n                />\n            )\n        }\n\n        default : {\n            return (\n                <DappDescput \n                dappDescput={put as DappDescputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n        }\n\n    }\n\n}","import React, {FC, ReactElement, useReducer} from 'react';\nimport { DappDescputI, DappOracleInputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI, DappCallputI, DappWaitingPutI } from '../DappPut/DappPutType';\n\nexport interface reduceContractFunctionI {\n    (state : OpenContractFunctionI) : OpenContractFunctionI\n}\n\nexport const allPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg && (typeof obj[key] === \"string\")\n    }, true)\n}\n\nexport const countPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg + ((typeof obj[key] === \"string\" ? 1 : 0) * 1)\n    }, 0)\n}\n\nexport const createInputs = (\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappInputI[]=>{\n    return contractFunction.inputs.map((input)=>{\n        return {\n            ...input,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"input\"\n        } as DappInputI\n    })\n}\n\nexport const createErrors = (\n    errors : OpenContractFunctionI[\"errors\"], \n    resetArgs : DappErrputI[\"resetArgs\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappErrputI[]=>{\n    return errors ? errors.map((error)=>{\n\n        \n\n        return {\n            ...error,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"error\",\n            resetArgs : resetArgs\n        }\n    }) : []\n}\n\nexport const createXpras = (\n    xpras : OpenContractFunctionI[\"xpras\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappInteractputI[]=>{\n    return xpras ? xpras.map((xpra)=>{\n        return {\n            ...xpra,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"interactive\"\n        } \n    }) : []\n}\n\nexport const createOutputs = (\n    prints : OpenContractFunctionI[\"prints\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappOutputI[]=>{\n    return prints ? prints.map((print)=>{\n        return {\n            ...print,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"output\"\n        } \n    }) : []\n}\n\nexport const createOracleInputs = (\n    inputs : OpenContractFunctionI[\"oracleInputs\"],\n    contractFunction : OpenContractFunctionI,\n    resolve : (message : string)=>void,\n    reject : (message : string)=>void,\n    reduceContractFunction : (func : reduceContractFunctionI)=>void,\n) : DappOracleInputI[]=>{\n    return inputs ? Object.keys(inputs).map((key)=>{\n        return {\n            ...inputs[key],\n            name : inputs[key].prompt,\n            value : inputs[key].prompt,\n            resolve : resolve,\n            reject : reject,\n            putType : \"oracle-input\",\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction\n        } \n    }) : []\n}\n\nexport const createOracleData = (\n    contractFunction : OpenContractFunctionI,\n    setFunc ? : (func : reduceContractFunctionI)=>void\n) : DappOracleputI=>{\n\n    return {\n        name : \"Oracle data\",\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        putType : \"oracle\",\n    } as DappOracleputI\n\n}\n\nexport const createOracleCallPut = (\n    call : DappCallputI[\"call\"],\n    contractFunction : OpenContractFunctionI,\n    setFunc : (func : reduceContractFunctionI)=>void\n) : DappCallputI=>{\n    return {\n        call : call,\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        name : contractFunction.name,\n        putType : \"callput\",\n        value : \"\"\n    }\n}\n\nexport const createResult = (\n    data : any,\n    contractFunction : OpenContractFunctionI,\n    setFunc : (func : reduceContractFunctionI)=>void\n) : DappResultputI=>{\n    return {\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        name : \"Result\",\n        value : data,\n        putType : \"result\"\n    }\n}\n\n/*export const createDescriptionData = (\n    contractFunction : OpenContractFunctionI\n    ) : DappDescputI[]=>{\n    return [\n        {\n            name : contractFunction.name,\n            description : contractFunction.description,\n            putType : \"description\",\n            value : contractFunction.name,\n\n        }\n    ]\n}*/\n\nexport const aggregateContractFunctionPuts = (\n    contractFunction : OpenContractFunctionI,\n)=>{\n\n    return [\n       /* ...createInputs(contractFunction),\n        ...createErrors(contractFunction),\n        ...createXpras(contractFunction),\n        ...createOutputs(contractFunction),*/\n    ]\n\n}\n\nexport const getContractFunctionInputs = (puts : DappPutI[])=>{\n    return puts.filter((put)=>{\n        return put.putType === \"input\";\n    });\n}\n\nexport const resetInputs = (inputs : OpenContractFunctionI[\"inputs\"])=>{\n    return inputs.map((value)=>{\n        return {\n            ...value,\n            value : undefined\n        }\n    })\n}\n\nexport const resetInputPuts = (puts : OpenContractFunctionI[\"puts\"])=>{\n    return puts?.map((put)=>{\n        return {\n            ...put,\n            value : put.putType === \"input\" ? undefined : put.value\n        }\n    })\n}\n\nexport const produceUpdatedPuts = (\n    puts : OpenContractFunctionI[\"puts\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void\n) : DappPutI[]=>{\n    return (puts||[]).map((put)=>{\n        return {\n            ...put,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction\n        } as DappPutI\n    })\n}\n\nexport const createWaitingPut = (\n    seconds : number,\n    message : string,\n    contractFunction : OpenContractFunctionI,\n    setFunc : (func : reduceContractFunctionI)=>void\n) : DappWaitingPutI=>{\n    return {\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        name : contractFunction.name,\n        value : message,\n        message : message,\n        duration : seconds,\n        putType : \"waiting\",\n        type : \"waiting\",\n        timeStarted : new Date()\n    }\n}\n\nexport const removeWaitingPut = (\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void\n)=>{\n\n    reduceContractFunction&& reduceContractFunction((state)=>{\n        return {\n            ...state,\n            puts : state.puts?.filter((put)=>{\n                return put.putType !== \"waiting\"\n            })\n        }\n    })\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { Play, PlayCircleFill, PlayFill } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors, DesktopSizes, Shadows } from '../../Theme';\nimport { DappInputHeader } from '../DappPut/DappInput/DappInputHeader';\nimport { DappResultput } from '../DappPut/DappResultput';\nimport { ArrowReturnRight } from 'react-bootstrap-icons';\nimport { TextInputApollo } from '../../Components/TextInput';\nimport * as pure from \"./StateMethods\";\nimport {generate} from \"shortid\";\nimport { DefaultHeader } from '../DappPut/Standards';\nimport { text } from 'stream/consumers';\n\n\nexport type DappFunctionLogRunButtonProps = {\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction : (contractFunction : pure.reduceContractFunctionI)=>void,\n}\n\nexport const DappFunctionLogRunButton : FC<DappFunctionLogRunButtonProps>  = ({\n    contractFunction,\n    reduceContractFunction\n}) =>{\n\n\n    const inputs = pure.createInputs(\n        contractFunction,\n        reduceContractFunction\n    ).map((input, index)=>{\n\n        const onTextInput = (text : string)=>{\n\n            reduceContractFunction((contractFunction)=>{\n                \n                const newInput =  {\n                    ...contractFunction.inputs[index],\n                    value : text\n                }\n                return {\n                    ...contractFunction,\n                    inputs : [\n                        ...contractFunction.inputs.slice(0, index),\n                        newInput,\n                        ...contractFunction.inputs.slice(index + 1)\n                    ]\n                }\n            });\n        }\n\n        \n\n        return (\n                    <div \n                    key={`${index}-${input.name}`}\n                    style={{\n                        alignContent : 'center',\n                        alignItems : \"center\",\n                        paddingBottom : DesktopSizes.Padding.standard,\n                        lineHeight : \"18px\"\n                    }}>\n                        <DappInputHeader dappInput={input} style={{\n                            fontSize : \"16px\",\n                        }}/>\n                        <br/>\n                        <div style={{\n                            display : \"flex\",\n                            color : Colors.secondaryTextColor,\n                            alignContent : \"center\",\n                            alignItems : \"center\",\n                            fontSize : \"16px\"\n                        }}>\n                           &emsp;<span style={{\n                               fontSize : \"16px\"\n                           }}>=&emsp;</span><TextInputApollo\n                            value={input.value||\"\"}\n                            onTextInput={onTextInput}\n                            style={{\n                                fontSize : \"16px\"\n                           }}/>\n                        </div>\n                    </div>\n                )\n         \n    });\n\n    return (\n             <div style={{\n                position : \"relative\",\n            }}>\n                <div\n                    style={{\n                        width : \"100%\",\n                        borderTopLeftRadius : DesktopSizes.BorderRadius.standard,\n                        borderTopRightRadius : DesktopSizes.BorderRadius.standard,\n                        borderBottomLeftRadius : DesktopSizes.BorderRadius.standard,\n                        borderBottomRightRadius : DesktopSizes.BorderRadius.standard,\n                        background : 'white',\n                        boxShadow : Shadows.defaultShadow,\n                        padding :  \"20px\"\n                    }}>\n                    <div style={{\n                        color : Colors.Maintheme\n                    }}>\n                        <DefaultHeader dappPut={{\n                            name : \"Inputs\",\n                            putType : \"Inputs\",\n                            value : \"any\",\n                            contractFunction : {} as OpenContractFunctionI,\n                            reduceContractFunction : ()=>{} \n                        }}>\n                            <DefaultHeader.Pre>\n                            𝑥\n                            </DefaultHeader.Pre>\n                        </DefaultHeader>\n                        <div style={{\n                            paddingLeft : DesktopSizes.Padding.whitespacePreferred\n                        }}>\n                            {inputs}\n                        </div>\n                    </div>\n                </div>\n            </div>\n       \n      \n\n    )\n\n}","import React, {FC, ReactElement, useState, useEffect, useReducer} from 'react';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors } from '../../Theme';\nimport { lightenStandard, darkenStandard } from '../DappPut/Methods';\nimport * as pure from \"./StateMethods\";\n\n\nexport type DappFunctionSubmitStateProps = {\n    contractFunction : OpenContractFunctionI,\n    call : ()=>Promise<any>,\n    loadOracleData : ()=>Promise<{[key : string] : string}>,\n    reduceContractFunction :  (contractFunction : pure.reduceContractFunctionI)=>void\n}\n\nexport const DappFunctionSubmitState : FC<DappFunctionSubmitStateProps>  = ({\n    contractFunction,\n    call,\n    loadOracleData,\n    reduceContractFunction\n}) =>{\n\n    const map = contractFunction.oracleData||{};\n    const resolved = pure.allPromisesResolved(map);\n    const count = pure.countPromisesResolved(map);\n    \n    const resetLog = ()=>{\n        setCalled(false);\n        reduceContractFunction((state)=>{\n            const _state = {\n                ...state,\n                inputs : pure.resetInputs(state.inputs),\n                puts : [],\n                oracleData : undefined\n            }\n            \n            return _state;\n        })\n    }\n    \n    const [called, setCalled] = useState(false);\n    const handleCall = async ()=>{\n        setCalled(true);\n        return await call();\n    }\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            justifyContent : \"right\",\n            justifyItems : \"right\",\n            fontSize : \"18px\",\n        }}>\n            <AthenaButton\n                onClick={resetLog}\n                primaryColor={Colors.failedRed}\n                secondaryColor={\"white\"}\n                >\n                    Reset\n            </AthenaButton>\n            &emsp;\n            {contractFunction.requiresOracle && <AthenaButton\n                action={loadOracleData as unknown as any}\n                style={{\n                    fontSize : \"18px\"\n                }}\n                primaryColor={Colors.Maintheme}\n                secondaryColor={\"white\"}>\n                {\n                    !contractFunction.oracleData ? \n                    <>\n                        Load oracle data\n                    </>\n                    : <>\n                        Load{resolved ? \"ed\" : \"ing\"} oracle data {count}/{Object.keys(map).length}     \n                    </>\n                }\n            </AthenaButton>}\n            &emsp;\n            <AthenaButton\n                invert\n                style={{\n                    fontSize : \"18px\"\n                }}\n                action={handleCall}\n                disabled={called || (contractFunction.requiresOracle && (contractFunction.oracleData === undefined || !resolved))}\n                primaryColor={Colors.Maintheme}\n                secondaryColor={\"white\"}\n            >\n                Call function\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, PureComponent, ReactElement, useReducer} from 'react';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { DappI, parseGitUrl } from '../Dapp/Dapp';\nimport { DappDescput, DappInput, DappPut } from '../DappPut';\nimport { DappDescputI, DappOracleInputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI } from '../DappPut/DappPutType';\nimport {to} from \"await-to-js\";\nimport { useEffect } from 'react';\nimport {DappFunctionLogRunButton} from \"./DappFunctionLogRunButton\";\nimport {DappFunctionSubmitState} from \"./DappFunctionSubmitState\";\nimport { Spinner } from 'react-bootstrap';\nimport { useState } from 'react';\nimport {generate} from \"shortid\";\nimport * as log from \"./StateMethods\";\nimport { FailedStepPost } from '../../Components/Walkthrough/Step/FailedStepPost';\n\nexport type DappFunctionLogProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setFunctionState ? : (func : OpenContractFunctionI)=>void\n}\n\nexport class ClientError extends Error {}\n\nexport const DappFunctionLog : FC<DappFunctionLogProps>  = ({\n    dapp,\n    contractFunction,\n    setFunctionState\n}) =>{\n\n    const [reducedFunctionState, reduceFunctionState] = useReducer(\n        (state : OpenContractFunctionI, update : log.reduceContractFunctionI)=>{\n            \n            setFunctionState && setFunctionState(update(state));\n            return update(state);\n        },\n        contractFunction\n    )\n\n    const resetArgs = (reduceFunctionState : (update : log.reduceContractFunctionI)=>void)=>{\n        reduceFunctionState((oc : OpenContractFunctionI)=>{\n            return {\n                ...oc,\n                inputs : log.resetInputs(oc.inputs)\n            }\n        })\n    }\n\n    const updatedPuts = log.produceUpdatedPuts(\n        reducedFunctionState.puts,\n        reducedFunctionState,\n        reduceFunctionState\n    );\n    const puts = updatedPuts.reduce((agg, put, index)=>{\n\n        return [\n            ...agg,\n            ...put.putType !== \"input\" ? [\n                (\n                    <div \n                        style={{\n                            paddingBottom : DesktopSizes.Padding.standard\n                        }}\n                        key={index}><DappPut \n                        key={index}\n                        contractFunction={contractFunction}\n                        reduceContractFunction={reduceFunctionState}\n                        end={index > (contractFunction.puts ? contractFunction.puts.length - 2 : -1)}\n                        index={index} put={put}/></div>\n                )\n            ] : []\n        ]\n    }, [] as React.ReactNode[])\n\n\n    const addOutput = (name : string, message : string)=>{\n        const update = (contractFunction : OpenContractFunctionI)=>{\n            const newOutput = {\n                name : name,\n                value : message\n            };\n            return {\n                ...contractFunction,\n                ...contractFunction.requiresOracle ? {\n                    result : \"Oracle output received! See below.\"\n                } : {},\n                waiting : false,\n                prints : [...contractFunction.prints||[], newOutput],\n                puts : [...contractFunction.puts||[], ...log.createOutputs(\n                    [newOutput],\n                    contractFunction,\n                    reduceFunctionState\n                )]\n            }\n        }\n        reduceFunctionState(update);\n    }\n    contractFunction.printHandler = async (message : string)=>{\n        addOutput(\"Notification.\", message)\n    }\n\n    const addOracleInput = (\n        data : string,\n        resolve : (msg : string)=>void,\n        reject : (msg : string)=>void\n    )=>{\n        const update = (contractFunction : OpenContractFunctionI)=>{\n            \n            const newOracleInput = {\n                prompt : data,\n                response : undefined,\n                id : generate()\n            }\n            return {\n                ...contractFunction,\n                waiting : false,\n                oracleInputs : {\n                    ...contractFunction.oracleInputs, \n                    [newOracleInput.id] : newOracleInput\n                },\n                puts : [...contractFunction.puts||[], ...log.createOracleInputs(\n                    {[newOracleInput.id] : newOracleInput},\n                    contractFunction,\n                    resolve,\n                    reject,\n                    reduceFunctionState\n                )]\n            }\n        }\n        reduceFunctionState(update);\n    };\n    useEffect(()=>{\n        setFunctionState && setFunctionState({\n            ...contractFunction,\n        })\n    }, [contractFunction.puts])\n    useEffect(()=>{\n        contractFunction.inputHandler = async (message : string)=>{\n            \n            return new Promise((resolve, reject)=>{\n                \n                addOracleInput(message, resolve, reject);\n            })\n        }\n    })\n\n    const addError = (e : Error)=>{\n\n        \n\n        const update = (contractFunction : OpenContractFunctionI)=>{\n            const newError = {\n                ...e,\n                value : e.message\n            }\n            const _newFunctionState = {\n                ...contractFunction,\n                waiting : false,\n                errors : [...contractFunction.errors||[], newError],\n                puts : [...(contractFunction.puts||[]), ...log.createErrors(\n                    [newError], \n                    resetArgs,\n                    contractFunction,\n                    reduceFunctionState\n                )]\n            }\n            return _newFunctionState;\n        }\n        reduceFunctionState(update);\n    }\n\n    const handleError = async (e : Error)=>{\n\n        addError(e);\n\n    }\n    contractFunction.errorHandler = handleError;\n\n    const addOracleData = (\n        data : OpenContractFunctionI[\"oracleData\"], \n        resolve : OpenContractFunctionI[\"oraclePromiseResolve\"],\n        reject : OpenContractFunctionI[\"oraclePromiseReject\"]\n    )=>{\n        \n        reduceFunctionState((contractFunction)=>{\n           return {\n            ...contractFunction,\n            waiting : false,\n            oracleData : data,\n            oraclePromiseResolve : resolve,\n            oraclePromiseReject : reject\n           }\n        })\n\n    }\n\n    const addResult = (data : OpenContractFunctionI[\"result\"])=>{\n\n        \n\n        const update = (contractFunction : OpenContractFunctionI)=>{\n            const _newFunctionState = {\n                ...contractFunction,\n                name : \"Result\",\n                result : data,\n                puts : [...contractFunction.puts||[], log.createResult(\n                    data,\n                    contractFunction,\n                    reduceFunctionState\n                )]\n            }\n            \n            return _newFunctionState;\n        }\n        reduceFunctionState(update);\n\n    }\n\n    const [oracleStates, setOracleStates] = useReducer<\n        (\n            state : OpenContractFunctionI[\"oracleData\"], \n            data : OpenContractFunctionI[\"oracleData\"]\n        )=>OpenContractFunctionI[\"oracleData\"]\n    >(\n        (state, data)=>{\n            return {\n                ...state,\n                ...data\n            }\n        },\n        (contractFunction.oracleData)\n    );\n    useEffect(()=>{\n        if(\n            oracleStates !== undefined\n            && log.allPromisesResolved(oracleStates) \n            && contractFunction.oracleData !== oracleStates\n        ){\n            contractFunction.oraclePromiseResolve && contractFunction.oraclePromiseResolve(oracleStates as any);\n            addOracleData(\n                oracleStates,\n                undefined,\n                undefined\n            );\n        }\n    }, [oracleStates])\n\n    const loadOracleData = async () : Promise<{[key : string] : string}>=>{\n\n        const [error, data]= await to<{[key : string] : Promise<string>}>(window.githubOracleDownloader(\n            dapp.owner || \"\",\n            dapp.repo || \"\",\n            dapp.branch || \"main\",\n            contractFunction.oracleFolder\n        ));\n\n        if(error){\n            addError(\n                new ClientError(\"Oracle data unavailable.\"),\n            )\n        }\n        return new Promise((resolve, reject)=>{\n            if(data){\n                Object.keys(data).map((key)=>{\n                    if((data[key] as Promise<string>).then){\n                        (data[key] as Promise<string>).then((data)=>{\n                            setOracleStates({\n                                [key] : data\n                            })\n                        }).catch(()=>{\n                            contractFunction.oraclePromiseReject && \n                            contractFunction.oraclePromiseReject(); \n                        })\n                    }\n                })\n            }\n            addOracleData(\n                data||{} as any,\n                resolve,\n                reject\n            );\n            if(error){\n                addError(new ClientError(\"GitHub download failed.\"));\n                reject();\n            }\n        })\n\n    }\n\n    const addOracleCallput = (call : ()=>Promise<void>)=>{\n        reduceFunctionState((contractFunction)=>{\n            return {\n                ...contractFunction,\n                waiting : false,\n                callOracle : call,\n                puts : [...contractFunction.puts||[], log.createOracleCallPut(\n                    call,\n                    contractFunction,\n                    reduceFunctionState\n                )]\n            }\n        })\n    }\n\n    const handleSubmit = async (call : ()=>Promise<void>)=>{\n        \n        addOracleCallput(call);\n    }\n    contractFunction.submitHandler = handleSubmit;\n\n    const handleCall = async ()=>{\n\n        contractFunction.inputs = reducedFunctionState.inputs;\n\n       return new Promise((resolve, reject)=>{\n\n            if(contractFunction.requiresOracle){\n\n                if(!contractFunction.oracleData){\n                    addError(new ClientError(\"Oracle data is required for this function.\"));\n                    resolve({});\n                }\n\n                contractFunction.call().then((data)=>{\n                    resolve(data);\n                }).catch((err)=>{\n                    addError(err);\n                    resolve({});\n                })\n                return;\n            } \n            \n\n            contractFunction.call().then((data)=>{\n                \n                addResult(data);\n                resolve(data);\n            }).catch((err)=>{\n                addError(err);\n                resolve({});\n            })\n       })\n\n    }\n\n    const addInteractput = (name : string, targetUrl : string, sessionUrl : string, xpraExit : Promise<void>)=>{\n      reduceFunctionState((contractFunction)=>{\n        const newXpra : DappInteractputI =  {\n            name : name,\n            targetUrl : targetUrl,\n            sessionUrl : sessionUrl,\n            xpraExit : xpraExit,\n            description : \"\",\n            value : \"\",\n            putType : \"interactive\",\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceFunctionState\n        };\n        return {\n            ...contractFunction,\n            ...contractFunction.requiresOracle ? {\n                result : \"Oracle output received! See below.\"\n            } : {},\n            waiting : false,\n            xpras : [...contractFunction.xpras||[], newXpra],\n            puts : [...contractFunction.puts||[], ...log.createXpras(\n                [newXpra],\n                contractFunction,\n                reduceFunctionState\n            )]\n        }\n      });\n\n    }\n\n    contractFunction.xpraHandler = async (targetUrl, sessionUrl, xpraExit)=>{\n\n        addInteractput(\"Interactive session started.\", targetUrl, sessionUrl, xpraExit);\n\n    }\n\n    const addWaitingPut = (seconds : number, message : string)=>{\n\n        log.removeWaitingPut(reduceFunctionState);\n\n        reduceFunctionState((state)=>{\n            return {\n                ...state,\n                waiting : true,\n                puts : [...state.puts||[], log.createWaitingPut(\n                    seconds, \n                    message,\n                    contractFunction,\n                    reduceFunctionState\n                )]\n            }\n        })\n    }\n\n    contractFunction.waitHandler = async (seconds, message)=>{\n        addWaitingPut(seconds, message);\n    }\n\n    useEffect(()=>{\n        if(!contractFunction.waiting){\n            log.removeWaitingPut(reduceFunctionState);\n        }\n    }, [contractFunction.waiting])\n\n    \n\n    return (\n\n        <>\n            <div style={{\n                width : \"100%\",\n                paddingBottom : DesktopSizes.Padding.standard,\n            }}>\n                {contractFunction.description && <div style={{\n                    paddingBottom : DesktopSizes.Padding.standard\n                }}>\n                    <DappDescput\n                        contractFunction={contractFunction}\n                        reduceContractFunction={reduceFunctionState}\n                            dappDescput={{\n                                name : \"Description\",\n                                value : contractFunction.description,\n                                putType : \"description\",\n                                contractFunction : contractFunction,\n                                reduceContractFunction : reduceFunctionState\n                            }}\n                        />    \n                </div>}\n                {contractFunction.inputs.length > 0 && <div style={{\n                    paddingBottom : DesktopSizes.Padding.standard\n                }}>\n                    <DappFunctionLogRunButton\n                    reduceContractFunction={reduceFunctionState}\n                    contractFunction={reducedFunctionState}\n                /></div>}\n                <div style={{\n                    paddingBottom : DesktopSizes.Padding.standard\n                }}>\n                    <DappFunctionSubmitState\n                        reduceContractFunction={reduceFunctionState}\n                        loadOracleData={loadOracleData}\n                        call={handleCall}\n                        contractFunction={reducedFunctionState}\n                    />\n                </div>\n                {puts}\n                <br/>\n            </div>\n        </>\n\n    )\n\n}\n","import React, {FC, ReactElement} from 'react';\nimport {DappI} from \"../Dapp\";\nimport { DappFunctionLog } from './DappFunctionLog';\n\nexport type DappFunctionAthenaProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setDappFunction ? : (func : OpenContractFunctionI)=>void\n}\n\nexport const DappFunctionAthena : FC<DappFunctionAthenaProps>  = ({\n    dapp,\n    contractFunction,\n    setDappFunction\n}) =>{\n\n    return (\n\n        <DappFunctionLog setFunctionState={setDappFunction} dapp={dapp} contractFunction={contractFunction}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../../Theme';\nimport {DappI} from \"../../Dapp\";\nimport { DappFunctionAthena } from '../../DappFunction';\n\nexport type ApolloRunDappFunctionViewProps = {\n    dapp : DappI,\n    setDappFunction : (contractFunction : OpenContractFunctionI)=>void\n    contractFunction ? : OpenContractFunctionI\n}\n\nexport const ApolloRunDappFunctionView : FC<ApolloRunDappFunctionViewProps>  = ({\n    dapp,\n    setDappFunction,\n    contractFunction\n}) =>{\n\n    return (\n\n        <div style={{\n            padding: DesktopSizes.Padding.standard\n        }}>\n            {contractFunction && \n            \n                    <DappFunctionAthena\n                        dapp={dapp}\n                        setDappFunction={setDappFunction}\n                        contractFunction={contractFunction}\n                    />\n            }\n            {!contractFunction && <h2>No function selected.</h2>}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { Coin, Github, InfoCircle, PatchCheckFill, PatchPlus } from 'react-bootstrap-icons';\nimport { PlayFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { DappI, } from '../Dapp';\nimport { ethers, providers } from 'ethers';\n\nexport type ApolloRunDappMainItemMobileActionsProps = {\n    gitUrl : string,\n    dapp : DappI\n}\n\nexport const ApolloRunDappMainItemMobileActions : FC<ApolloRunDappMainItemMobileActionsProps>  = ({\n    gitUrl,\n    dapp\n}) =>{\n\n    const handleGitHub = ()=>{\n        window.open(`https://github.com/${dapp.owner}/${dapp.repo}/tree/${dapp.branch}`);\n    }\n\n    const getTokens = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).getOPN('3')\n        }\n    }\n\n    const approveHub = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).approveOPN('3')\n        }\n    }\n\n\n    return (\n\n        <div style={{\n        }}>\n            <p style={{\n                textAlign : \"left\"\n            }}>\n                <InfoCircle size={18}/>&emsp;If this is your first time here, you may need to&nbsp;<a\n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    getTokens();\n                }}\n                style={{\n                    color : \"#99aacc\"\n                }}>get some OPN</a>&nbsp;and&nbsp;<a\n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    approveHub();\n                }}\n                style={{\n                    color : \"#99aacc\"\n                }}>grant access to the Open Contracts hub</a>.\n            </p>\n            <br/>\n            <div style={{\n                display  : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                gap : DesktopSizes.Padding.standard\n            }}>\n                <AthenaButton \n                onClick={handleGitHub}\n                style={{\n                    width : \"100%\",\n                    border : \"none\"\n                }}\n                primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        See on GitHub&emsp;<Github/>\n                    </div>\n                </AthenaButton>\n                <AthenaButton\n                    style={{\n                        width : \"100%\",\n                        border : \"none\"\n                    }}\n                    action={getTokens}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        Get OPN&emsp;<Coin/>\n                    </div>\n                </AthenaButton>\n                <AthenaButton \n                    action={approveHub}\n                    style={{\n                        width : \"100%\",\n                        border : \"none\"\n                    }}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        Grant Hub Access&emsp;<PatchCheckFill/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n            </div>\n            <br/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName, getDappSolidityContract, getDappOracle, getDappImageUri, getDappReadMe, parseGitUrl, getDappContract } from '../Dapp';\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport {ApolloRunDappContent} from \"./ApolloRunDappContent\";\nimport { ApolloRunDappFunctionGridView } from './ApolloRunDappFunctionGridView';\nimport { ApolloRunDappFunctionView } from './ApolloRunDappFunctionView';\nimport { useErrorContext } from '../../../Error/ErrorProvider';\nimport { ApolloRunDappMainItemMobileActions } from './ApolloRunDappMainItemMobileActions';\n\n\nexport type ApolloRunDappMainItemMobileReadmeProps = {\n    style ? : React.CSSProperties,\n    readme : string | undefined\n}\n\nexport const ApolloRunDappMainItemMobileReadMe : FC<ApolloRunDappMainItemMobileReadmeProps> = ({\n    style,\n    readme\n})=>{\n\n    return (\n        <div style={{\n            ...style,\n            textAlign : 'left'\n        }}>\n            {!readme && <Skeleton width=\"100%\" count={5}/>}\n            {readme && <ReactMarkdown plugins={[remarkGfm]}>\n                {readme}    \n            </ReactMarkdown>}\n        </div>\n    )\n\n}\n\nexport type ApolloRunDappMainItemMobileInternalsProps = {\n    dappItem : DappI,\n    setDappItem ? : (dappItem : DappI)=>void,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemMobileInternals : FC<ApolloRunDappMainItemMobileInternalsProps>  = ({\n    dappItem,\n    style,\n    setDappItem,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{\n\n    const _selectedFunc = dappItem.contract && dappItem.contract.contractFunctions ? \n                            dappItem.contract.contractFunctions.filter((func)=>{\n                                return func.name === which\n                            })[0] : undefined\n\n    const selectedFunc = _selectedFunc || (\n        dappItem.contract?.contractFunctions[0]\n    )\n\n    const setFunc = (contractFunction : OpenContractFunctionI)=>{\n\n        \n\n        if(dappItem.contract && setDappItem){\n\n            const newContractFunctions = dappItem.contract.contractFunctions.reduce((agg, oldContractFunction)=>{\n\n                return [\n                    ...agg,\n                    ...(contractFunction.name === oldContractFunction.name) ? [contractFunction] : [oldContractFunction]\n                ]\n            }, [] as OpenContractFunctionI[])\n\n        \n    \n            setDappItem({\n                ...dappItem,\n                contract : {\n                    ...dappItem.contract,\n                    contractFunctions : newContractFunctions\n                }\n            })\n\n        }\n\n    }\n\n    const handleWhich = (which : string)=>{\n        setGrid && setGrid(false);\n        setWhich && setWhich(which);\n    }\n\n    return (\n\n        <div style={{\n            paddingTop : DesktopSizes.Padding.standard,\n            width : \"100%\",\n            // paddingBottom : DesktopSizes.Padding.whitespacePreferred,\n            ...style\n        }}>\n            <div>\n                <div style={{\n                    textAlign : \"left\",\n                    color : Colors.Maintheme\n                }}>\n                    <h1>{dappItem.contract ? dappItem.contract.contractName : \"\"}</h1>\n                    <p>{dappItem.contract ? dappItem.contract.contractDescription : \"\"}</p>\n                </div>\n                <div>\n                    <ApolloRunDappMainItemMobileActions\n                        dapp={dappItem}\n                        gitUrl={dappItem.gitUrl}\n                    />\n                </div>\n                <ApolloRunDappContent grid={grid} setGrid={setGrid}>\n                    <ApolloRunDappContent.Grid>\n                        <ApolloRunDappFunctionGridView\n                            dapp={dappItem}\n                            setWhich={handleWhich}\n                            which={which}\n                        />\n                    </ApolloRunDappContent.Grid>\n                    <ApolloRunDappContent.Single>\n                        <ApolloRunDappFunctionView\n                            dapp={dappItem}\n                            setDappFunction={setFunc}\n                            contractFunction={selectedFunc}\n                        />\n                    </ApolloRunDappContent.Single>\n                </ApolloRunDappContent>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport type ApolloRunDappMainItemMobileProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp ? : (dapp : DappI)=>void,\n    forceLoad ? : boolean,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemMobile : FC<ApolloRunDappMainItemMobileProps>  = ({\n    dappItem,\n    style,\n    updateDapp,\n    which,\n    setWhich,\n    setGrid,\n    grid\n}) =>{\n\n    \n    \n\n    return (\n\n        <ApolloRunDappMainItemMobileInternals \n            setDappItem={updateDapp} \n            dappItem={dappItem} \n            grid={grid}\n            setGrid={setGrid}\n            which={which}\n            setWhich={setWhich}\n            style={style}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { Coin, Github, InfoCircle, PatchCheckFill, PatchPlus } from 'react-bootstrap-icons';\nimport { PlayFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { DappI, parseGitUrl } from '../Dapp';\nimport { ethers, providers } from 'ethers';\n\nexport type ApolloRunDappMainItemActionsProps = {\n    gitUrl : string,\n    dapp : DappI\n}\n\nexport const ApolloRunDappMainItemActions : FC<ApolloRunDappMainItemActionsProps>  = ({\n    gitUrl,\n    dapp\n}) =>{\n\n    const handleGitHub = ()=>{\n        window.open(`https://github.com/${dapp.owner}/${dapp.repo}/tree/${dapp.branch}`);\n    }\n\n    const getTokens = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).getOPN('3')\n        }\n    }\n\n    const approveHub = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).approveOPN('3')\n        }\n    }\n\n    return (\n\n        <div style={{\n        }}>\n            <p style={{\n                textAlign : \"left\"\n            }}>\n                <InfoCircle size={18}/>&emsp;If this is your first time here, you may need to&nbsp;<a \n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    getTokens()\n                }}\n                style={{\n                    color : \"#99aacc\"\n                }}>get some OPN</a>&nbsp;and&nbsp;<a \n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    approveHub();\n                }}\n                style={{\n                    color : \"#99aacc\"\n                }}>grant access to the Open Contracts hub</a>.\n            </p>\n            <br/>\n            <div style={{\n            display : \"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n            }}>\n                <AthenaButton \n                style={{\n                    border : \"none\",\n                }}\n                onClick={handleGitHub}\n                primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        See on GitHub&emsp;<Github/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n                <AthenaButton\n                    style={{\n                        border : \"none\",\n                    }}\n                    action={getTokens}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        Get OPN&emsp;<Coin/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n                <AthenaButton \n                    style={{\n                        border : \"none\",\n                    }}\n                    action={approveHub}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        Grant Hub Access&emsp;<PatchCheckFill/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n            </div>\n            <br/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName,  getDappContract } from '../Dapp';\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport {ApolloRunDappContent} from \"./ApolloRunDappContent\";\nimport { ApolloRunDappFunctionGridView } from './ApolloRunDappFunctionGridView';\nimport { ApolloRunDappFunctionView } from './ApolloRunDappFunctionView';\nimport { ApolloRunDappMainItemActions } from './ApolloRunDappMainItemActions';\n\n\nexport type ApolloRunDappMainItemReadmeProps = {\n    style ? : React.CSSProperties,\n    readme : string | undefined\n}\n\nexport const ApolloRunDappMainItemReadMe : FC<ApolloRunDappMainItemReadmeProps> = ({\n    style,\n    readme\n})=>{\n\n    return (\n        <div style={{\n            ...style,\n            textAlign : 'left'\n        }}>\n            {!readme && <Skeleton width=\"100%\" count={5}/>}\n            {readme && <ReactMarkdown plugins={[remarkGfm]}>\n                {readme}    \n            </ReactMarkdown>}\n        </div>\n    )\n\n}\n\nexport type ApolloRunDappMainItemInternalsProps = {\n    dappItem : DappI,\n    setDappItem ? : (dappItem : DappI)=>void,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemInternals : FC<ApolloRunDappMainItemInternalsProps>  = ({\n    dappItem,\n    style,\n    setDappItem,\n    grid,\n    setGrid, \n    which,\n    setWhich\n}) =>{\n\n    const _selectedFunc = dappItem.contract && dappItem.contract.contractFunctions ? \n                            dappItem.contract.contractFunctions.filter((func)=>{\n                                return func.name === which\n                            })[0] : undefined\n\n    const selectedFunc = _selectedFunc || (\n        dappItem.contract?.contractFunctions[0]\n    )\n\n    const setFunc = (contractFunction : OpenContractFunctionI)=>{\n\n        if(dappItem.contract && setDappItem){\n\n            const newContractFunctions = dappItem.contract.contractFunctions.reduce((agg, oldContractFunction)=>{\n\n                return [\n                    ...agg,\n                    ...(contractFunction.name === oldContractFunction.name) ? [contractFunction] : [oldContractFunction]\n                ]\n            }, [] as OpenContractFunctionI[])\n\n            setDappItem({\n                ...dappItem,\n                contract : {\n                    ...dappItem.contract,\n                    contractFunctions : newContractFunctions\n                }\n            })\n\n        }\n\n    }\n\n    const handleWhich = (which : string)=>{\n        setGrid && setGrid(false);\n        setWhich && setWhich(which);\n    }\n\n    return (\n\n        <div style={{\n            width : \"100%\",\n            ...style\n        }}>\n            <div>\n                <div style={{\n                    textAlign : \"left\",\n                    color : Colors.Maintheme\n                }}>\n                    <h1>{dappItem.contract ? dappItem.contract.contractName : \"\"}</h1>\n                    <p>{dappItem.contract ? dappItem.contract.contractDescription : \"\"}</p>\n                </div>\n                <div>\n                    <ApolloRunDappMainItemActions\n                        dapp={dappItem}\n                        gitUrl={dappItem.gitUrl}\n                    />\n                </div>\n                <ApolloRunDappContent \n                    which={selectedFunc ? selectedFunc.name : \"\"}\n                    grid={grid} setGrid={setGrid}>\n                    <ApolloRunDappContent.Grid>\n                        <ApolloRunDappFunctionGridView\n                            dapp={dappItem}\n                            setWhich={handleWhich}\n                            which={which}\n                        />\n                    </ApolloRunDappContent.Grid>\n                    <ApolloRunDappContent.Single>\n                        <ApolloRunDappFunctionView\n                            dapp={dappItem}\n                            setDappFunction={setFunc}\n                            contractFunction={selectedFunc}\n                        />\n                    </ApolloRunDappContent.Single>\n                </ApolloRunDappContent>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport type ApolloRunDappMainItemProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp ? : (dapp : DappI)=>void,\n    forceLoad ? : boolean,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemDesktop : FC<ApolloRunDappMainItemProps>  = ({\n    dappItem,\n    style,\n    updateDapp,\n    grid,\n    setGrid,\n    setWhich,\n    which\n}) =>{\n\n   \n\n    return (\n\n        <ApolloRunDappMainItemInternals \n            setWhich={setWhich}\n            which={which}\n            grid={grid}\n            setGrid={setGrid}\n            setDappItem={updateDapp} dappItem={dappItem} style={style}/>\n\n    )\n\n}","import { Octokit } from \"@octokit/rest\";\nimport to from \"await-to-js\";\nimport {fromByteArray} from \"base64-js\";\nconst { createPullRequest } = require(\"octokit-plugin-create-pull-request\");\n\nexport const MyOctokit = Octokit.plugin(createPullRequest);\nexport const octokit = new MyOctokit({\n    auth : process.env.REACT_APP_GITHUB_TOKEN\n});\n\nexport const getSha = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    const { data: { sha } } = await octokit.request(`GET /repos/${args.owner}/${args.repo}/contents/${args.path}`);\n\n    return sha\n}\n\nexport const getFileBlob = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    return await octokit.rest.git.getBlob({\n        owner : args.owner,\n        repo : args.repo,\n        file_sha : await getSha({\n            owner : args.owner,\n            repo : args.repo,\n            path : args.path\n        })\n    })\n\n}\n\n/**\n * https://stackoverflow.com/questions/30106476/using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\n * @param str \n * @returns \n */\nfunction b64DecodeUnicode(str : string) {\n    return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n    }).join(''))\n}\n\nexport const getFileText = async (args : {\n    owner : string,\n    repo : string,\n    branch ? : string\n    path : string\n}) : Promise<string>=> {\n\n    const [error, text] = await to(\n        (await fetch(`https://raw.githubusercontent.com/${args.owner}/${args.repo}/${args.branch||\"main\"}/${args.path}`)).text()\n    )\n\n    if(error){\n        throw error;\n    }\n\n    return text as string;\n\n}","import { getFileBlob, getFileText, getSha, octokit } from \"../../Sytems/Octokit\";\nimport {to} from \"await-to-js\";\n\nexport interface DappDataI {\n    name : string,\n    readme : string,\n    oracle : string,\n    appTile : string,\n    contract : OpenContractI,\n    openContractsInterface : OpenContractsInterfaceI,\n    dappInterface : OpenContractInterfaceI\n}\n\nexport interface DappI extends Partial<DappDataI>{\n    __isDapp__ : true\n    id : string\n    gitUrl : string,\n    owner : string,\n    repo : string,\n    branch : string,\n    // loaded : boolean\n}\n\nexport const isDapp = (obj : any) : obj is DappI => {\n\n    return obj.__isDapp__;\n\n}\n\nexport const parseGitUrl = (url : string) : {\n    owner : string |undefined,\n    repo : string | undefined,\n    branch : string | undefined\n}=>{\n\n    const _indexCom = url.indexOf(\".com\");\n    const indexCom = _indexCom > 0 ? _indexCom + 4 : 0;\n    const substr = url.substring(indexCom).trim().replace(/^\\/*|-\\/*$/, \"\");\n\n    const split = substr.split(\"/\");\n\n    \n\n    return {\n        owner : split.length ? split[0] : undefined,\n        repo : split.length > 1 ? split[1] : undefined,\n        branch : split.length > 2 ? split[2] : undefined\n    }\n    \n\n}\n\nconst README = 'README.md';\n\nexport const parseName = (readme : string)=>{\n\n    const lines = readme.split(\"\\n\");\n    return lines.length ? \n                    lines[0].replace(/(\\W|\\s)/, \"\").trim()\n                    : \"Unnamed\"\n\n\n}\n\nexport const getDappName = async (dapp : DappI, onGet ? : (name : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    \n\n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n    const name = parseName(readme||\"\");\n\n    onGet && onGet(name);\n\n    return name;\n\n}\n\nexport const isDescriptionLine = (line : string)=>{\n\n    return (\n        line.length < 1 ||\n        line[0] !== \"#\"\n    )\n\n}\n\nexport const getDescriptionLines = (readme : string) : [number, number]=>{\n\n    const lines = readme.split(\"\\n\");\n\n    if(lines.length < 2){\n        return [-1, -1];\n    }\n\n    if(!isDescriptionLine(lines[1])){\n        return [-1, -1];\n    }\n\n    let i = 1;\n    while(i < lines.length && isDescriptionLine(lines[i])) ++i;\n\n    return [1, i];\n\n}\n\nexport const parseDescription = (readme : string) : string=>{\n\n    const descriptionLines = getDescriptionLines(readme);\n\n    return readme.split(\"\\n\").slice(descriptionLines[0], descriptionLines[1] + 1).join(\"\\n\");\n\n}\n\nexport const getDescription = async (dapp : DappI, onGet ? : (description : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n\n    const description = parseDescription(readme||\"\");\n\n\n    onGet && onGet(description);\n\n    return description;\n\n}\n\nexport const SOLIDITY = \"contract.sol\";\n\nexport const getDappSolidityContract = async (dapp : DappI, onGet ? : (contract : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, contract] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : SOLIDITY\n    })) : [undefined, \"\"];\n\n    if(err) throw err;\n\n    onGet && onGet(contract||\"\");\n\n    return contract||\"\";\n\n}\n\nexport const ORACLE = \"oracle.py\";\n\nexport const getDappOracle = async (dapp : DappI, onGet ? : (oracle : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const oracle = owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : ORACLE\n    }) : \"\";\n\n    onGet && onGet(oracle);\n\n    return oracle;\n\n}\n\nexport const APPTILE = \"tile\";\n\nexport const imageUriFromRepoAndOwner = (args : {\n    owner : string,\n    repo : string,\n    branch ? : string\n    type : string\n})=>{\n\n    return `https://raw.githubusercontent.com/${args.owner}/${args.repo}/${args.branch||\"main\"}/${APPTILE}.${args.type}`\n\n}\n\nexport const getDappImageUri = async (dapp : DappI, onGet ? : (imageUri : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    let uri =  \"\";\n    try {\n\n        const ext = \"png\";\n\n        await getFileBlob({\n            owner : owner||\"\",\n            repo : repo||\"\",\n            path : `${APPTILE}.${ext}`\n        })\n\n        uri = owner && repo ? imageUriFromRepoAndOwner({\n            owner : owner,\n            repo : repo,\n            type : ext\n        })  : \"\"\n\n    \n\n    } catch(e){\n\n        try {\n\n            const ext = \"jpg\"\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n\n        } catch(e){\n\n            const ext = \"jpg\"\n\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n        }\n\n    } \n\n    onGet && onGet(uri);\n\n    return uri;\n\n}\n\nexport const getDappReadMe = async (dapp : DappI, onGet ? : (readme : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const readme = decodeURI(owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    }) : \"\");\n\n    onGet && onGet(readme);\n\n    return readme;\n\n}\n\nexport const jsonInterfacePath = \"interface.json\";\nexport const getDappInterface = async (\n    dapp : DappI,\n    onGet ? : (dappInterface : OpenContractInterfaceI)=>void\n) : Promise<OpenContractInterfaceI>=>{\n\n    const dappInterface = (dapp.owner && dapp.repo) ? JSON.parse(\n        await getFileText({\n            owner : dapp.owner,\n            repo : dapp.repo,\n            branch : dapp.branch,\n            path : jsonInterfacePath\n        })\n    ) : undefined\n\n    if(!dappInterface){\n        throw new Error(\"Failed to find a Dapp Interface.\");\n    }\n\n    onGet && onGet(dappInterface);\n\n    return dappInterface;\n\n}\n\nexport const ocInterfacePath = \"/client-protocol/opencontracts_interface.json\"\nexport const getOpenContractsInterface = async (\n    onGet ? : (dappInterface : OpenContractsInterfaceI)=>void\n) : Promise<OpenContractsInterfaceI>=>{\n\n    \n\n    const ocInterface = JSON.parse(await (await fetch(ocInterfacePath)).text())\n\n    if(!ocInterface){\n        throw new Error(\"Failed to find the Open Contracts interface for this site.\");\n    }\n\n    onGet && onGet(ocInterface);\n\n    return ocInterface;\n\n}\n\nexport const getDappContract = async (\n    dapp : DappI,\n    onGet ? : (contract : OpenContractI)=>void\n) : Promise<OpenContractI>=>{\n\n    const opencontract = await window.OpenContracts();\n    const dappInterface = dapp.dappInterface|| await getDappInterface(dapp);\n    const openContractsInterface = dapp.openContractsInterface || await getOpenContractsInterface();\n\n    opencontract.parseContracts(openContractsInterface, dappInterface);\n\n    onGet && onGet(opencontract);\n\n    return opencontract;\n\n}\n\nexport const getDappInfo = async (\n    dapp : DappI\n)=>{\n\n    \n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    return owner && repo && await octokit.rest.repos.get({\n        owner : owner,\n        repo : repo\n    });\n\n}\n","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport {ApolloRunDappMainItemMobile} from \"./ApolloRunDappMainItemMobile\";\nimport {ApolloRunDappMainItemDesktop} from \"./ApolloRunDappMainItemDesktop\";\nimport { useErrorContext } from '../../../Error/ErrorProvider';\nimport { ApolloRunDappMainItemActions } from './ApolloRunDappMainItemActions';\nimport { MediaResponsive } from '../../../Sytems';\nimport { DappI, getDappName,  getDappContract } from '../Dapp';\n\nexport type ApolloRunDappMainItemProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp ? : (dapp : DappI)=>void,\n    forceLoad ? : boolean,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItem : FC<ApolloRunDappMainItemProps>  = (props) =>{\n\n     useEffect(()=>{\n          \n     }, [])\n\n     const {\n          dispatch\n      } = useErrorContext();\n\n  \n      const [nameLoad, setNameLoad] = useState<string|undefined>(undefined);\n      useEffect(()=>{\n  \n          if(!nameLoad){\n              getDappName(\n                  props.dappItem,\n                  (name : string)=>setNameLoad(name)\n              ).catch((err)=>{\n                  dispatch((state)=>{\n                      return {\n                          ...state,\n                          error : err\n                      }\n                  })\n              })\n          }\n  \n      }, [props.dappItem.name])\n      useEffect(()=>{\n  \n          if(props.dappItem.name !== nameLoad){\n              props.updateDapp && props.updateDapp({\n                  ...props.dappItem,\n                  name : nameLoad\n              })\n          }\n  \n      })\n  \n      const [contractLoad, setContractLoad] = useState<OpenContractI|undefined>(undefined);\n      useEffect(()=>{\n          if(!props.dappItem.contract){\n              getDappContract(\n                  props.dappItem,\n                  (contract : OpenContractI)=>{\n                      setContractLoad(contract)\n                  }\n              ).catch((err)=>{\n                  dispatch((state)=>{\n                      return {\n                          ...state,\n                          error : err\n                      }\n                  })\n              })\n          }\n  \n      }, [props.dappItem.contract?.contractName])\n      useEffect(()=>{\n  \n          if(contractLoad && (props.dappItem.contract !== contractLoad)){\n              props.updateDapp && props.updateDapp({\n                  ...props.dappItem,\n                  contract : contractLoad\n              })\n          }\n  \n      }, [contractLoad])\n\n\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <ApolloRunDappMainItemDesktop \n                grid={props.grid}\n                setGrid={props.setGrid}\n                which={props.which}\n                setWhich={props.setWhich}\n                style={props.style}\n                dappItem={props.dappItem}\n                updateDapp={props.updateDapp}\n             />\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <ApolloRunDappMainItemDesktop \n                    grid={props.grid}\n                    setGrid={props.setGrid}\n                    which={props.which}\n                    setWhich={props.setWhich}\n                    style={props.style}\n                    dappItem={props.dappItem}\n                    updateDapp={props.updateDapp}\n                />\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <ApolloRunDappMainItemMobile\n                    grid={props.grid}\n                    setGrid={props.setGrid}\n                    which={props.which}\n                    setWhich={props.setWhich}\n                    style={props.style}\n                    dappItem={props.dappItem}\n                    updateDapp={props.updateDapp}\n                />\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <ApolloRunDappMainItemMobile\n                    grid={props.grid}\n                    setGrid={props.setGrid}\n                    which={props.which}\n                    setWhich={props.setWhich}\n                    style={props.style}\n                    dappItem={props.dappItem}\n                    updateDapp={props.updateDapp}\n                    />\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { DappI } from '../../Items';\nimport { ApolloRunDappMainItem } from '../../Items/Dapp/ApolloDapp/ApolloRunDappMainItem';\n\nexport type RunBenchDesktopProps = {\n    dapp  : DappI,\n    setDapp : (dapp : DappI)=>void,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const RunBenchDesktop : FC<RunBenchDesktopProps>  = ({\n    dapp, \n    setDapp,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{\n\n    return (\n            <ApolloRunDappMainItem \n            grid={grid}\n            setGrid={setGrid}\n            which={which}\n            setWhich={setWhich}\n            dappItem={dapp} updateDapp={setDapp} />\n       \n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { RunBenchDesktop } from '../../Benches';\nimport { DappI } from '../../Items';\n\nexport type RunPageWithRepoProps = {\n    dapp : DappI,\n    setDapp : (dapp : DappI)=>void\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const RunPageWithRepo : FC<RunPageWithRepoProps>  = ({\n    dapp,\n    setDapp,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{\n\n    return (<RunBenchDesktop \n        grid={grid}\n        setGrid={setGrid}\n        which={which}\n        setWhich={setWhich}\n        dapp={dapp} setDapp={setDapp}/>)\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { TextInputApollo } from '../../Components/TextInput';\nimport { useNavigate } from 'react-router-dom';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors } from '../../Theme';\nimport { parseGitUrl } from '../../Items';\nimport { DappI } from '../../Items';\n\nexport type RunPageNoRepoProps = {\n    stepStatus : StepStatusT,\n    dapp : DappI,\n    setDapp : (dapp : DappI)=>void,\n}\n\n\nexport const RunPageNoRepo : FC<RunPageNoRepoProps>  = ({\n    stepStatus,\n    dapp,\n    setDapp\n}) =>{\n\n    const navigate = useNavigate();\n    const [text, setText] = useState(\"\");\n\n    const handleSubmit = ()=>{\n\n        const {\n            owner,\n            repo,\n            branch\n        } = parseGitUrl(text);\n\n        setDapp({\n            __isDapp__ : true,\n            gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n            id : `${owner}/${repo}/${branch||\"main\"}`,\n            owner : owner || \"\",\n            repo : repo || \"\", \n            branch : branch || \"main\",\n            // loaded : false\n        })\n\n        navigate(`/${owner}/${repo}/${branch||\"main\"}`);\n\n    }\n\n    const handleEnter = (text : string)=>{\n        const {\n            owner,\n            repo,\n            branch\n        } = parseGitUrl(text);\n\n        setDapp({\n            __isDapp__ : true,\n            gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n            id : `${owner}/${repo}/${branch||\"main\"}`,\n            owner : owner || \"\",\n            repo : repo || \"\", \n            branch : branch || \"main\",\n            // loaded : false\n        })\n\n        navigate(`/${owner}/${repo}/${branch||\"main\"}`);\n\n    }\n\n    return (\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <TextInputApollo \n            onSubmit={handleEnter}\n            placeholder={\"Enter repo\"}\n            onTextInput={setText}/>&emsp;<AthenaButton \n            onClick={handleSubmit}\n            primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                Submit\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { RunBenchDesktop } from '../../Benches';\nimport { Params, useParams } from 'react-router-dom';\nimport { RunPageWithRepo } from './RunPageWithRepo';\nimport { RunPageNoRepo } from './RunPageNoRepo';\nimport { DappI } from '../../Items';\n\nexport type ReadyToRunProps = {\n    stepStatus : StepStatusT,\n    dapp : DappI,\n    setDapp : (dapp : DappI)=>void,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ReadyToRun : FC<ReadyToRunProps>  = ({\n    stepStatus,\n    dapp,\n    setDapp,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{    \n\n    return (dapp.owner.length && dapp.repo.length) ?\n    (<RunPageWithRepo \n        grid={grid}\n        setGrid={setGrid}\n        which={which}\n        setWhich={setWhich}\n        dapp={dapp} setDapp={setDapp}/>) :\n    (<RunPageNoRepo \n        dapp={dapp}\n        setDapp={setDapp}\n        stepStatus={stepStatus}/>)\n\n}","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutDesktopProps = {}\n\nconst HeaderLayoutDesktop : FC<HeaderLayoutDesktopProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            height : \"100%\",\n            width : \"100%\",\n            display : \"grid\",\n            gridTemplateColumns : \"1fr 1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\",\n            position : \"sticky\"\n        }}>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Brand}\n            </div>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutDesktop.Brand = generateNamedMember('Brand');\nHeaderLayoutDesktop.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutDesktop.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutDesktop};","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport { DesktopSizes } from '../../Theme';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutMobileProps = {}\n\nconst HeaderLayoutMobile : FC<HeaderLayoutMobileProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            display : \"grid\",\n            gridTemplateColumns : \"1fr\",\n            gap : DesktopSizes.Padding.whitespacePreferred,\n            padding : DesktopSizes.Padding.whitespacePreferred\n        }}>\n            <div>\n                {Brand}\n            </div>\n            <div>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutMobile.Brand = generateNamedMember('Brand');\nHeaderLayoutMobile.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutMobile.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutMobile};","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutDesktopProps = {}\n\nconst MainLayoutDesktop : FC<MainLayoutDesktopProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            height : \"auto\",\n            width : \"100vw\",\n            display : \"grid\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                width : DesktopSizes.Main.contentWidth,\n                overflow : \"visible\"\n            }}>\n                <div style={{\n                    height : \"200px\",\n                    width : \"100%\"\n                }}>\n                    {Header}\n                </div>\n                <div style={{\n                    height : \"auto\",\n                    width : \"100%\",\n                    // overflow : \"auto\",\n                }}> \n                    {Content}\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutDesktop.Header = generateNamedMember(\"Header\");\nMainLayoutDesktop.Content = generateNamedMember(\"Content\");\nMainLayoutDesktop.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutDesktop}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutMobileProps = {}\n\nconst MainLayoutMobile : FC<MainLayoutMobileProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            flexDirection : \"column\",\n            margin : \"0 auto\",\n            width : \"80vw\",\n        }}>\n            <div>\n                {Header}\n            </div>\n            <div>\n                {Content}\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutMobile.Header = generateNamedMember('Header');\nMainLayoutMobile.Content = generateNamedMember(\"Content\");\nMainLayoutMobile.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutMobile}","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { Colors } from './Colors';\n\n\nexport interface ColorContextI {\n    colors : typeof Colors,\n    dispatch : (fn : (state : ColorContextI)=>ColorContextI)=>void\n}\n\nconst DefaultColorContext : ColorContextI = {\n    colors : Colors,\n    dispatch : ()=>{}\n}\n\n\nexport const ColorContext = createContext(DefaultColorContext);\n\nexport const ColorReducer = (\n    state : ColorContextI, \n    action : (state : ColorContextI)=>ColorContextI\n)=>{\n    return action(state);\n}\n\nexport type ColorProviderProps = typeof Colors\n\nexport const ColorProvider : FC<ColorProviderProps>  = (props) =>{\n\n    const {\n        children,\n        ...colors\n    } = props;\n\n    const [state, dispatch] = useReducer(ColorReducer, DefaultColorContext);\n\n    return (\n\n        <ColorContext.Provider value={{\n            ...state,\n            colors : colors\n        }}>\n                {props.children}\n        </ColorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useColorStore = () : ColorContextI=>{\n\n    const context = useContext(ColorContext);\n\n    if(!context){\n        throw new Error(\"useColors must be called within a ColorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport {File} from \"react-bootstrap-icons\";\nimport { useColorStore } from '../../Theme/ColorProvider';\n\nexport type LogoBProps = {\n    main? : string,\n    post? : string,\n    size? : React.CSSProperties[\"height\"],\n    fontSize ? : React.CSSProperties[\"height\"],\n    logoColor? : React.CSSProperties[\"color\"],\n    fontColor? : React.CSSProperties[\"color\"]\n    label ? : boolean\n}\n\nexport const LogoB : FC<LogoBProps>  = ({\n    main = \"OPEN\",\n    post = \"CONTRACTS\",\n    size = \"80px\",\n    fontSize = \"24px\",\n    logoColor,\n    fontColor,\n    label = true\n}) =>{\n\n    const Colors = useColorStore();\n    const _logoColor = logoColor || Colors.colors.Maintheme;\n    const _fontColor = fontColor || Colors.colors.Maintheme;\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <div style={{\n                height : size,\n                width : size\n            }}>\n                <svg viewBox=\"0 0 1295 1296\" xmlns=\"http://www.w3.org/2000/svg\"\n                overflow=\"hidden\">\n                    <defs>\n                        <clipPath id=\"clip0\">\n                            <rect x=\"1308\" y=\"55\" width=\"1295\" height=\"1296\" />\n                        </clipPath>\n                    </defs>\n                    <g clipPath=\"url(#clip0)\" transform=\"translate(-1308 -55)\">\n                        <path\n                            d=\"M2281.32 449.263 2551.39 449.263 2552.12 450.769C2584.88 528.295 2603 613.53 2603 703 2603 792.47 2584.88 877.705 2552.12 955.231L2550.93 957.704 2280.6 957.704 2298.15 934.214C2342.71 868.213 2368.72 788.647 2368.72 703 2368.72 617.353 2342.71 537.787 2298.15 471.786ZM1955.5 55C2156.65 55 2336.38 146.796 2455.14 290.812L2455.18 290.863 1983.28 290.863 1955.5 289.459C1727.28 289.459 1542.28 474.608 1542.28 703 1542.28 931.392 1727.28 1116.54 1955.5 1116.54L1964.14 1116.1 2454.31 1116.1 2413.35 1161.21C2296.18 1278.47 2134.3 1351 1955.5 1351 1597.9 1351 1308 1060.88 1308 703 1308 345.119 1597.9 55 1955.5 55Z\"\n                            fill={_logoColor} fillRule=\"evenodd\" />\n                    </g>\n                </svg>\n            </div>\n            &emsp;\n            {label && <div style={{\n                fontSize : fontSize,\n                color : _fontColor,\n                textAlign : \"left\",\n                lineHeight : \"1.3em\"\n            }}>\n                {main}\n                <br/>\n                {post}\n            </div>}\n        </div>\n       \n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Colors} from \"../../../Theme\";\nimport {CircleFill as Circle} from \"react-bootstrap-icons\";\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\nimport { useState } from 'react';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\n\nexport type ReadyT = \"ready\" | \"not ready\" | \"failed\";\n\nexport interface StateMapI<T extends any = string> {\n    \"ready\" ? : T,\n    \"not ready\" ? : T, \n    \"failed\" ? : T\n}\n\nexport type AristophanesReadyProps = {\n    right ? : boolean\n    ready ? : \"ready\" | \"not ready\" | \"failed\",\n    label ? : string,\n    size ? : React.CSSProperties[\"height\"],\n    expressions ? : StateMapI,\n    information ? : StateMapI,\n    colors ? : StateMapI<React.CSSProperties[\"color\"]>,\n    style ? : React.CSSProperties,\n    lightStyle ? : React.CSSProperties,\n    onClick ?  : (ready : AristophanesReadyProps[\"ready\"])=>void\n}\n\nexport const DefaultExpressions : StateMapI = {\n    \"ready\" : \"Ready!\",\n    \"not ready\" : \"Awaiting...\",\n    \"failed\" : \"Failed\"\n} as const\n\nexport const DefaultInformation : StateMapI = {\n    \"ready\" : \"The dependency has been loaded.\",\n    \"not ready\" : \"Trying to load the dependency.\",\n    \"failed\" : \"We could not load the dependency.\"\n} as const\n\nexport const DefaultColors : StateMapI<React.CSSProperties[\"color\"]> = {\n    \"ready\" : Colors.forestEdge,\n    \"not ready\" : Colors.waitingYellow,\n    \"failed\" : Colors.failedRed\n} as const\n\n/**\n * A Ready button.\n * @param props\n * @returns \n */\nexport const AristophanesReady : FC<AristophanesReadyProps>  = ({\n    right,\n    ready = \"not ready\",\n    label,\n    expressions,\n    information,\n    colors,\n    size,\n    style,\n    lightStyle,\n    onClick\n}) =>{\n\n    const _expressions = {\n        ...DefaultExpressions,\n        ...expressions\n    }\n\n    const _information = {\n        ...DefaultExpressions,\n        ...information\n    }\n\n    const _colors = {\n        ...DefaultColors,\n        ...colors\n    }\n\n    const handleClick = ()=>{\n        onClick && onClick(ready);\n    }\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n        <ThroughGlassAgathocles glass={isHovered} glassOpacity={.7}>\n             <GrowOnEventAchamaenid grow={isHovered}>\n                <div\n                onMouseOver={handleMouseOver}\n                onMouseOut={handleMouseOut}\n                title={_information[ready]}\n                onClick={handleClick}\n                style={{\n                    display : \"flex\",\n                    gridTemplateColumns : \"1fr 5fr\",\n                    justifyContent : \"left\",\n                    justifyItems : \"left\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    height : \"40px\",\n                    fontSize : \"15px\",\n                    width : \"auto\",\n                    cursor : \"pointer\",\n                    ...style\n                }}>\n                    {!right && <div style={{\n                        display: \"flex\",\n                        height : \"100%\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Circle \n                        color={_colors[ready]}\n                        size={\"65%\"}\n                        style={{\n                            ...lightStyle\n                        }}/>\n                    </div>}\n                    &ensp;\n                    <div style={{\n                        display : \"flex\",\n                        height : \"100%\",\n                        gridTemplateColumns : \"1fr\",\n                        gridTemplateRows : \"1fr 1fr\",\n                        verticalAlign : \"center\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <div>\n                            <span style={{\n                                color : Colors.Maintheme\n                            }}>{label}</span><br/>\n                            <span style={{\n                                color : Colors.tertiaryTextColor\n                            }}>\n                                {_expressions[ready]}\n                            </span>\n                        </div>\n                    </div>\n                    &ensp;\n                    {right && <div style={{\n                        display: \"flex\",\n                        height : \"100%\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Circle \n                        color={_colors[ready]}\n                        size={\"65%\"}\n                        style={{\n                            ...lightStyle\n                        }}/>\n                    </div>}\n                </div>\n            </GrowOnEventAchamaenid>\n        </ThroughGlassAgathocles>\n       \n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Colors} from \"../../../Theme\";\nimport {CircleFill as Circle} from \"react-bootstrap-icons\";\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\nimport { useState } from 'react';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\n\nexport type ReadyT = \"ready\" | \"not ready\" | \"failed\";\n\nexport interface StateMapI<T extends any = string> {\n    \"ready\" ? : T,\n    \"not ready\" ? : T, \n    \"failed\" ? : T\n}\n\nexport type AristophanesReadyStackProps = {\n    right ? : boolean\n    ready ? : \"ready\" | \"not ready\" | \"failed\",\n    label ? : string,\n    size ? : React.CSSProperties[\"height\"],\n    expressions ? : StateMapI,\n    information ? : StateMapI,\n    colors ? : StateMapI<React.CSSProperties[\"color\"]>,\n    style ? : React.CSSProperties,\n    lightStyle ? : React.CSSProperties,\n    onClick ?  : (ready : AristophanesReadyStackProps[\"ready\"])=>void\n}\n\nexport const DefaultExpressions : StateMapI = {\n    \"ready\" : \"Ready!\",\n    \"not ready\" : \"Awaiting...\",\n    \"failed\" : \"Failed\"\n} as const\n\nexport const DefaultInformation : StateMapI = {\n    \"ready\" : \"The dependency has been loaded.\",\n    \"not ready\" : \"Trying to load the dependency.\",\n    \"failed\" : \"We could not load the dependency.\"\n} as const\n\nexport const DefaultColors : StateMapI<React.CSSProperties[\"color\"]> = {\n    \"ready\" : Colors.forestEdge,\n    \"not ready\" : Colors.waitingYellow,\n    \"failed\" : Colors.failedRed\n} as const\n\n/**\n * A Ready button.\n * @param props\n * @returns \n */\nexport const AristophanesReadyStack : FC<AristophanesReadyStackProps>  = ({\n    right,\n    ready = \"not ready\",\n    label,\n    expressions,\n    information,\n    colors,\n    size,\n    style,\n    lightStyle,\n    onClick\n}) =>{\n\n    const _expressions = {\n        ...DefaultExpressions,\n        ...expressions\n    }\n\n    const _information = {\n        ...DefaultExpressions,\n        ...information\n    }\n\n    const _colors = {\n        ...DefaultColors,\n        ...colors\n    }\n\n    const handleClick = ()=>{\n        onClick && onClick(ready);\n    }\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n        <ThroughGlassAgathocles glass={isHovered} glassOpacity={.7}>\n             <GrowOnEventAchamaenid grow={isHovered}>\n                <div\n                onMouseOver={handleMouseOver}\n                onMouseOut={handleMouseOut}\n                title={_information[ready]}\n                onClick={handleClick}\n                style={{\n                    display : \"grid\",\n                    gridTemplateColumns : \"1fr\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    height : \"auto\",\n                    fontSize : \"15px\",\n                    width : \"auto\",\n                    cursor : \"pointer\",\n                    ...style\n                }}>\n                  \n                    <div>\n                        <Circle \n                            color={_colors[ready]}\n                            size={\"18px\"}\n                            style={{\n                                ...lightStyle\n                            }}/>\n                    </div>\n                    <div style={{\n                        display : \"flex\",\n                        height : \"100%\",\n                        gridTemplateColumns : \"1fr\",\n                        gridTemplateRows : \"1fr 1fr\",\n                        verticalAlign : \"center\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        textAlign : \"center\"\n                    }}>\n                        <div>\n                            <span style={{\n                                color : Colors.Maintheme\n                            }}>{label}</span><br/>\n                            <span style={{\n                                color : Colors.tertiaryTextColor,\n                                wordWrap : \"break-word\",\n                                overflowWrap : \"anywhere\"\n                            }}>\n                                {_expressions[ready]}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </GrowOnEventAchamaenid>\n        </ThroughGlassAgathocles>\n       \n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AristophanesReady, AristophanesReadyStack, ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {ethers} from \"ethers\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Colors } from '../../Theme';\n\nexport type ConnectionStatusProps = {\n    wallet ? : ReadyT,\n    style ? : React.CSSProperties,\n    stack ? : boolean\n}\n\nexport const ConnectionStatus : FC<ConnectionStatusProps>  = ({\n    wallet,\n    style,\n    stack\n}) =>{\n\n    const [address, setAddress] = useState<string|undefined>(undefined);\n\n    useEffect(()=>{\n\n        if(wallet === \"ready\"){\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            const signer = provider.getSigner();\n            !address && signer.getAddress().then((address)=>{\n                setAddress(address);\n            })\n        }\n\n    }, [wallet])\n\n    return (\n\n        <>\n           {stack ?\n            (<AristophanesReadyStack \n                style={{\n                    ...style\n                }}\n                right label={\"Metamask\"} ready={wallet} expressions={{\n                ready : address\n            }} />) :\n            (<AristophanesReady \n                style={{\n                    ...style\n                }}\n                right label={\"Metamask\"} ready={wallet} expressions={{\n                ready : address\n            }} />)\n           }   \n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutDesktop} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\nimport {ConnectionStatus} from \"../ConnectionStatus\";\nimport { ReadyT } from '../../Components/Ready/AristophanesReady/AristophanesReady';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\";\n\nexport type HeaderDesktopProps = {\n    wallet ? : ReadyT\n}\n\nexport const HeaderDesktop : FC<HeaderDesktopProps>  = ({\n    wallet,\n}) =>{\n\n    \n\n\n    return (\n\n        <HeaderLayoutDesktop>\n            <HeaderLayoutDesktop.Brand>\n                <div \n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"left\",\n                    justifyContent : \"left\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutDesktop.Brand>\n            <HeaderLayoutDesktop.Nav>\n                <div style={{\n                    height : \"100%\",\n                    display : \"flex\",\n                    alignItems : 'center',\n                    alignContent : \"center\",\n                    flexDirection : \"row-reverse\",\n                    textAlign : \"right\"\n                }}>\n                    <ConnectionStatus wallet={wallet}/>\n                </div>\n            </HeaderLayoutDesktop.Nav>\n        </HeaderLayoutDesktop>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutMobile} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\nimport { ReadyT } from '../../Components/Ready';\nimport { ConnectionStatus } from '../ConnectionStatus';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\"\n\nexport type HeaderMobileProps = {\n    wallet : ReadyT\n}\n\nexport const HeaderMobile : FC<HeaderMobileProps>  = ({\n    wallet\n}) =>{\n    const navigate = useNavigate();\n    const goHome = ()=>{\n        navigate(HOME_PATH);\n    }\n    const goAbout = ()=>{\n        navigate(ABOUT_PATH);\n    }\n    const goDocs = ()=>{\n        window.location.href = DOCS_PATH;\n    }\n    const handleSelect = (item : string)=>{\n\n        if(item === ABOUT) {\n            goAbout();\n        } else if(item === DOCS){\n            goDocs();\n        } else {\n            goHome();\n        }\n\n    }\n    const handleLogo  = ()=>{\n        handleSelect(\"HOME\")\n    }\n    return (\n\n        <HeaderLayoutMobile>\n            <HeaderLayoutMobile.Brand>\n                <div \n                    onClick={handleLogo}\n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"center\",\n                    justifyContent : \"center\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutMobile.Brand>\n            <HeaderLayoutMobile.Nav>\n                <ConnectionStatus\n                stack\n                style={{\n                    fontSize : \"12px\",\n                    margin : \"0 auto\",\n                    width : \"150px\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\",\n                    padding : DesktopSizes.Padding.standard\n                }} wallet={wallet}/>\n            </HeaderLayoutMobile.Nav>\n        </HeaderLayoutMobile>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {MediaResponsive} from \"../../Sytems\";\nimport {HeaderDesktop, HeaderMobile} from \".\";\nimport { ReadyT } from '../../Components/Ready';\n\nexport type HeaderResponsiveProps = {\n    wallet : ReadyT\n}\n\nexport const HeaderResponsive : FC<HeaderResponsiveProps>  = ({\n    wallet\n}) =>{\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <HeaderDesktop wallet={wallet}/>\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <HeaderDesktop wallet={wallet}/>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <HeaderMobile wallet={wallet}/>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <HeaderMobile wallet={wallet}/>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {RunSteps} from \"../../Statics/Steps/RunSteps\";\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport { ethers } from 'ethers';\nimport {NotReadyToRun} from \"./NotReadyToRun\";\nimport {ReadyToRun} from \"./ReadyToRun\";\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {useParams} from \"react-router-dom\";\nimport { DappI } from '../../Items';\n\ndeclare global {\n    interface Window {\n        ethereum : ethers.providers.ExternalProvider\n    }\n}\n\nexport type RunPageProps = {\n}\n\nexport const simulateNetworkRequest =  async <T extends any>(value : T, upperBound : number = 5000) : Promise<T> =>{\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            resolve(value);\n        }, Math.random() * upperBound)\n    })\n}\n\nexport const RunPage : FC<RunPageProps>  = () =>{\n\n\n    const [stepStatus, setStepStatus] = useState<StepStatusT>({\n        wallet : \"not ready\",\n    });\n\n    const [readyToRun, setReadyToRun] = useState(false);\n    const handleAllDone = ()=>{\n        setReadyToRun(true);\n    }\n\n    const _setStepStatus = (stepStatus : StepStatusT)=>{\n        \n        setStepStatus(stepStatus);\n    }\n\n    const {\n        owner,\n        repo,\n        branch\n    } = useParams();\n\n    const [dapp, setDapp] = useState<DappI>({\n        __isDapp__ : true,\n        gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n        id : `${owner}/${repo}/${branch||\"main\"}`,\n        owner : owner || \"\",\n        repo : repo || \"\", \n        branch : branch || \"main\",\n        // loaded : false\n    } )\n\n    const [loc, setLoc] = useState<string>(window.location.hash);\n    useEffect(()=>{\n        if(loc !== window.location.hash){\n            setDapp({\n                __isDapp__ : true,\n                gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n                id : `${owner}/${repo}/${branch||\"main\"}`,\n                owner : owner || \"\",\n                repo : repo || \"\", \n                branch : branch || \"main\",\n                // loaded : false\n            });\n            setLoc(window.location.hash);\n        }\n    }, [window.location.hash])\n\n    const [grid, setGrid] = useState(true);\n    const [which, setWhich] = useState<string|undefined>(undefined)\n\n    const page = readyToRun ? \n    (<ReadyToRun \n        grid={grid}\n        setGrid={setGrid}\n        which={which}\n        setWhich={setWhich}\n        stepStatus={stepStatus} dapp={dapp} setDapp={setDapp}/>) :\n    (<NotReadyToRun \n        \n        setStepStatus={_setStepStatus} stepStatus={stepStatus} handleAllDone={handleAllDone}/>);\n\n    return (\n        <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        {page}\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                       {page}\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                       {page}\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        {page}\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { LogoA } from '../../Glitter';\nimport { isDapp } from '../../Items';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderResponsive } from '../../Maps/Headers';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {ErrorNotification} from \"../../Error\";\nimport { useErrorContext } from '../../Error/ErrorProvider';\n\nexport type ErrorPageProps = {}\n\nexport const ErrorPage : FC<ErrorPageProps>  = () =>{\n\n    const {\n        error\n    } = useErrorContext();\n\n    const errorText = `${error?.name}: ${error?.message}`;\n\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { IntegratedErrorBoundary } from '../Error/IntegratedErrorBoundary';\nimport { RunPage } from '../Pages';\nimport { ErrorPage } from '../Pages/ErrorPage';\n\nexport type MainRouterProps = {}\n\nexport const MainRouter : FC<MainRouterProps>  = () =>{\n\n    return (\n\n        <HashRouter>\n            <IntegratedErrorBoundary>\n                <Routes>\n                    <Route path=\"/:owner/:repo/:/branch/error\" element={<ErrorPage/>}/>\n                    <Route path=\"/:owner/:repo/:branch\" element={<RunPage/>}/>\n                    <Route path=\"/:owner/:repo/error\" element={<RunPage/>}/>\n                    <Route path=\"/:owner/:repo\" element={<RunPage/>}/>\n                    <Route path=\"/error\" element={<ErrorPage/>}/>\n                    <Route path=\"/\" element={<RunPage/>}/>\n                </Routes>\n            </IntegratedErrorBoundary>\n        </HashRouter>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { generateRandomDappItems } from '../Demo';\nimport { useErrorContext } from '../Error/ErrorProvider';\nimport { DappI, getDappName } from '../Items';\nimport { MainRouter } from '../Router';\nimport { getFeaturedDapps } from '../Sytems/Featured';\nimport { Colors, DesktopSizes } from '../Theme';\nimport { ColorProvider } from '../Theme/ColorProvider';\nimport {DependencyProvider} from \"../Sytems/DependencyStatus\";\nimport { RunPage } from '../Pages';\n\nexport type MainSegmentProps = {}\n\nexport const MainSegment : FC<MainSegmentProps>  = () =>{\n\n    return (<MainRouter/>)\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './App.css';\nimport \"./CSS/Main.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { MainRouter } from './Router';\nimport { MainSegment } from './Segments';\nimport {editor} from \"monaco-editor\";\nimport {Colors} from \"./Theme\"\nimport { RunPage } from './Pages';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{\n      height : \"100vh\",\n      overflow : \"scroll\"\n    }}>\n      <MainSegment/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
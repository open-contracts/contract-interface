{"version":3,"sources":["Models/OpenContract/OpenContractModelProvider.tsx","Models/ConnectWalletButton/ConnectWalletButton.tsx","Layouts/Header/HeaderLayoutDesktop.tsx","Theme/Colors.tsx","Theme/DesktopSizes.tsx","Theme/Shadows.tsx","Layouts/Header/HeaderLayoutMobile.tsx","Layouts/Main/MainLayoutDesktop.tsx","Layouts/Main/MainLayoutMobile.tsx","Theme/ColorProvider.tsx","Glitter/Logos/LogoB.tsx","Components/Buttons/AthenaButton/AthenaButton.tsx","Components/Buttons/PredicateButton.tsx","Glitter/Animations/ThroughGlass/ThroughGlassAgathocles.tsx","Glitter/Animations/Grow/GrowOnEventAchamaenid.tsx","Controllers/ConnectWalllet.tsx","Maps/Headers/HeaderDesktop.tsx","Maps/Headers/HeaderMobile.tsx","Sytems/MediaResponsive/MediaResponsive.tsx","Sytems/CheckProvider/CheckProvider.tsx","Maps/Headers/HeaderResponsive.tsx","Error/UniversalErrorBoundary/UniversalErrorBoundary.tsx","Error/ErrorNotification/CrashLogo.tsx","Error/ErrorNotification/ErrorNotification.tsx","Pages/ErrorPage/ErrorPage.tsx","Error/ErrorProvider/ErrorProvider.tsx","Error/ErrorProvider/ErrorDispatch.tsx","Error/IntegratedErrorBoundary/IntegratedErrorBoundary.tsx","Items/Dapp/ApolloDapp/ApolloRunDappContent.tsx","Items/DappPut/Standards/DefaultHeader.tsx","Items/DappPut/DappInput/DappInputHeader.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunction.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionsMobile.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionGridView.tsx","Items/DappPut/DappInput/DappInput.tsx","Items/DappPut/DappPutLayout.tsx","Items/DappPut/DappInteractput/DappInteractputHeader.tsx","Items/DappPut/DappInteractput/DappInteractputContent.tsx","Items/DappPut/Methods/color.ts","Items/DappPut/DappInteractput/DappInteractput.tsx","Items/DappPut/DappOutput/DappOutputHeader.tsx","Items/DappPut/DappOutput/DappOutputContent.tsx","Items/DappPut/DappOutput/DappOutput.tsx","Items/DappPut/DappErrput/DappErrputHeader.tsx","Items/DappPut/DappErrput/DappErrputContent.tsx","Items/DappPut/DappErrput/DappErrput.tsx","Items/DappPut/DappDescput/DappDescputHeader.tsx","Items/DappPut/DappDescput/DappDescputContent.tsx","Items/DappPut/DappDescput/DappDescput.tsx","Items/DappPut/DappOracleput/DappOracleputHeader.tsx","Items/DappPut/DappOracleput/OracleLink.tsx","Items/DappPut/DappOracleput/DappOracleputContent.tsx","Items/DappPut/DappOracleput/DappOracleput.tsx","Items/DappPut/DappResultput/DappResultputHeader.tsx","Items/DappPut/DappResultput/DappResultputContent.tsx","Items/DappPut/DappResultput/DappResultput.tsx","Items/DappPut/DappOracleInput/DappOracleInputHeader.tsx","Components/TextInput/TextInputApollo.tsx","Items/DappPut/DappOracleInput/DappOracleInputContent.tsx","Items/DappPut/DappOracleInput/DappOracleInput.tsx","Items/DappPut/DappOracleCallput/DappOracleCallput.tsx","Items/DappPut/DappWaitingPut/DappWaitingPutHeader.tsx","Components/ProgressBar/ProgressBarAlan.tsx","Items/DappPut/DappWaitingPut/DappWaitingPutContent.tsx","Items/DappPut/DappWaitingPut/DappWaitingPut.tsx","Items/DappPut/DappPut/DappPut.tsx","Items/DappFunction/StateMethods.tsx","Items/DappFunction/DappFunctionLogRunButton.tsx","Items/DappFunction/DappFunctionSubmitState.tsx","Items/DappFunction/DappFunctionLog.tsx","Items/DappFunction/DappFunctionAthena.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionView.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemMobileActions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemMobile.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemActions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemDesktop.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItem.tsx","Benches/Run/RunBenchDesktop.tsx","Pages/Run/RunPageWithRepo.tsx","Sytems/Octokit/index.ts","Items/Dapp/Dapp.tsx","Pages/Run/RunPageNoRepo.tsx","Pages/Run/ReadyToRun.tsx","Pages/Run/RunPage.tsx","Pages/Terms/Terms.tsx","Maps/Footers/Footer.tsx","Pages/MainPage/MainPage.tsx","Router/MainRouter.tsx","Segments/MainSegment.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DefaultOpenContractContext","openContract","undefined","notify","dispatch","OpenContractCtx","createContext","domainReducer","state","set","OpenContractContextProvider","children","useReducer","useEffect","Provider","value","useOpenContractContext","context","useContext","Error","DefaultConnectWalletContext","warning","buttonRef","ConnectWalletCtx","connectWalletReducer","ConnectWalletContextProvider","useConnectWalletContext","Members","HeaderLayoutDesktop","getComponentMembers","Brand","Nav","Account","style","height","width","display","gridTemplateColumns","justifyContent","justifyItems","position","generateNamedMember","Colors","Maintheme","primaryTextColor","secondaryTextColor","tertiaryTextColor","quartenaryTextColor","backgroundColorSecondary","logoColor","readyGreen","waitingYellow","failedRed","greenCeramic","forestEdge","fadedRed","lilac","deepPurple","skyBlue","royalBlue","babyBlue","infoYellow","arizonaOrange","cyan","deepCyan","bloodOrange","jonasGray","backgroundGray","DesktopSizes","contentWidth","standard","whitespacePreferred","Shadows","defaultShadow","HeaderLayoutMobile","gap","paddingBottom","paddingTop","MainLayoutDesktop","Header","Content","Footer","overflow","MainLayoutMobile","flexDirection","margin","DefaultColorContext","colors","ColorContext","useColorStore","LogoB","main","post","size","fontSize","fontColor","label","_logoColor","_fontColor","alignContent","alignItems","viewBox","xmlns","id","x","y","clipPath","transform","d","fill","fillRule","color","textAlign","lineHeight","AthenaButton","className","primaryColor","secondaryColor","invert","disabled","active","loading","hovered","action","e","a","onClick","onMouseEnter","onMouseLeave","useState","setDisabled","isActive","setActive","isLoading","setLoading","setE","then","invertedBackground","Color","lighten","contrast","hex","isHovered","setHovered","_isHovered","Button","variant","boxShadow","cursor","transition","backgroundColor","Spinner","animation","PredicateButton","props","_action","Warning","current","scrollIntoView","behavior","block","allow","target","useRef","ref","ThroughGlassAgathocles","glass","glassOpacity","opacity","GrowOnEventAchamaenid","grow","ConnectWalllet","dispatchWalletContext","fail","setFail","force","setForce","plugins","remarkGfm","to","connectWallet","err","message","signer","setSigner","walletConnected","getAddress","add","catch","hover","setHover","tiny","useMediaQuery","query","medium","onMouseOver","onMouseOut","href","explorerUrl","slice","contract","address","motion","div","duration","animate","padding","Overlay","show","placement","innerProps","Tooltip","generate","HeaderDesktop","wallet","HeaderMobile","navigate","useNavigate","handleSelect","item","window","location","MediaResponsive","Desktop","Laptop","Tablet","Mobile","minWidth","maxWidth","DefaultCheckContext","checksCompleted","CheckContext","CheckReducer","CheckProvider","HeaderResponsive","UniversalErrorBoundary","error","this","React","Component","CrashLogo","shapeRendering","textRendering","stroke","strokeWidth","rx","ry","ErrorNotification","errorText","gridTemplateRows","toUpperCase","ErrorPage","useErrorContext","name","DefaultErrorContext","errorLoading","errorValidating","errorLoaded","ErrorContext","ErrorReducer","ErrorProvider","initialerror","ErrorDispatch","IntegratedErrorBoundary","ApolloRunDappContent","grid","setGrid","which","Single","Grid","flexGrow","zIndex","top","borderBottomRightRadius","borderBottomLeftRadius","borderTop","borderLeft","borderBottom","borderRight","background","borderTopRightRadius","DefaultHeader","dappPut","Pre","Post","prompt","description","DappInputHeader","dappInput","type","ApolloDappFunction","dapp","func","selected","inputs","map","input","wordWrap","border","overflowX","overflowY","requiresOracle","ApolloDappFunctions","setWhich","onFunctionClick","funcs","contractFunctions","index","paddingRight","borderRadius","paddingLeft","breakpointCols","Array","Math","floor","random","ApolloDappFunctionsMobile","ApolloRunDappFunctionGridView","DappInput","setInput","DappPutLayout","end","overflowWrap","borderCollapse","DappInteractputHeader","dappInteractput","DappInteractputContent","failedWindow","modal","setModal","xpraExit","darken","preventDefault","sessionUrl","left","Modal","contractName","contractFunction","marginLeft","src","DappInteractput","DappOutputHeader","dappOutput","DappOutputContent","span","navigator","clipboard","writeText","DappOutput","DappErrputHeader","dappErrput","DappErrputContent","DappErrput","DappDescputHeader","dappDescput","DappDescputContent","DappDescput","userSelect","DappOracleputHeader","dappOracleput","OracleLink","ready","link","DappOracleputContent","oracleData","Object","keys","reduce","agg","key","oracleStatii","setOracleStatii","data","oracleStates","setOracleStates","oraclePromiseReject","obj","allResolved","resolveCount","countPromisesResolved","links","oraclePromiseResolve","length","DappOracleput","DappResultputHeader","dappResultput","DappResultputContent","setResultput","DappResultput","DappOracleInputHeader","dappOracleInput","TextInputApollo","onTextInput","rest","Form","Control","defaultValue","onChange","onKeyDown","onSubmit","DappOracleInputContent","setOracleInput","text","oracleInputs","response","searchParams","URLSearchParams","search","_input","get","val","decodeURI","onButtonSumbit","resolve","placeholder","history","pushState","path","toString","hash","DappOracleInput","reduceContractFunction","DappOracleCallput","dappOracleCallput","justifySelf","call","DappWaitingPutHeader","dappWaitingPut","ProgressBarAlan","progress","_duration","opac","parseInt","ease","DappWaitingPutContent","Date","getSeconds","timeStarted","DappWaitingPut","DappPut","put","putType","allPromisesResolved","createErrors","errors","resetArgs","createXpras","xpras","xpra","createOutputs","prints","print","createOracleInputs","reject","i","createOracleCallPut","setFunc","createResult","createWaitingPut","seconds","removeWaitingPut","puts","filter","DappFunctionLogRunButton","pure","newInput","newC","borderTopLeftRadius","DappFunctionSubmitState","loadOracleData","setCalled","handleCall","ClientError","DappFunctionLog","setFunctionState","tick","forceUpdate","oc","updatedPuts","log","addOutput","contractFunctionState","newOutput","result","waiting","printHandler","oracleInputCount","setOracleInputCount","addOracleInput","newOracleInput","inputHandler","Promise","addError","newError","errorHandler","addOracleData","addResult","githubOracleDownloader","owner","repo","branch","oracleFolder","addOracleCallput","callOracle","handleSubmit","submitHandler","addInteractput","targetUrl","newXpra","xpraHandler","addWaitingPut","waitHandler","DappFunctionAthena","setDappFunction","ApolloRunDappFunctionView","ApolloRunDappMainItemMobileActions","gitUrl","getTokens","getOPN","approveHub","approveOPN","open","ApolloRunDappMainItemMobileInternals","dappItem","setDappItem","selectedFunc","contractDescription","oldContractFunction","ApolloRunDappMainItemMobile","updateDapp","ApolloRunDappMainItemActions","ApolloRunDappMainItemInternals","ApolloRunDappMainItemDesktop","ApolloRunDappMainItem","document","title","RunBenchDesktop","setDapp","RunPageWithRepo","createPullRequest","require","Octokit","plugin","auth","process","REACT_APP_GITHUB_TOKEN","getFileText","args","fetch","parseGitUrl","url","_indexCom","indexOf","indexCom","split","substring","trim","replace","README","parseName","readme","lines","getDappName","onGet","getOpenContractsInterface","JSON","ocInterface","parse","getDappContract","OpenContracts","opencontract","openContractsInterface","contractLocation","parseContracts","RunPageNoRepo","setText","__isDapp__","reload","ReadyToRun","RunPage","stepStatus","useParams","loc","setLoc","funcName","nameLoad","setNameLoad","dispatchContract","contractLoad","setContractLoad","page","Terms","terms","setTerms","count","nav","MainPage","useCheckStore","setStepStatus","MainRouter","element","MainSegment","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a10ceee.chunk.js","sourcesContent":["import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { createContext } from 'react';\nimport { useContext, useReducer } from 'react';\n\nexport type OpenContractContext = {\n    notify : number,\n    openContract ? : IOpenContract,\n    dispatch : React.Dispatch<(state: OpenContractContext) => OpenContractContext>\n}\n\n/**\n * By default the domain name should be root\n * and the views should be empty.\n */\nexport const DefaultOpenContractContext : OpenContractContext = {\n    openContract : undefined,\n    notify : 0,\n    dispatch : ()=>{}\n}\n\nexport const OpenContractCtx = createContext(DefaultOpenContractContext);\n\n/**\n * Reduces the state of a domain with a setter function.\n * @param state is the state of the domain before the reductino.\n * @param set is a function that sets the state of the domain.\n * @returns the new state of the domain.\n */\nexport const domainReducer = (state : OpenContractContext, set : (state : OpenContractContext)=>OpenContractContext)=>set(state);\n\nexport type OpenContractContextProps = {\n\n}\n\n/**\n * Provides access to OpenContractContext. Handles view fetching for OpenContractContext.\n * @param param0 \n * @returns \n */\nexport const OpenContractContextProvider : FC<OpenContractContextProps>  = ({children}) =>{\n\n    const [state, dispatch] = useReducer(\n        domainReducer,\n        DefaultOpenContractContext\n    );\n\n    useEffect(()=>{\n        \n    });\n\n    const _dispatch = (set : (contract : OpenContractContext)=>OpenContractContext)=>{\n        \n        set(state)\n        dispatch(set);\n    }\n\n    return (\n\n        <OpenContractCtx.Provider value={{\n            ...state,\n            dispatch : dispatch\n        }}>\n            {children}\n        </OpenContractCtx.Provider>\n\n    )\n\n}\n\n/**\n * Gives read-only access to domain context.\n * @returns the current domain context.\n */\nexport const useOpenContractContext = () : Readonly<OpenContractContext> =>{\n    const context = useContext(OpenContractCtx);\n    if(!context) throw new Error(\"useOpenContractContext must be called from within a context provider.\");\n    return context;\n}","import React, {FC, ReactElement, useRef} from 'react';\nimport { useEffect } from 'react';\nimport { createContext } from 'react';\nimport { useContext, useReducer } from 'react';\n\nexport type ConnectWalletContext = {\n    warning : React.ReactNode | string |undefined,\n    buttonRef : React.MutableRefObject<HTMLDivElement> | null,\n    dispatch : React.Dispatch<(state: ConnectWalletContext) => ConnectWalletContext>\n}\n\n/**\n * By default the connectWallet name should be root\n * and the views should be empty.\n */\nexport const DefaultConnectWalletContext : ConnectWalletContext = {\n    warning : undefined,\n    buttonRef : null,\n    dispatch : ()=>{}\n}\n\nexport const ConnectWalletCtx = createContext(DefaultConnectWalletContext);\n\n/**\n * Reduces the state of a connectWallet with a setter function.\n * @param state is the state of the connectWallet before the reductino.\n * @param set is a function that sets the state of the connectWallet.\n * @returns the new state of the connectWallet.\n */\nexport const connectWalletReducer = (state : ConnectWalletContext, set : (state : ConnectWalletContext)=>ConnectWalletContext)=>set(state);\n\nexport type ConnectWalletContextProps = {\n\n}\n\n/**\n * Provides access to ConnectWalletContext. Handles view fetching for ConnectWalletContext.\n * @param param0 \n * @returns \n */\nexport const ConnectWalletContextProvider : FC<ConnectWalletContextProps>  = ({children}) =>{\n\n    const [state, dispatch] = useReducer(\n        connectWalletReducer,\n        DefaultConnectWalletContext\n    );\n\n    return (\n\n        <ConnectWalletCtx.Provider value={{\n            ...state,\n            dispatch : dispatch\n        }}>\n            {children}\n        </ConnectWalletCtx.Provider>\n\n    )\n\n}\n\n/**\n * Gives read-only access to connectWallet context.\n * @returns the current connectWallet context.\n */\nexport const useConnectWalletContext = () : Readonly<ConnectWalletContext> =>{\n    const context = useContext(ConnectWalletCtx);\n    if(!context) throw new Error(\"useConnectWalletContext must be called from within a context provider.\");\n    return context;\n}","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutDesktopProps = {}\n\nconst HeaderLayoutDesktop : FC<HeaderLayoutDesktopProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            height : \"100%\",\n            width : \"100%\",\n            display : \"grid\",\n            gridTemplateColumns : \"1fr 1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\",\n            position : \"sticky\"\n        }}>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Brand}\n            </div>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutDesktop.Brand = generateNamedMember('Brand');\nHeaderLayoutDesktop.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutDesktop.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutDesktop};","export const Colors = {\n    Maintheme : \"#373737\",\n    primaryTextColor : \"#FAF9F6\",\n    secondaryTextColor : \"#515151\",\n    tertiaryTextColor : \"#979797\",\n    quartenaryTextColor : \"#f1f1f1\",\n    backgroundColorSecondary : \"#D7D7D7\",\n    logoColor : \"#D7D7D7\",\n    readyGreen : \"#11db1e\",\n    waitingYellow : \"#fceb2f\",\n    failedRed : \"#ff0000\",\n    greenCeramic : \"#addcc9\",\n    forestEdge : \"#06955f\",\n    fadedRed : \"#f7a8a6\",\n    lilac : \"#C8A2C8\",\n    deepPurple: \"#d2a6cc\",\n    skyBlue : \"#bdd7ee\",\n    royalBlue : \"#4169e1\",\n    babyBlue : \"#4499ab\",\n    infoYellow : \"#faf264\",\n    arizonaOrange : \"#fdd2b5\",\n    cyan : \"#00b5b5\",\n    deepCyan : \"#004584\",\n    bloodOrange : \"#cc8866\",\n    jonasGray : \"#C3C3C3\",\n    backgroundGray : \"#F9F9FB\"\n} as const","export const DesktopSizes = {\n    Main : {\n        contentWidth : 950\n    },\n    Padding : {\n        standard : \"10px\",\n        whitespacePreferred : \"40px\"\n    },\n    BorderRadius : {\n        standard : \"5px\"\n    }\n} as const","import { Colors } from \"./Colors\";\n\nexport const Shadows = {\n    defaultShadow :`0px 2px 8px 2px ${Colors.Maintheme}44`,\n} as const;","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport { DesktopSizes } from '../../Theme';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutMobileProps = {}\n\nconst HeaderLayoutMobile : FC<HeaderLayoutMobileProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            width : \"90vw\",\n            display : \"grid\",\n            gridTemplateColumns : \"1fr\",\n            gap : DesktopSizes.Padding.whitespacePreferred,\n            paddingBottom : DesktopSizes.Padding.whitespacePreferred,\n            paddingTop : DesktopSizes.Padding.whitespacePreferred\n        }}>\n            <div>\n                {Brand}\n            </div>\n            <div style={{\n                display : \"flex\",\n                justifyContent : \"center\",\n                justifyItems : \"center\"\n            }}>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutMobile.Brand = generateNamedMember('Brand');\nHeaderLayoutMobile.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutMobile.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutMobile};","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutDesktopProps = {}\n\nconst MainLayoutDesktop : FC<MainLayoutDesktopProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            height : \"auto\",\n            width : \"100vw\",\n            display : \"grid\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                width : DesktopSizes.Main.contentWidth,\n                overflow : \"visible\"\n            }}>\n                <div style={{\n                    height : \"200px\",\n                    width : \"100%\"\n                }}>\n                    {Header}\n                </div>\n                <div style={{\n                    height : \"auto\",\n                    width : \"100%\",\n                    // overflow : \"auto\",\n                }}> \n                    {Content}\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutDesktop.Header = generateNamedMember(\"Header\");\nMainLayoutDesktop.Content = generateNamedMember(\"Content\");\nMainLayoutDesktop.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutDesktop}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutMobileProps = {}\n\nconst MainLayoutMobile : FC<MainLayoutMobileProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            flexDirection : \"column\",\n            margin : \"0 auto\",\n            width : \"80vw\",\n        }}>\n            <div>\n                {Header}\n            </div>\n            <div>\n                {Content}\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutMobile.Header = generateNamedMember('Header');\nMainLayoutMobile.Content = generateNamedMember(\"Content\");\nMainLayoutMobile.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutMobile}","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { Colors } from './Colors';\n\n\nexport interface ColorContextI {\n    colors : typeof Colors,\n    dispatch : (fn : (state : ColorContextI)=>ColorContextI)=>void\n}\n\nconst DefaultColorContext : ColorContextI = {\n    colors : Colors,\n    dispatch : ()=>{}\n}\n\n\nexport const ColorContext = createContext(DefaultColorContext);\n\nexport const ColorReducer = (\n    state : ColorContextI, \n    action : (state : ColorContextI)=>ColorContextI\n)=>{\n    return action(state);\n}\n\nexport type ColorProviderProps = typeof Colors\n\nexport const ColorProvider : FC<ColorProviderProps>  = (props) =>{\n\n    const {\n        children,\n        ...colors\n    } = props;\n\n    const [state, dispatch] = useReducer(ColorReducer, DefaultColorContext);\n\n    return (\n\n        <ColorContext.Provider value={{\n            ...state,\n            colors : colors\n        }}>\n                {props.children}\n        </ColorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useColorStore = () : ColorContextI=>{\n\n    const context = useContext(ColorContext);\n\n    if(!context){\n        throw new Error(\"useColors must be called within a ColorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport {File} from \"react-bootstrap-icons\";\nimport { useColorStore } from '../../Theme/ColorProvider';\n\nexport type LogoBProps = {\n    main? : string,\n    post? : string,\n    size? : React.CSSProperties[\"height\"],\n    fontSize ? : React.CSSProperties[\"height\"],\n    logoColor? : React.CSSProperties[\"color\"],\n    fontColor? : React.CSSProperties[\"color\"]\n    label ? : boolean\n}\n\nexport const LogoB : FC<LogoBProps>  = ({\n    main = \"OPEN\",\n    post = \"CONTRACTS\",\n    size = \"80px\",\n    fontSize = \"24px\",\n    logoColor,\n    fontColor,\n    label = true\n}) =>{\n\n    const Colors = useColorStore();\n    const _logoColor = logoColor || Colors.colors.Maintheme;\n    const _fontColor = fontColor || Colors.colors.Maintheme;\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <div style={{\n                height : size,\n                width : size\n            }}>\n                <svg viewBox=\"0 0 1295 1296\" xmlns=\"http://www.w3.org/2000/svg\"\n                overflow=\"hidden\">\n                    <defs>\n                        <clipPath id=\"clip0\">\n                            <rect x=\"1308\" y=\"55\" width=\"1295\" height=\"1296\" />\n                        </clipPath>\n                    </defs>\n                    <g clipPath=\"url(#clip0)\" transform=\"translate(-1308 -55)\">\n                        <path\n                            d=\"M2281.32 449.263 2551.39 449.263 2552.12 450.769C2584.88 528.295 2603 613.53 2603 703 2603 792.47 2584.88 877.705 2552.12 955.231L2550.93 957.704 2280.6 957.704 2298.15 934.214C2342.71 868.213 2368.72 788.647 2368.72 703 2368.72 617.353 2342.71 537.787 2298.15 471.786ZM1955.5 55C2156.65 55 2336.38 146.796 2455.14 290.812L2455.18 290.863 1983.28 290.863 1955.5 289.459C1727.28 289.459 1542.28 474.608 1542.28 703 1542.28 931.392 1727.28 1116.54 1955.5 1116.54L1964.14 1116.1 2454.31 1116.1 2413.35 1161.21C2296.18 1278.47 2134.3 1351 1955.5 1351 1597.9 1351 1308 1060.88 1308 703 1308 345.119 1597.9 55 1955.5 55Z\"\n                            fill={_logoColor} fillRule=\"evenodd\" />\n                    </g>\n                </svg>\n            </div>\n            &emsp;\n            {label && <div style={{\n                fontSize : fontSize,\n                color : _fontColor,\n                textAlign : \"left\",\n                lineHeight : \"1.3em\"\n            }}>\n                {main}\n                <br/>\n                {post}\n            </div>}\n        </div>\n       \n    )\n\n}","import Color from \"color\";\nimport React, { FC, useEffect, useState } from 'react';\nimport {Button, ButtonProps, Spinner } from \"react-bootstrap\";\nimport { Colors, Shadows } from \"../../../Theme\";\n\n\n/**\n * @initialAuthor\n * @contributors\n */\n\n/**\n * @description\n */\nexport type AthenaButtonProps = ButtonProps & {\n    className ? : string,\n    label?: string,\n    primaryColor: React.CSSProperties[\"color\"],\n    secondaryColor: React.CSSProperties[\"color\"],\n    invert? : boolean,\n    disabled?: boolean,\n    active?: boolean,\n    hovered? : boolean,\n    loading?: boolean,\n    size?: \"sm\" | \"lg\" | undefined,\n    action? : (e? : React.MouseEvent)=>Promise<void>,\n    onClick? : (e : React.MouseEvent)=>void,\n    onMouseEnter? : (e : React.MouseEvent)=>void,\n    onMouseLeave? : (e : React.MouseEvent)=>void,\n    style?: React.CSSProperties\n}\n\n/**\n * @description \n */\nexport const AthenaButton : FC<AthenaButtonProps>  = ({\n    className,\n    label, \n    primaryColor, \n    secondaryColor,\n    children,\n    invert=false,\n    disabled=false,\n    active=false,\n    loading=false,\n    size=undefined,\n    hovered,\n    action=async (e? : React.MouseEvent)=>{return},\n    onClick=(e: React.MouseEvent)=>{},\n    onMouseEnter=(e: React.MouseEvent)=>{},\n    onMouseLeave=(e: React.MouseEvent)=>{},\n    style,\n}) =>{\n\n    const [isDisabled, setDisabled] = useState(disabled);\n    const [isActive, setActive] = useState(active);\n    const [isLoading, setLoading] = useState(loading);\n    const [e, setE] = useState<React.MouseEvent|undefined>(undefined)\n\n    useEffect(()=>{\n        if(isLoading){\n            action(e).then(()=>{\n                setDisabled(false);\n                setLoading(false);\n                setActive(false);\n            })\n        }\n    }, [isLoading])\n\n\n\n    const invertedBackground = Color(primaryColor).lighten(1/(10 - Color(primaryColor).contrast(Color(secondaryColor)))).hex()\n\n    const handleClick = (e : React.MouseEvent<HTMLElement>)=>{\n        onClick(e);\n        setE(e);\n        setDisabled(true);\n        setLoading(true);\n        setActive(true);\n        setHovered(false);\n    }\n\n    const [isHovered, setHovered] = useState(false); \n    const handleMouseEnter = (e : React.MouseEvent)=>{\n        setHovered(true);\n        onMouseEnter(e);\n    }\n    const handleMouseLeave = (e : React.MouseEvent)=>{\n        setHovered(false);\n        onMouseLeave(e);\n    }\n\n    const _isHovered = isHovered || hovered;\n\n    return (\n\n        <Button\n            // className={className ? className : \"shadow-sm\"}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            variant={`outline`}\n            disabled={isLoading||disabled}\n            active={isActive||active}\n            size={size}\n            onClick={handleClick}\n            style={{\n                boxShadow : Shadows.defaultShadow,\n                cursor: \"pointer\",\n                transition: _isHovered? \"all .1s ease-in-out\" : \"\",\n                display: \"inline-block\",\n                color: _isHovered? secondaryColor : !invert ? primaryColor : secondaryColor,\n                backgroundColor: _isHovered? primaryColor : invert ? invertedBackground : secondaryColor,\n                ...style\n            }}\n        ><div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\",\n            justifyContent : 'center',\n            justifyItems : \"center\"\n        }}>{label||children}<span style={{display: isLoading||loading ? \"inline-block\" : \"none\"}}>&ensp;</span><Spinner\n            animation=\"border\"\n            style={{\n                display : isLoading||loading ? \"inline-block\" : \"none\", \n                height : \"15px\",\n                width: \"15px\"\n            }}\n            ></Spinner></div>\n        </Button>\n    )\n\n}","import React, {FC, ReactElement, useRef, useState} from 'react';\nimport { Overlay, Tooltip } from 'react-bootstrap';\nimport {AthenaButton, AthenaButtonProps} from \"./AthenaButton\";\nimport {generate} from \"shortid\";\nimport {motion} from \"framer-motion\";\nimport { useEffect } from 'react';\nimport { useConnectWalletContext } from '../../Models';\n\nexport type PredicateButtonProps = AthenaButtonProps & {\n    Warning : React.ReactNode,\n    allow ? : boolean,\n    force ? : boolean\n};\n\nexport const PredicateButton : FC<PredicateButtonProps>  = (props) =>{\n\n    const {buttonRef, dispatch} = useConnectWalletContext();\n\n    const _action = async ()=>{\n        if(props.disabled) {\n            dispatch((state)=>{\n                return {\n                    ...state,\n                    warning : props.Warning\n                }\n            });\n            buttonRef && buttonRef.current && buttonRef.current.scrollIntoView({behavior : \"smooth\", block : \"start\"});\n            if(props.allow)  props.action && await props.action();\n            return;\n        }\n        props.action && await props.action();\n    }\n\n    const _onClick = (e  : React.MouseEvent)=>{\n        if(props.disabled) {\n             dispatch((state)=>{\n                 return {\n                    ...state,\n                    warning : props.Warning\n                 }\n             });\n             buttonRef && buttonRef.current && buttonRef.current.scrollIntoView({behavior : \"smooth\", block : \"start\"});\n             if(props.allow) props.onClick && props.onClick(e);\n             return;\n        }\n        props.onClick && props.onClick(e);\n    }\n\n    const target = useRef(null);\n\n\n    return (\n\n        <AthenaButton \n        {...props} action={_action} onClick={_onClick} disabled={false}>\n            <div ref={target}>\n                {props.children}\n            </div>\n        </AthenaButton>\n           \n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\n\nexport type ThroughGlassAgathoclesProps = {\n    glass ? : boolean,\n    style ? : React.CSSProperties,\n    glassOpacity ? : React.CSSProperties[\"opacity\"]\n}\n\nexport const ThroughGlassAgathocles : FC<ThroughGlassAgathoclesProps>  = ({\n    glass = false,\n    glassOpacity = \".95\",\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n            style={{\n                opacity : glass ? glassOpacity : \"1.0\",\n                ...style\n            }}>\n                {children}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\n\nexport type GrowOnEventAchamaenidProps = {\n    grow ? : boolean,\n    style? : React.CSSProperties\n}\n\nexport const GrowOnEventAchamaenid : FC<GrowOnEventAchamaenidProps>  = ({\n    grow = false,\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n        className={grow ? \"grow\" : \"anti-grow\"}\n        style={{\n            ...style\n        }}>\n            {children}\n        </div>\n\n    )\n\n}","import React, {FC, MutableRefObject, ReactElement, useState} from 'react';\nimport {useConnectWalletContext, useOpenContractContext} from \"../Models\";\nimport { PredicateButton } from '../Components/Buttons/PredicateButton';\nimport { Colors } from '../Theme';\nimport {to} from \"await-to-js\";\nimport {Wallet} from \"react-bootstrap-icons\";\nimport { useEffect } from 'react';\nimport { ThroughGlassAgathocles } from '../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\nimport { GrowOnEventAchamaenid } from '../Glitter/Animations';\nimport { FileText } from 'react-bootstrap-icons';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { useMediaQuery } from 'react-responsive';\nimport { useRef } from 'react';\nimport {motion} from \"framer-motion\";\nimport { Overlay, Tooltip } from 'react-bootstrap';\nimport {generate} from \"shortid\";\n\nexport type ConnectWallletProps = {}\n\nexport const ConnectWalllet : FC<ConnectWallletProps>  = () =>{\n\n    const {dispatch : dispatchWalletContext, warning, buttonRef} = useConnectWalletContext();\n    const ref = useRef<HTMLDivElement>(null);\n    useEffect(()=>{\n        dispatchWalletContext((state)=>{\n            return {\n                ...state,\n                buttonRef : ref as MutableRefObject<HTMLDivElement>\n            }\n        })\n    }, [ref]);\n\n    const {openContract, dispatch} = useOpenContractContext();\n\n    const [fail, setFail] = useState(false);\n    const [force, setForce] = useState(false);\n    const action = async ()=>{\n        if(!openContract) dispatchWalletContext((state)=>{\n            return {\n                ...state,\n                warning : <ReactMarkdown plugins={[remarkGfm]}>\n                We're sorry. We've failed to load your Open Contract\n            </ReactMarkdown>\n            }\n        });\n        else {\n            const [err, result] =  await to(openContract.connectWallet());\n            if(err){\n                dispatchWalletContext((state)=>{\n                    return {\n                        ...state,\n                        warning : <><ReactMarkdown plugins={[remarkGfm]}>\n                        {`${err.message}`}\n                    </ReactMarkdown><ReactMarkdown plugins={[remarkGfm]}>\n                        {` `}\n                    </ReactMarkdown></>\n                    }\n                });\n                setFail(true);\n                setForce(true);\n            } else {\n                dispatchWalletContext((state)=>{\n                    return {\n                        ...state,\n                        warning : undefined\n                    }\n                });\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        notify : state.notify + 1\n                    }\n                });\n                setFail(false);\n                setForce(false)\n            }\n        }\n    }\n\n    const [signer, setSigner] = useState<string|undefined>(undefined);\n    useEffect(()=>{\n        if(openContract && openContract.walletConnected && !signer){\n            openContract.signer.getAddress()\n            .then((add)=>{\n                dispatchWalletContext((state)=>{\n                    return {\n                        ...state,\n                        warning : undefined\n                    }\n                });\n                setSigner(add);\n                setFail(false);\n                setForce(false)\n            }).catch(()=>{\n                dispatchWalletContext((state)=>{\n                    return {\n                        ...state,\n                        warning : \"You may need to manually open your MetaMask wallet to connect it.\"\n                    }\n                });\n                dispatch((context)=>{\n                    return {\n                        ...context,\n                        ...(context.openContract) && {\n                            openContract : {\n                                ...context.openContract,\n                                walletConnected : false\n                            }\n                        }\n                    }\n                });\n                setFail(true);\n                setForce(true);\n            });\n        }\n    }, [openContract && openContract.walletConnected]);\n\n    const [hover, setHover] = useState(false);\n\n    const tiny = useMediaQuery({\n        query : '(max-width:300px)'\n    });\n    const medium = useMediaQuery({\n        query : '(max-width:600px)'\n    });\n\n    return (\n\n        openContract && openContract.walletConnected ?\n        <ThroughGlassAgathocles>\n            <GrowOnEventAchamaenid grow={hover}>\n                <div \n                onMouseOver={()=>setHover(true)}\n                onMouseOut={()=>setHover(false)}\n                style={{\n                    fontSize : \"12px\",\n\n                }}>\n                    Addresses&ensp;<FileText size={12} color={Colors.Maintheme}/>\n                    <br/>\n                    {signer && <><span>You: </span><a href={openContract.explorerUrl(signer)}>\n                        {tiny ? signer.slice(0, 3) + \"...\" \n                        : medium ? signer.slice(0, 16) + \"...\" \n                        : signer}\n                    </a></>}\n                    <br/>\n                    <><span>Contract: </span><a href={openContract.explorerUrl(openContract.contract.address)}>\n                        {tiny ? openContract.contract.address.slice(0, 3) + \"...\" \n                        : medium ? openContract.contract.address.slice(0, 16) + \"...\" \n                        : openContract.contract.address}\n                    </a></>\n                </div>\n            </GrowOnEventAchamaenid>\n        </ThroughGlassAgathocles>\n        : <>\n            <motion.div\n            transition={{ duration : .4 }}\n            animate={warning !== undefined && {\n                x : [0, 4, -4, 4, -4, 4, -4, 0]\n            }}><div style={{\n                padding : \"10px\"\n            }} ref={ref}><PredicateButton\n            id=\"#connect-wallet\"\n            force={force}\n            allow={true}\n            disabled={fail}\n            action={action}\n            Warning={warning}\n            primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                <div style={{\n                    display : \"flex\",\n                    alignContent : \"center\",\n                    alignItems : \"center\"\n                }}>\n                    Connect Wallet&ensp;<Wallet/>\n                </div>\n        </PredicateButton></div></motion.div>\n        <Overlay target={ref.current} show={warning!==undefined} placement=\"left\">\n                {(innerProps)=>(\n                    <Tooltip id={generate()} {...innerProps}>\n                        {warning}\n                    </Tooltip>\n                )}\n            </Overlay>\n        </>\n\n    )\n\n}\n","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutDesktop} from \"../../Layouts\";\nimport { ReadyT } from '../../Components/Ready/AristophanesReady/AristophanesReady';\nimport { ConnectWalllet } from '../../Controllers/ConnectWalllet';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\";\n\nexport type HeaderDesktopProps = {\n    wallet ? : ReadyT\n}\n\nexport const HeaderDesktop : FC<HeaderDesktopProps>  = ({\n    wallet,\n}) =>{\n\n    \n\n\n    return (\n\n        <HeaderLayoutDesktop>\n            <HeaderLayoutDesktop.Brand>\n                <div \n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"left\",\n                    justifyContent : \"left\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutDesktop.Brand>\n            <HeaderLayoutDesktop.Nav>\n                <div style={{\n                    height : \"100%\",\n                    display : \"flex\",\n                    alignItems : 'center',\n                    alignContent : \"center\",\n                    flexDirection : \"row-reverse\",\n                    textAlign : \"right\"\n                }}>\n                    <ConnectWalllet/>\n                </div>\n            </HeaderLayoutDesktop.Nav>\n        </HeaderLayoutDesktop>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutMobile} from \"../../Layouts\";\nimport { useNavigate } from 'react-router-dom';\nimport { ReadyT } from '../../Components/Ready';\nimport { ConnectWalllet } from '../../Controllers/ConnectWalllet';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\"\n\nexport type HeaderMobileProps = {\n    wallet : ReadyT\n}\n\nexport const HeaderMobile : FC<HeaderMobileProps>  = ({\n    wallet\n}) =>{\n    const navigate = useNavigate();\n    const goHome = ()=>{\n        navigate(HOME_PATH);\n    };\n    const goAbout = ()=>{\n        navigate(ABOUT_PATH);\n    };\n    const goDocs = ()=>{\n        window.location.href = DOCS_PATH;\n    };\n    const handleSelect = (item : string)=>{\n\n        if(item === ABOUT) {\n            goAbout();\n        } else if(item === DOCS){\n            goDocs();\n        } else {\n            goHome();\n        }\n\n    };\n    const handleLogo  = ()=>{\n        handleSelect(\"HOME\")\n    };\n\n    const tiny = useMediaQuery({\n        query : '(max-width:300px)'\n    });\n\n    return (\n\n        <HeaderLayoutMobile>\n            <HeaderLayoutMobile.Brand>\n                <div \n                    onClick={handleLogo}\n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"center\",\n                    justifyContent : \"center\",\n                }}>\n                    <LogoB label={!tiny}  size={\"50px\"} />\n                </div>\n            </HeaderLayoutMobile.Brand>\n            <HeaderLayoutMobile.Nav>\n                <div>\n                    <ConnectWalllet/>\n                </div>\n            </HeaderLayoutMobile.Nav>\n        </HeaderLayoutMobile>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport MediaQuery from \"react-responsive\";\n\nconst Members = [\"Desktop\", \"Laptop\", \"Tablet\", \"Mobile\"] as const;\n\nexport type MediaResponsiveProps = {}\n\n/**\n * Uses media queries to control component display by media type.\n * @param param0 \n * @returns a ReactNode displaying the appropriate component view by media type.\n */\nconst MediaResponsive : FC<MediaResponsiveProps> & {\n    Desktop : FC,\n    Laptop : FC,\n    Tablet : FC,\n    Mobile : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Desktop,\n        Laptop,\n        Tablet,\n        Mobile\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <>\n            <MediaQuery minWidth={1200}>\n                {Desktop}\n            </MediaQuery>   \n            <MediaQuery minWidth={992} maxWidth={1199}>\n                {Laptop}\n            </MediaQuery>\n            <MediaQuery minWidth={768} maxWidth={991}>\n                {Tablet}\n            </MediaQuery>\n            <MediaQuery maxWidth={767}>\n                {Mobile}\n            </MediaQuery>\n        </>\n\n    )\n\n}\n\nMediaResponsive.Desktop = generateNamedMember(\"Desktop\");\nMediaResponsive.Laptop = generateNamedMember(\"Laptop\");\nMediaResponsive.Tablet = generateNamedMember(\"Tablet\");\nMediaResponsive.Mobile = generateNamedMember(\"Mobile\")\n\nexport { MediaResponsive };\n\n","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\n\n\nexport interface CheckContextI {\n    checksCompleted : boolean\n    dispatch : (fn : (state : CheckContextI)=>CheckContextI)=>void\n}\n\nconst DefaultCheckContext : CheckContextI = {\n    checksCompleted : false,\n    dispatch : ()=>{}\n}\n\n\nexport const CheckContext = createContext(DefaultCheckContext);\n\nexport const CheckReducer = (\n    state : CheckContextI, \n    action : (state : CheckContextI)=>CheckContextI\n)=>{\n    return action(state);\n}\n\nexport type CheckProviderProps = {\n}\n\nexport const CheckProvider : FC<CheckProviderProps>  = ({\n    children\n}) =>{\n\n    const [state, dispatch] = useReducer(CheckReducer, DefaultCheckContext);\n\n    return (\n\n        <CheckContext.Provider value={{\n            ...state,\n            dispatch : dispatch\n        }}>\n                {children}\n        </CheckContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useCheckStore = () : CheckContextI=>{\n\n    const context = useContext(CheckContext);\n\n    if(!context){\n        throw new Error(\"useChecks must be called within a CheckProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport {MediaResponsive} from \"../../Sytems\";\nimport {HeaderDesktop, HeaderMobile} from \".\";\nimport { ReadyT } from '../../Components/Ready';\n\nexport type HeaderResponsiveProps = {\n    wallet : ReadyT\n}\n\nexport const HeaderResponsive : FC<HeaderResponsiveProps>  = ({\n    wallet\n}) =>{\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <HeaderDesktop wallet={wallet}/>\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <HeaderDesktop wallet={wallet}/>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <HeaderMobile wallet={wallet}/>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <HeaderMobile wallet={wallet}/>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React, { ErrorInfo } from \"react\";\nimport {ErrorDispatch, useErrorContext} from \"../ErrorProvider\";\n\ntype UniversalErrorBoundaryProps = {\n\n}\n\ntype UniversalErrorBoundaryStateI = {\n    error : Error | undefined\n}\n\nexport class UniversalErrorBoundary extends React.Component<UniversalErrorBoundaryProps, UniversalErrorBoundaryStateI> {\n    state : UniversalErrorBoundaryStateI = {\n        error : undefined\n    }\n\n    constructor(props : UniversalErrorBoundaryProps) {\n      super(props);\n      this.state = { error: undefined };\n    }\n  \n    static getDerivedStateFromError(error : Error) {\n      // Update state so the next render will show the fallback UI.\n      \n      return { error: error };\n    }\n  \n    render() {\n\n      \n\n      if (this.state.error) {\n\n        return <ErrorDispatch error={this.state.error}/>;\n      }\n  \n      return this.props.children; \n    }\n  }","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\n\nexport type CrashLogoProps = {\n    color? : React.CSSProperties[\"color\"],\n    style ? : React.CSSProperties\n}\n\nexport const CrashLogo : FC<CrashLogoProps>  = ({\n    color = Colors.Maintheme,style\n}) =>{\n\n    return (\n\n        <div style={{\n            height : \"200px\",\n            width : \"200px\",\n            ...style\n        }}>\n            <svg id=\"e7l4ir2eLhD1\" xmlns=\"http://www.w3.org/2000/svg\" \n                viewBox=\"0 0 1295 1296\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\">\n                <g id=\"e7l4ir2eLhD2\" clipPath=\"url(#e7l4ir2eLhD5)\">\n                    <g id=\"e7l4ir2eLhD3\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <path id=\"e7l4ir2eLhD4\"\n                            d=\"M2281.32,449.263L2551.39,449.263L2552.12,450.769C2584.88,528.295,2603,613.53,2603,703C2603,792.47,2584.88,877.705,2552.12,955.231L2550.93,957.704L2280.6,957.704L2298.15,934.214C2342.71,868.213,2368.72,788.647,2368.72,703C2368.72,617.353,2342.71,537.787,2298.15,471.786ZM1955.5,55C2156.65,55,2336.38,146.796,2455.14,290.812L2455.18,290.863L1983.28,290.863L1955.5,289.459C1727.28,289.459,1542.28,474.608,1542.28,703C1542.28,931.392,1727.28,1116.54,1955.5,1116.54L1964.14,1116.1L2454.31,1116.1L2413.35,1161.21C2296.18,1278.47,2134.3,1351,1955.5,1351C1597.9,1351,1308,1060.88,1308,703C1308,345.119,1597.9,55,1955.5,55Z\"\n                            transform=\"matrix(0.103391 -0.251703 0.251703 0.103391 1297.463604 955.789861)\"\n                            fill={color} fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" />\n                    </g>\n                    <clipPath id=\"e7l4ir2eLhD5\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <rect id=\"e7l4ir2eLhD6\" width=\"1295\" height=\"1296\" rx=\"0\" ry=\"0\" transform=\"matrix(1 0 0 1 1308 55)\"\n                            fill={color} stroke=\"none\" strokeWidth=\"1\" />\n                    </clipPath>\n                </g>\n                <path id=\"e7l4ir2eLhD7\"\n                    d=\"M811.27241,1085.63037L755.48824,1058.06402L880.4497,805.18796C880.42923,804.69885,880.41891,804.20759,880.41891,803.71433C880.41891,797.8312,881.88713,792.2333,884.53541,787.16032L770.96006,668.53597L631.91347,909.37173L576.15756,877.18104L724.58424,620.0985L691.31772,585.35311L550.79195,828.75088L495.03604,796.56019L644.94189,536.91564L639.59344,531.32943L584.21684,514.54791L599.70208,463.44887L651.53212,479.15564C655.22556,478.48418,660.01241,479.17178,664.73022,481.33136C671.28682,484.33265,675.77869,489.29288,676.39603,493.6522L933.50579,762.19179C959.69536,763.51273,980.44439,781.59804,980.44439,803.71435C980.44439,811.51833,977.86091,818.82042,973.36652,825.06115L1011.26733,1101.2539L949.62144,1109.71331L916.96606,871.74531L811.27241,1085.63037Z\"\n                    fill={color} stroke=\"none\" strokeWidth=\"0\" />\n            </svg>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\nimport { CrashLogo } from './CrashLogo';\n\nexport type ErrorNotificationProps = {\n    errorText? : string,\n    style? : React.CSSProperties\n}\n\nexport const ErrorNotification : FC<ErrorNotificationProps>  = ({\n    errorText = \"Sorry, our site encountered an error. Please try refreshing the page.\", \n    style\n}) =>{\n\n    return (\n\n        <div style={{\n            display : \"grid\",\n            gridTemplateRows : \"5fr 1fr\",\n            width : \"100%\",\n            ...style\n        }}>\n            <div style={{\n                width : \"100%\",\n                justifyContent : \"center\",\n                alignContent : \"center\"\n            }}>\n                <CrashLogo style={{\n                    width : \"300px\",\n                    height : \"300px\",\n                    margin : \"auto\",\n                }}/>\n                <h6>{errorText.toUpperCase()}</h6>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { LogoA } from '../../Glitter';\nimport { isDapp } from '../../Items';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderResponsive } from '../../Maps/Headers';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {ErrorNotification} from \"../../Error\";\nimport { useErrorContext } from '../../Error/ErrorProvider';\n\nexport type ErrorPageProps = {}\n\nexport const ErrorPage : FC<ErrorPageProps>  = () =>{\n\n    const {\n        error\n    } = useErrorContext();\n\n    const errorText = `${error?.name}: ${error?.message}`;\n\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification errorText={errorText}/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n    )\n\n}","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ErrorPage } from '../../Pages/ErrorPage';\n\n\nexport interface ErrorContextI {\n    errorLoading : boolean,\n    errorValidating : boolean,\n    errorLoaded : boolean,\n    error : undefined | Error,\n    dispatch : (fn : (state : ErrorContextI)=>ErrorContextI)=>void\n}\n\nconst DefaultErrorContext : ErrorContextI = {\n    errorLoading : false,\n    errorValidating : false,\n    errorLoaded : false,\n    error : undefined,\n    dispatch : ()=>{}\n}\n\n\nexport const ErrorContext = createContext(DefaultErrorContext);\n\nexport const ErrorReducer = (\n    state : ErrorContextI, \n    action : (state : ErrorContextI)=>ErrorContextI\n)=>{\n    return action(state);\n}\n\nexport type ErrorProviderProps = {\n    initialerror? : {\n        [key : string] : any\n    } \n}\n\nexport const ErrorProvider : FC<ErrorProviderProps>  = ({\n    initialerror,\n    children\n}) =>{\n\n    const [state, dispatch] = useReducer(ErrorReducer, DefaultErrorContext);\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && !state.errorValidating){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    dispatch : dispatch,\n                    errorValidating : true,\n                }\n            })\n\n        }\n\n    })\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && state.errorValidating && state.dispatch){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    errorValidating : false,\n                    errorLoaded : true\n                }\n            })\n\n\n        } \n    });\n\n    \n\n    return (\n\n        <ErrorContext.Provider value={{\n            ...state,\n            dispatch : dispatch\n        }}>\n            {state.error ? <ErrorPage/> : children}\n        </ErrorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useErrorContext = () : ErrorContextI=>{\n\n    const context = useContext(ErrorContext);\n\n    if(!context){\n        throw new Error(\"useErrorContext must be called within a ErrorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useErrorContext } from './ErrorProvider';\n\nexport type ErrorDispatchProps = {\n    error : Error\n}\n\nexport const ErrorDispatch : FC<ErrorDispatchProps>  = ({\n    error\n}) =>{\n\n    const {\n        dispatch \n    } = useErrorContext();\n\n    useEffect(()=>{\n        dispatch((state)=>{\n            return {\n                ...state,\n                error : error\n            }\n        })\n    })\n\n    return (\n\n        <>\n        \n\n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ErrorProvider } from '../ErrorProvider';\nimport { UniversalErrorBoundary } from '..';\n\nexport type IntegratedErrorBoundaryProps = {}\n\nexport const IntegratedErrorBoundary : FC<IntegratedErrorBoundaryProps>  = ({\n    children\n}) =>{\n\n    return (\n\n        <ErrorProvider>\n            <UniversalErrorBoundary>\n                {children}\n            </UniversalErrorBoundary>\n        </ErrorProvider>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport {AthenaButton} from \"../../../Components/Buttons\";\nimport {Colors, DesktopSizes, Shadows} from \"../../../Theme\";\nimport {Grid3x3GapFill} from \"react-bootstrap-icons\";\n\nconst Members = [\"Single\", \"Grid\"]\n\n\nexport type ApolloRunDappContentProps = {\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void\n    which ? : string\n}\n\nconst ApolloRunDappContent : FC<ApolloRunDappContentProps> & {\n    Single : FC,\n    Grid : FC\n}  = ({\n    children,\n    grid,\n    setGrid,\n    which\n}) =>{\n\n    const {\n        Single,\n        Grid\n    } = getComponentMembers(Members, children);\n\n    const handleGrid = ()=>{\n        setGrid && setGrid(true);\n    }\n    const handleSingle = ()=>{\n        setGrid && setGrid(false);\n    }\n\n    \n    \n\n    return (\n\n        <div \n        style={{\n            display : \"flex\",\n            flexDirection : \"column\",\n            flexGrow : 1\n        }}>\n            <div style={{\n                display : \"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                position : \"relative\",\n                overflow  : \"visible\"\n            }}>\n                <AthenaButton\n                    className=\"none\"\n                    onClick={handleGrid}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={grid ? Colors.jonasGray : Colors.quartenaryTextColor}\n                    style={{\n                        boxShadow : \"none\",\n                        height : \"50px\",\n                        width : \"60px\",\n                        zIndex : 1000,\n                        position : \"relative\",\n                        top : grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop :  \"none\",\n                        borderLeft : \"none\",\n                        borderBottom : grid ? `1px solid ${Colors.jonasGray}` : \"none\",\n                        borderRight :  \"none\"\n                    }}\n                >\n                    <Grid3x3GapFill size={20}/>\n                </AthenaButton>\n                <AthenaButton\n                    className=\"none\"\n                    onClick={handleSingle}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={!grid ? Colors.jonasGray : Colors.quartenaryTextColor}\n                    style={{\n                        boxShadow : \"none\",\n                        zIndex : 100,\n                        position : \"relative\",\n                        top : !grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop :  \"none\",\n                        borderLeft : \"none\",\n                        borderBottom : !grid ? `1px solid ${Colors.jonasGray}` : \"none\",\n                        borderRight :  \"none\",\n                        fontSize : \"24px\"\n                    }}\n                >\n                    <b>ƒ<sub>𝑥</sub></b>&ensp;{which}\n                </AthenaButton>\n            </div>\n            <div style={{\n                boxShadow : Shadows.defaultShadow,\n                flexGrow : 1,\n                zIndex : 0,\n                background : Colors.jonasGray,\n                borderTopRightRadius : DesktopSizes.BorderRadius.standard,\n                borderBottomLeftRadius : DesktopSizes.BorderRadius.standard,\n                borderBottomRightRadius : DesktopSizes.BorderRadius.standard\n            }}>\n                {grid ? Grid : Single}\n            </div>\n        </div>\n\n    )\n\n}\n\nApolloRunDappContent.Grid = generateNamedMember(\"Grid\");\nApolloRunDappContent.Single = generateNamedMember(\"Single\");\n\nexport {ApolloRunDappContent}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappPutI } from '../DappPutType';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Pre\", \"Post\"];\n\nexport type DefaultHeaderProps = {\n    dappPut : DappPutI,\n    style ? : React.CSSProperties\n}\n\nconst DefaultHeader : FC<DefaultHeaderProps> & {\n    Pre : FC,\n    Post : FC\n}  = ({\n    dappPut,\n    children,\n    style\n}) =>{\n\n    const {\n        Pre,\n        Post\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            paddingBottom : DesktopSizes.Padding.standard\n        }}>\n            <div style={{\n                display :\"grid\",\n                gridTemplateColumns : \"30px auto\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                fontSize : \"20px\",\n                color : Colors.Maintheme,\n                textAlign : \"left\",\n                ...style\n            }}>\n                <div>\n                    <b>{Pre}</b>\n                </div>\n                <div>\n                    {dappPut.prompt||dappPut.name}{Post}\n                </div>\n            </div>\n            <div>\n                {dappPut.description && <><br/>\n                <p style={{\n                    color : Colors.secondaryTextColor\n                }}>\n                {dappPut.description}\n                </p></>}\n            </div>\n        </div>\n\n    )\n\n}\n\nDefaultHeader.Pre = generateNamedMember(\"Pre\");\nDefaultHeader.Post = generateNamedMember(\"Post\");\n\nexport {DefaultHeader}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappInputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappInputHeaderProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n}\n\nexport const DappInputHeader : FC<DappInputHeaderProps>  = ({\n    dappInput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappInput} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}>{dappInput.type}</i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {DappI} from \"../Dapp\";\nimport {AthenaButton} from \"../../../Components/Buttons/AthenaButton\";\nimport {Colors, DesktopSizes} from \"../../../Theme\";\nimport { DappInputHeader } from '../../DappPut/DappInput/DappInputHeader';\nimport { DappInputI } from '../../DappPut/DappPutType';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\n\nexport type ApolloDappFunctionProps = {\n    dapp : DappI,\n    func : OpenContractFunctionI,\n    selected : boolean,\n    onClick ? : (\n        e : React.MouseEvent,\n        name : string\n    )=>void,\n    style ? : React.CSSProperties\n}\n\nexport const ApolloDappFunction : FC<ApolloDappFunctionProps>  = ({\n    dapp,\n    func,\n    selected,\n    onClick,\n    style \n}) =>{\n\n    const handleClick = (e : React.MouseEvent)=>{\n        onClick && onClick(e, func.name);\n    }\n\n    const inputs = func.inputs.map((input)=>{\n        return (<DappInputHeader\n            key={input.name}\n            dappInput={input as DappInputI} style={{\n            fontSize : \"16px\"\n        }}/>)\n    })\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n     \n        <ThroughGlassAgathocles \n            style={{\n                overflow : \"visible\"\n            }}\n            glass={isHovered} glassOpacity={.7}>\n            <GrowOnEventAchamaenid grow={isHovered}>\n            <AthenaButton \n                onMouseEnter={handleMouseOver}\n                onMouseLeave={handleMouseOut}\n                onClick={handleClick}\n                    style={{\n                        wordWrap : \"normal\",\n                        width : \"auto\",\n                        fontSize : \"18px\",\n                        border : \"none\",\n                        ...style\n                    }}\n                \n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                        <div style={{\n                            overflowX : \"scroll\",\n                            overflowY : \"scroll\",\n                            padding : DesktopSizes.Padding.standard\n                        }}>\n                                <div style={{\n                                    display : \"flex\",\n                                    justifyContent : \"left\",\n                                    alignContent : \"center\",\n                                    alignItems : \"center\",\n                                    fontSize : \"18px\"\n                                }}>\n                                    <div>\n                                        <b>ƒ<sub>𝑥</sub></b>&emsp;\n                                    </div>\n                                    <hr style={{\n                                        color : Colors.Maintheme\n                                    }}/>\n                                    <div>\n                                        {func.name}\n                                    </div>\n                                </div>  \n                                <div>\n                                    {inputs}\n                                </div>\n                                <div style={{\n                                    textAlign : \"left\"\n                                }}>\n                                    {func.requiresOracle && <i style={{\n                                        color : Colors.cyan,\n                                        fontSize : \"16px\",\n                                        textAlign : \"left\"\n                                    }}>\n                                        Oracle required.  \n                                    </i>}\n                                </div>\n                        </div>\n                </AthenaButton>\n            </GrowOnEventAchamaenid>\n    </ThroughGlassAgathocles>\n\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CollectionFill } from 'react-bootstrap-icons';\nimport { DappI } from '../Dapp';\nimport {ApolloDappFunction} from \"./ApolloRunDappFunction\";\nimport {LeftRightScrollAdorno} from \"../../../Components/Scroll/LeftRightScroll\";\nimport { DesktopSizes } from '../../../Theme';\nimport Masonry from \"react-masonry-css\";\nimport Skeleton from 'react-loading-skeleton';\n\nexport type ApolloDappFunctionsProps = {\n    dapp : DappI,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloDappFunctions : FC<ApolloDappFunctionsProps>  = ({\n    dapp,\n    which,\n    setWhich\n}) =>{\n\n    const onFunctionClick = (e : React.MouseEvent, name : string)=>{\n        setWhich && setWhich(name);\n    }\n\n    const funcs = dapp.contract && dapp.contract ? dapp.contract.contractFunctions.map((func, index)=>{\n\n\n        return (\n            <div \n            key={func.name}\n            style={{\n                overflow : \"visible\",\n                paddingRight : DesktopSizes.Padding.standard,\n                paddingBottom : DesktopSizes.Padding.standard,\n                width : \"100%\"\n            }}>\n                <ApolloDappFunction \n                    style={{\n                        width : \"100%\",\n                        height : \"auto\",\n                        borderRadius : DesktopSizes.BorderRadius.standard\n                    }}\n                    onClick={onFunctionClick}\n                    selected={func.name === which} \n                    dapp={dapp} \n                    func={func}/>\n            </div>\n        )\n    }) : <></>\n\n    return (\n\n        <div style={{\n            paddingLeft : DesktopSizes.Padding.standard,\n            paddingTop : DesktopSizes.Padding.standard\n        }}>\n            {dapp.contract ? <Masonry \n                style={{\n                    overflow : \"visible\"\n                }}\n                className={\"masonry\"}\n                breakpointCols={3}>\n                {funcs}\n            </Masonry> : <Masonry \n                style={{\n                    overflow : \"visible\"\n                }}\n                className={\"masonry\"}\n                breakpointCols={3}>\n              {Array(Math.floor(Math.random() * 7) + 5).fill(0).map(()=><div style={{\n                     paddingRight : DesktopSizes.Padding.standard,\n                     paddingBottom : DesktopSizes.Padding.standard,\n                }}><Skeleton height={`${Math.floor(Math.random() * 150) + 50}px`} width=\"100%\"/></div>)}\n            </Masonry>}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CollectionFill } from 'react-bootstrap-icons';\nimport { DappI } from '../Dapp';\nimport {ApolloDappFunction} from \"./ApolloRunDappFunction\";\nimport {LeftRightScrollAdorno} from \"../../../Components/Scroll/LeftRightScroll\";\nimport { DesktopSizes } from '../../../Theme';\nimport Masonry from \"react-masonry-css\";\nimport {generate} from \"shortid\";\n\nexport type ApolloDappFunctionsMobileProps = {\n    dapp : DappI,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloDappFunctionsMobile : FC<ApolloDappFunctionsMobileProps>  = ({\n    dapp,\n    which,\n    setWhich\n}) =>{\n\n    const onFunctionClick = (e : React.MouseEvent, name : string)=>{\n        setWhich && setWhich(name);\n    }\n\n\n    const funcs = dapp.contract && dapp.contract ? dapp.contract.contractFunctions.map((func, index)=>{\n\n\n        return (\n            <div \n            key={generate()}\n            style={{\n                paddingTop : index === 0 ? DesktopSizes.Padding.standard : 0,\n                paddingLeft : DesktopSizes.Padding.standard,\n                paddingRight : DesktopSizes.Padding.standard,\n                paddingBottom : DesktopSizes.Padding.standard,\n                overflow : \"visible\"\n            }}>\n                <ApolloDappFunction \n                    style={{\n                        overflow : \"visible\",\n                        width : \"100%\",\n                        height : \"auto\",\n                        borderRadius : DesktopSizes.BorderRadius.standard\n                    }}\n                    onClick={onFunctionClick}\n                    selected={func.name === which} \n                    dapp={dapp} \n                    func={func}/>\n            </div>\n        )\n    }) : <></>\n\n    return (\n\n        <>\n            {funcs}\n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MediaResponsive } from '../../../Sytems';\nimport { DappI } from '../Dapp';\nimport { ApolloDappFunctions } from './ApolloRunDappFunctions';\nimport {ApolloDappFunctionsMobile} from \"./ApolloRunDappFunctionsMobile\";\n\n\nexport type ApolloRunDappFunctionGridViewProps = {\n    which ? : string,\n    dapp : DappI,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappFunctionGridView : FC<ApolloRunDappFunctionGridViewProps>  = ({\n    which,\n    setWhich,\n    dapp\n}) =>{\n\n    \n\n    return (\n\n        <MediaResponsive>\n            <MediaResponsive.Desktop>\n                <ApolloDappFunctions dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Desktop>\n            <MediaResponsive.Laptop>\n                <ApolloDappFunctions dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Laptop>\n            <MediaResponsive.Mobile>\n                <ApolloDappFunctionsMobile dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Mobile>\n            <MediaResponsive.Tablet>\n                <ApolloDappFunctionsMobile dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Tablet>\n        </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInputHeader } from './DappInputHeader';\nimport { DappInputContent } from './DappInputContent';\nimport { darkenStandard } from '../Methods';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n    setInput ? : (input : DappInputI)=>void,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappInput : FC<DappPutInputProps>  = ({\n    dappInput,\n    style,\n    setInput\n}) =>{\n\n    return (\n\n        <></>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport { Colors, DesktopSizes, Shadows } from '../../Theme';\n\nconst Members = [\"Content\", \"Header\"];\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties,\n    end ? : boolean\n}\n\nconst DappPutLayout : FC<DappPutInputProps> & {\n    Header : FC,\n    Content : FC\n} = ({\n    style,\n    end,\n    children\n}) =>{\n\n    const {\n        Header,\n        Content\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            textAlign : \"left\",\n            overflowWrap : \"anywhere\",\n            padding : \"20px\",\n            borderRadius : DesktopSizes.BorderRadius.standard,\n            borderCollapse : \"collapse\",\n            border : \"none\",\n            boxShadow : Shadows.defaultShadow,\n            ...style,\n        }}>\n            <div style={{\n                fontSize : \"24px\",\n            }}>\n                {Header}\n            </div>\n            <div style={{\n                fontSize : \"18px\"\n            }}>\n                {Content}\n            </div>\n        </div>\n\n    )\n\n}\n\nDappPutLayout.Header = generateNamedMember(\"Header\");\nDappPutLayout.Content = generateNamedMember(\"Content\")\n\nexport {DappPutLayout};","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards';\nimport { HandIndexFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../../Theme';\n\nexport type DappInteractputHeaderProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputHeader : FC<DappInteractputHeaderProps>  = ({\n    dappInteractput\n}) =>{\n\n    return (\n\n        <DefaultHeader \n            style={{\n                color : Colors.lilac\n            }}\n            dappPut={dappInteractput}>\n            <DefaultHeader.Pre>\n                <HandIndexFill size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {AthenaButton} from \"../../../Components/Buttons\"\nimport {\n    darkenStandard\n} from \"../Methods\";\nimport {Colors} from \"../../../Theme\";\nimport {\n    DappInteractputI\n} from \"../DappPutType\";\nimport Color from \"color\";\nimport {X} from \"react-bootstrap-icons\";\nimport {Modal} from \"react-bootstrap\";\nimport { useOpenContractContext } from '../../../Models';\n\nexport type DappInteractputContentProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputContent : FC<DappInteractputContentProps>  = ({\n    dappInteractput\n}) =>{\n\n    const {openContract} = useOpenContractContext();\n    \n    const [failedWindow, setFailedWindow] = useState<boolean>(false);\n    const [modal, setModal] = useState(false);\n    \n\n    return (\n\n        <div style={{\n            display : \"flex\"\n        }}>\n            <AthenaButton \n            style={{\n                boxShadow : \"none\",\n                border : `1px solid ${Colors.lilac}`\n            }}\n            onClick={()=>{\n                setModal(true);\n                dappInteractput.xpraExit.then(()=>{\n                    setModal(false);\n                });\n            }}\n            primaryColor={darkenStandard(Colors.lilac)}\n            secondaryColor={\"white\"}>\n                Open interactive session\n            </AthenaButton>\n            {failedWindow && \n            <p>Failed to open a new window at <a \n            onClick={(e)=>{\n                e.preventDefault();\n                setModal(true);\n            }} href={dappInteractput.sessionUrl}>{dappInteractput.sessionUrl}</a>\n                Please enable popups and try again or click the link above.\n            </p>}\n            {modal&&<div style={{\n                    position : \"fixed\",\n                    height : \"100vh\",\n                    width : \"100vw\",\n                    left : 0,\n                    top : 0,\n                    padding : \"2px\"\n                }}>\n                <Modal\n                show={modal}\n                style={{\n                    position : \"relative\",\n                    height : \"100%\",\n                    width : \"100%\",\n                    left : 0,\n                    top : 0,\n                    padding : \"2px\"\n                }}>\n                    <div style={{\n                        position : \"fixed\",\n                        zIndex : 1000,\n                        width : \"99.2vw\",\n                        height : \"99.2vh\",\n                        left : \".4vw\",\n                        top : \".4vh\",\n                        padding : \"3px\",\n                        border : `1px solid #FFFFFF`,\n                        borderRadius : \"5px\",\n                        background : Color(Colors.lilac).lighten(.5).hex(),\n                        display : \"grid\",\n                        gridTemplateRows : \"1fr 20fr\"\n                    }}>\n                        <div style={{\n                            display : \"grid\",\n                            gridTemplateColumns : \"9fr 1fr\"\n                        }}>\n                            <div style={{\n                                display : \"flex\",\n                                alignItems : 'center',\n                                padding : \"0px\",\n                                alignContent : \"center\"\n                            }}>\n                                <span>&nbsp;{openContract && openContract.contractName}: {dappInteractput.contractFunction.name}</span>\n                            </div>\n                            <div \n                            style={{\n                                display : 'flex',\n                                flexDirection :\"row-reverse\",\n                            }}>\n                                <X \n                                className={\"hover-invert-sm hover-salmon\"}\n                                onClick={()=>setModal(false)}\n                                style={{\n                                marginLeft : \"auto\",\n                                }}/>\n                            </div>\n                        </div>\n                            <iframe src={dappInteractput.sessionUrl} style={{\n                                height : \"100%\",\n                                width : \"100%\",\n                                border : `0px solid #FFFFFF`,\n                                borderRadius : \"5px\"\n                            }}/>\n                        </div>\n                </Modal>\n            </div>}\n        </div>\n\n    )\n\n}\n","import Color from \"color\";\nimport React from \"react\";\n\nexport const lightenStandard = (color : React.CSSProperties[\"color\"])=>{\n\n    return Color(color).lighten(.2).hex();\n\n}\n\nexport const darkenStandard = (color : React.CSSProperties[\"color\"])=>{\n    return Color(color).darken(.2).hex();\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInteractputHeader } from './DappInteractputHeader';\nimport {DappInteractputContent} from \"./DappInteractputContent\";\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutInteractputProps = {\n    style ? : React.CSSProperties\n    dappInteractput : DappInteractputI,\n    end ? : boolean,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappInteractput : FC<DappPutInteractputProps>  = ({\n    dappInteractput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappInteractputHeader dappInteractput={dappInteractput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappInteractputContent dappInteractput={dappInteractput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards/DefaultHeader\";\nimport {ArrowReturnRight} from \"react-bootstrap-icons\";\nimport { Colors, DesktopSizes } from '../../../Theme';\n\nexport type DappOutputHeaderProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputHeader : FC<DappOutputHeaderProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappOutput} style={{\n            color : Colors.Maintheme,\n            paddingBottom : DesktopSizes.Padding.standard\n        }}>\n            <DefaultHeader.Pre>\n                <ArrowReturnRight size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Clipboard } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappOutputI } from '../DappPutType';\n\nexport type DappOutputContentProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputContent : FC<DappOutputContentProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <div style={{\n            color : Colors.Maintheme,\n            width : \"100%\",\n            display : \"grid\",\n            alignContent : 'center',\n            alignItems : \"center\",\n        }}>\n            <table>\n                <colgroup>\n                    <col span={1} style={{\n                        width : \"80%\"\n                    }}/>\n                    <col span={1} style={{\n                        width : \"20%\"\n                    }}/>\n                </colgroup>\n                <tbody>\n                    <tr>\n                        <td>\n                            <div style={{\n                                color : Colors.secondaryTextColor,\n                                textAlign : \"left\"\n                            }}>\n                                {dappOutput.value}\n                            </div>\n                        </td>\n                        <td>\n                            <div style={{\n                                width : \"100%\",\n                                display : \"grid\",\n                                gridTemplateColumns : \"1fr\",\n                                justifyContent : \"center\"\n                            }}>\n                                <AthenaButton \n                                style={{\n                                    width : \"100%\",\n                                    border : `1px solid ${Colors.Maintheme}`,\n                                    boxShadow : \"none\"\n                                }}\n                                primaryColor={Colors.Maintheme}\n                                secondaryColor={\"white\"}\n                                action={async ()=>{\n                                    navigator.clipboard.writeText(dappOutput.value||\"\");\n                                }}>\n                                    <Clipboard size={16}/>\n                                </AthenaButton>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport {DappOutputHeader} from \"./DappOutputHeader\";\nimport { DappOutputContent } from '../DappOutput/DappOutputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutOutputProps = {\n    style ? : React.CSSProperties\n    dappOutput : DappOutputI,\n    end ? : boolean,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOutput : FC<DappPutOutputProps>  = ({\n    style,\n    dappOutput,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOutputHeader dappOutput={dappOutput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOutputContent dappOutput={dappOutput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill} from \"react-bootstrap-icons\";\nimport { Colors } from '../../../Theme';\n\nexport type DappErrputHeaderProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputHeader : FC<DappErrputHeaderProps>  = ({\n    dappErrput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            style={{\n                color : Colors.failedRed\n            }}\n            dappPut={dappErrput}>\n                <DefaultHeader.Pre>\n                    <ExclamationCircleFill size={18}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappErrputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from \"remark-gfm\";\n\nexport type DappErrputContentProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputContent : FC<DappErrputContentProps>  = ({\n    dappErrput\n}) =>{\n\n    return (\n\n        <div>\n             <ReactMarkdown plugins={[\n                remarkGfm\n            ]}>\n                {dappErrput.value}\n            </ReactMarkdown>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappErrputHeader } from './DappErrputHeader';\nimport { DappErrputContent } from './DappErrputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutErrputProps = {\n    style ? : React.CSSProperties\n    dappErrput : DappErrputI,\n    end ? : boolean,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappErrput : FC<DappPutErrputProps>  = ({\n    dappErrput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappErrputHeader dappErrput={dappErrput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappErrputContent dappErrput={dappErrput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill, InfoCircleFill} from \"react-bootstrap-icons\";\nimport { Colors } from '../../../Theme';\n\nexport type DappDescputHeaderProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputHeader : FC<DappDescputHeaderProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            style={{\n                color : Colors.Maintheme\n            }}\n            dappPut={dappDescput}>\n                <DefaultHeader.Pre>\n                    <InfoCircleFill size={14}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappDescputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\n\nexport type DappDescputContentProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputContent : FC<DappDescputContentProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <div>\n            {dappDescput.value}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappDescputHeader } from './DappDescputHeader';\nimport { DappDescputContent } from './DappDescputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutDescputProps = {\n    style ? : React.CSSProperties\n    dappDescput : DappDescputI\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappDescput : FC<DappPutDescputProps>  = ({\n    dappDescput,\n    style\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : \"white\",\n            userSelect : \"text\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappDescputHeader dappDescput={dappDescput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappDescputContent dappDescput={dappDescput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill, Eyeglasses} from \"react-bootstrap-icons\";\n\nexport type DappOracleputHeaderProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputHeader : FC<DappOracleputHeaderProps>  = ({\n    dappOracleput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            dappPut={dappOracleput}>\n                <DefaultHeader.Pre>\n                    <Eyeglasses size={24}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Check, X, Circle, CircleFill} from 'react-bootstrap-icons';\nimport { Ellipsis } from 'react-bootstrap/esm/PageItem';\nimport {ReadyT} from \"../../../Components/Ready\"\nimport { Colors } from '../../../Theme';\n\nexport type OracleLinkProps = {\n    ready ? :ReadyT,\n    link : string\n}\n\nexport const OracleLink : FC<OracleLinkProps>  = ({\n    ready,\n    link\n}) =>{\n\n\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n\n            <div style={{\n                width : \"30px\",\n                display : \"flex\",\n                alignItems : \"center\",\n                alignContent : 'center',\n                justifyItems : \"center\",\n                justifyContent : \"center\"\n            }}>\n                {ready === \"ready\"  && \n                    <Check size={20} style={{\n                        color : Colors.forestEdge\n                    }} />\n                }\n                {!ready || (ready === \"failed\") && \n                    <X size={20} style={{\n                        color : Colors.failedRed\n                    }}/>\n                }\n                {ready === \"not ready\" && \n                    <CircleFill size={10} style={{\n                        color : Colors.arizonaOrange\n                    }}/>\n                }\n            </div>\n            <div>\n            &emsp;<a style ={{\n                color  : Colors.babyBlue\n            }} href={link}>{link}</a>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useReducer} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappOracleputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\nimport {OracleLink} from \"./OracleLink\";\nimport { ReadyT } from '../../../Components/Ready';\n\nconst allPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        \n        return agg && (typeof obj[key] === \"string\")\n    }, true)\n}\n\nconst countPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg + ((typeof obj[key] === \"string\" ? 1 : 0) * 1)\n    }, 0)\n}\n\nexport type DappOracleputContentProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputContent : FC<DappOracleputContentProps>  = ({\n    dappOracleput\n}) =>{\n\n    const map = dappOracleput.contractFunction.oracleData||{};\n    const [oracleStatii, setOracleStatii] = useState<{[key : string] : ReadyT}>(\n        Object.keys(map).reduce((agg, key)=>{\n            return {\n                ...agg,\n                [key] : [typeof map[key] === \"string\"] ? \"ready\" :  \"not ready\"\n            }\n        }, {} as {[key : string] : ReadyT})\n    )\n    const [oracleStates, setOracleStates] = useReducer<\n        (state : {[key : string] : string}, data : {[key : string] : string})=>{[key : string] : string}\n    >(\n        (state, data)=>{\n            return {\n                ...state,\n                ...data\n            }\n        },\n        (dappOracleput.contractFunction.oracleData||{})as unknown as {[key : string] : string}\n    );\n    useEffect(()=>{\n        Object.keys(map).map((key)=>{\n            if((map[key] as Promise<String>).then){\n                (map[key] as Promise<String>).then((data)=>{\n                    setOracleStatii({\n                        ...oracleStatii,\n                        [key] : \"ready\"\n                    });\n                    \n                    setOracleStates({\n                        [key] : data\n                    } as {[key : string]: string})\n                }).catch(()=>{\n                    dappOracleput.contractFunction.oraclePromiseReject && \n                    dappOracleput.contractFunction.oraclePromiseReject();\n                    setOracleStatii({\n                        ...oracleStatii,\n                        [key] : \"not ready\"\n                    })      \n                })\n            }\n        })\n    }, [])\n\n    const allResolved = allPromisesResolved(oracleStates);\n    const resolveCount = countPromisesResolved(oracleStates);\n    const links = Object.keys(oracleStatii).map((key)=>{\n        return (\n            <OracleLink link={key} ready={oracleStatii[key]}/>\n        )\n    })\n\n    useEffect(()=>{\n        \n        if(allResolved\n            && oracleStates  \n            && dappOracleput.contractFunction.oraclePromiseResolve\n        ){\n           /* dappOracleput.setOracleData(\n                oracleStates\n            );*/\n            dappOracleput.contractFunction.oraclePromiseResolve(\n                oracleStates as {[key : string] : string}\n            );\n        }\n    })\n\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor\n        }}>\n           <div style={{\n               border : `1px solid ${Colors.cyan}`,\n               borderRadius : DesktopSizes.BorderRadius.standard,\n               padding : DesktopSizes.Padding.standard,\n               background : Colors.primaryTextColor,\n               color : Colors.deepCyan\n           }}>\n                <h6>{allResolved ? \"Finished\" : \"Awaiting...\"} {resolveCount}/{Object.keys(dappOracleput.contractFunction.oracleData||{}).length}</h6>\n                {links}\n           </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappOracleputHeader } from './DappOracleputHeader';\nimport { DappOracleputContent } from './DappOracleputContent';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutOracleputProps = {\n    style ? : React.CSSProperties\n    dappOracleput : DappOracleputI,\n    end ? : boolean\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOracleput : FC<DappPutOracleputProps>  = ({\n    dappOracleput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOracleputHeader dappOracleput={dappOracleput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOracleputContent dappOracleput={dappOracleput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappResultputHeaderProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n}\n\nexport const DappResultputHeader : FC<DappResultputHeaderProps>  = ({\n    dappResultput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappResultput} style={{\n            color : Colors.forestEdge\n        }}>\n            <DefaultHeader.Pre>\n                𝑦  \n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\nimport { result } from 'cypress/types/lodash';\nimport remarkGfm from 'remark-gfm';\nimport ReactMarkdown from \"react-markdown\";\n\n\nexport type DappResultputContentProps = {\n    dappResultput : DappResultputI,\n    setResultput ? : (Resultput : DappResultputI)=>void\n}\n\nexport const DappResultputContent : FC<DappResultputContentProps>  = ({\n    dappResultput, \n    setResultput\n}) =>{\n\n    return (\n\n        <div style={{\n            userSelect : \"text\",\n            display : \"flex\",\n            color : Colors.babyBlue\n        }}>\n            <ReactMarkdown plugins={[\n                remarkGfm\n            ]}>\n                {dappResultput.value||\"No return value yet.\"}\n            </ReactMarkdown>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappResultputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappResultputHeader } from './DappResultputHeader';\nimport { DappResultputContent } from './DappResultputContent';\nimport { darkenStandard } from '../Methods';\nimport { DesktopSizes } from '../../../Theme';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutResultputProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappResultput : FC<DappPutResultputProps>  = ({\n    dappResultput,\n    style,\n}) =>{\n\n\n    return (\n\n       dappResultput.value ? <DappPutLayout style={{\n            background : Colors.greenCeramic,\n            color : Colors.forestEdge,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappResultputHeader dappResultput={dappResultput} />\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappResultputContent dappResultput={dappResultput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout> : <></>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappOracleInputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappOracleInputHeaderProps = {\n    style ? : React.CSSProperties\n    dappOracleInput : DappOracleInputI,\n}\n\nexport const DappOracleInputHeader : FC<DappOracleInputHeaderProps>  = ({\n    dappOracleInput,\n    style\n}) =>{\n\n\n    return (\n\n        <DefaultHeader dappPut={dappOracleInput} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Pre>\n                𝑥\n            </DefaultHeader.Pre>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}> </i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}\n","import React, {FC, ReactElement} from 'react';\nimport {Form, FormControlProps} from \"react-bootstrap\";\n\nexport type TextInputApolloProps = FormControlProps & {\n    style ? : React.CSSProperties,\n    onTextInput ? : (text : string)=>void,\n    onSubmit ? : (text : string)=>void,\n    placeholder ? : string,\n    defaultValue ? : string\n}\n\nexport const TextInputApollo : FC<TextInputApolloProps>  = (props) =>{\n    const {\n        onTextInput,\n        ...rest\n    } = {\n        ...props,\n        type : \"text\"\n    };\n    \n    const handleChange : React.ChangeEventHandler = (e)=>{\n        onTextInput && onTextInput((e.target as any).value);\n    }\n    const handleKeyDown = (e : React.KeyboardEvent<HTMLInputElement>)=>{\n        if(e.key === \"Enter\"){\n            props.onSubmit && props.onSubmit((e.target as any).value);\n        }\n    }\n    return (\n        <Form.Control\n            defaultValue={props.defaultValue}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            {...rest}\n        />\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappOracleInputI } from '../DappPutType';\nimport Color from \"color\";\nimport {\n    TextInputApollo\n} from \"../../../Components/TextInput\"\nimport { useState } from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\n\nexport type DappOracleInputContentProps = {\n    dappOracleInput : DappOracleInputI,\n    setOracleInput ? : (OracleInput : DappOracleInputI)=>void\n}\n\nexport const DappOracleInputContent : FC<DappOracleInputContentProps>  = ({\n    dappOracleInput, \n    setOracleInput\n}) =>{\n\n    const [disabled, setDisabled] = useState(false);\n\n   // const [text, setText] = useState(dappOracleInput.response);\n   const text = dappOracleInput.contractFunction.oracleInputs &&\n   dappOracleInput.contractFunction.oracleInputs[dappOracleInput.id].response;\n\n   const searchParams = new URLSearchParams(window.location.search.slice(0,-1));\n   \n   const _input = searchParams.get(`${dappOracleInput.contractFunction.name}.${dappOracleInput.name}`);\n   const val = _input ? decodeURI(_input) : undefined;\n\n    const onTextOracleInput = (text : string)=>{\n        \n        searchParams.set(\n            `${dappOracleInput.contractFunction.name}.${dappOracleInput.name}`,\n            text\n        );\n\n        window.history.pushState({\n            path : `/?${searchParams.toString()}/${window.location.hash}`\n        }, '', `/?${searchParams.toString()}/${window.location.hash}`);\n\n\n        setOracleInput && setOracleInput({\n            ...dappOracleInput,\n            response : text\n        });\n    }\n\n    const onTextSubmit = (text : string)=>{\n        dappOracleInput.resolve(text);\n        setDisabled(true);\n    };\n\n    const onButtonSumbit = ()=>{\n        dappOracleInput.resolve(text||val||\"\");\n        setDisabled(true);\n    }\n\n    const handleKeyDown : React.KeyboardEventHandler= (e)=>{\n        if(e.key === \"Enter\") onButtonSumbit();\n    }\n\n    return (\n        <div style={{\n            paddingTop : DesktopSizes.Padding.standard,\n        }}>\n            <table style={{\n                width : \"100%\"\n            }}>\n                <colgroup>\n                    <col span={1} style={{\n                        width : \"80%\"\n                    }}/>\n                    <col span={1} style={{\n                        width : \"20%\"\n                    }}/>\n                </colgroup>\n                <tbody>\n                    <tr onKeyDown={handleKeyDown}>\n                        <td> <TextInputApollo \n                            value={text||val}\n                            placeholder={\"Enter value\"}\n                            onTextInput={onTextOracleInput}\n                            onSubmit={onTextSubmit}\n                        style={{\n                            background : \"white\",\n                            color : Colors.Maintheme,\n                            border : `1px solid ${Colors.Maintheme}`\n                        }}/></td>\n                        <td><AthenaButton \n                        style={{\n                            border : `1px solid ${Colors.Maintheme}`,\n                            boxShadow : \"none\",\n                            width : \"100%\"\n                        }}\n                        onClick={onButtonSumbit}\n                        primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                        Submit\n                    </AthenaButton></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        \n        \n\n    )\n\n}\n","import React, {FC, ReactElement} from 'react';\nimport { DappOracleInputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappOracleInputHeader } from './DappOracleInputHeader';\nimport { DappOracleInputContent } from './DappOracleInputContent';\nimport { darkenStandard } from '../Methods';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutOracleInputProps = {\n    style ? : React.CSSProperties\n    dappOracleInput : DappOracleInputI,\n    contractFunction : OpenContractFunctionI,\n    index : number,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOracleInput : FC<DappPutOracleInputProps>  = ({\n    dappOracleInput,\n    contractFunction,\n    reduceContractFunction,\n    index,\n    style,\n}) =>{\n\n    const setOracleInput = (dappOracleInput : DappOracleInputI)=>{\n\n        reduceContractFunction && reduceContractFunction((contractFunction)=>{\n            return {\n                ...contractFunction,\n                oracleInputs : {\n                    ...contractFunction.oracleInputs,\n                    [dappOracleInput.id] : dappOracleInput\n                }\n            }\n        });\n    }\n\n    return (\n\n        <DappPutLayout style={{\n            color : Colors.Maintheme,\n            background : \"white\",\n        }}>\n            <DappPutLayout.Header>\n                <DappOracleInputHeader dappOracleInput={dappOracleInput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOracleInputContent dappOracleInput={dappOracleInput} setOracleInput={setOracleInput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {AthenaButton} from \"../../../Components/Buttons\";\nimport {Colors} from \"../../../Theme\";\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\nimport { DappCallputI } from '../DappPutType';\n\nexport type DappOracleCallputProps = {\n    dappOracleCallput : DappCallputI,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappOracleCallput : FC<DappOracleCallputProps>  = ({\n    dappOracleCallput\n}) =>{\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            justifyContent : \"right\",\n            justifyItems : \"right\",\n            width : \"100%\"\n        }}>\n            <AthenaButton \n                invert\n                style={{\n                    fontSize : \"16px\",\n                    justifySelf : \"right\"\n                }}\n                action={dappOracleCallput.call}\n                primaryColor={Colors.Maintheme}\n                secondaryColor={\"white\"}\n            >\n                <span style={{\n                    fontSize : \"18px\"\n                }}>Call hub</span>\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ClockFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../../Theme';\nimport { DappWaitingPutI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappWaitingPutHeaderProps = {\n    style ? : React.CSSProperties\n    dappWaitingPut : DappWaitingPutI,\n}\n\nexport const DappWaitingPutHeader : FC<DappWaitingPutHeaderProps>  = ({\n    dappWaitingPut,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappWaitingPut} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Pre>\n                <ClockFill size={16}/>\n            </DefaultHeader.Pre>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}>{dappWaitingPut.type}</i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors, DesktopSizes} from \"../../Theme\";\nimport { useState } from 'react';\n\nexport type ProgressBarAlanProps = {\n    style ? : React.CSSProperties,\n    innerStyle ? : React.CSSProperties\n    duration : number,\n    progress ? : number\n}\n\nexport const ProgressBarAlan : FC<ProgressBarAlanProps>  = ({\n    style,\n    duration,\n    progress\n}) =>{\n\n    const [_duration, _setDuration] = useState(duration);\n    \n    const opac = Math.floor((parseInt('44', 16) + (progress||0) * (255 - parseInt('44', 16)))).toString(16);\n\n    return (\n\n        <div style={{\n            ...style,\n            border : `1px solid ${Colors.forestEdge}`,\n            borderRadius : DesktopSizes.BorderRadius.standard,\n            display : \"flex\",\n            justifyContent : \"left\",\n            overflow : \"hidden\",\n            height : \"20px\"\n        }}>\n            <motion.div \n                style={{\n                    height : \"100%\"\n                }}\n                animate = {{\n                    width : [(progress ? `${progress * 100}%` : \"0%\"), \"100%\"],\n                    background : [`${Colors.readyGreen}${opac}`, Colors.readyGreen]\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : _duration\n                }}>\n\n            </motion.div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors } from '../../../Theme';\nimport { DappWaitingPutI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\nimport {ProgressBarAlan} from \"../../../Components/ProgressBar\"\nimport {\n    TextInputApollo\n} from \"../../../Components/TextInput\"\n\nexport type DappWaitingPutContentProps = {\n    dappWaitingPut : DappWaitingPutI,\n    setInput ? : (input : DappWaitingPutI)=>void\n}\n\nexport const DappWaitingPutContent : FC<DappWaitingPutContentProps>  = ({\n    dappWaitingPut, \n    setInput\n}) =>{\n\n    \n\n    const [duration, setDuration] = useState(dappWaitingPut.duration);\n\n    const progress = (new Date().getSeconds() - dappWaitingPut.timeStarted.getSeconds())/(dappWaitingPut.duration + 0.000001)\n\n    return (\n\n        <div>\n            <p>{dappWaitingPut.value}</p>\n            <ProgressBarAlan duration={duration} progress={progress}/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappWaitingPutI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappWaitingPutHeader } from './DappWaitingPutHeader';\nimport { DappWaitingPutContent } from './DappWaitingPutContent';\nimport { darkenStandard } from '../Methods';\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\n\nexport type DappPutWaitingPutProps = {\n    style ? : React.CSSProperties\n    dappWaitingPut : DappWaitingPutI,\n    setInput ? : (input : DappWaitingPutI)=>void,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (contractFunction : reduceContractFunctionI)=>void\n}\n\nexport const DappWaitingPut : FC<DappPutWaitingPutProps>  = ({\n    dappWaitingPut,\n    style,\n    setInput\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : \"white\",\n        }}>\n            <DappPutLayout.Header>\n                <DappWaitingPutHeader\n                    dappWaitingPut={dappWaitingPut}\n                />\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappWaitingPutContent\n                    dappWaitingPut={dappWaitingPut}\n                />\n            </DappPutLayout.Content>\n        </DappPutLayout>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI, DappPutI , DappWaitingPutI, DappErrputI, DappDescputI, DappInteractputI, DappOutputI, DappOracleputI, DappResultputI, DappOracleInputI, DappCallputI} from '../DappPutType';\nimport {DappInput} from \"../DappInput\";\nimport {DappOutput} from \"../DappOutput\";\nimport { DappDescput } from '../DappDescput';\nimport {DappInteractput} from \"../DappInteractput\";\nimport {DappErrput} from \"../DappErrput\";\nimport {DappOracleput} from \"../DappOracleput\";\nimport { DappResultput } from '../DappResultput';\nimport {DappOracleInput} from \"../DappOracleInput\";\nimport { reduceContractFunctionI } from '../../DappFunction/StateMethods';\nimport { DappOracleCallput } from '../DappOracleCallput';\nimport { DappWaitingPut } from '../DappWaitingPut';\n\nexport type DappPutProps = {\n    put : DappPutI,\n    index : number,\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (reducer : reduceContractFunctionI)=>void\n    end ? : boolean\n}\n\nexport const DappPut : FC<DappPutProps>  = ({\n    put,\n    index,\n    contractFunction,\n    reduceContractFunction,\n    end\n}) =>{\n\n    switch(put.putType){\n\n        case (\"input\") :{\n\n            return (\n                <DappInput   \n                dappInput={put as DappInputI} \n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"output\") :{\n\n            return (\n                <DappOutput \n                dappOutput={put as DappOutputI} \n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"error\") : {\n\n            return (\n                <DappErrput \n                dappErrput={put as DappErrputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"callput\") : {\n            return (\n                <DappOracleCallput\n                    dappOracleCallput={put as DappCallputI}\n                    contractFunction={contractFunction}\n                    reduceContractFunction={reduceContractFunction}\n                />\n            )\n        }\n\n        case (\"interactive\") : {\n\n            return (\n                <DappInteractput \n                dappInteractput={put as DappInteractputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"oracle\") : {\n            \n            return (\n                <DappOracleput \n                dappOracleput={put as DappOracleputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n\n        }\n\n        case (\"result\") : {\n            return (\n                <DappResultput \n                dappResultput={put as DappResultputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n        }\n\n        case (\"oracle-input\") : {\n            return (\n                <DappOracleInput \n                index={index}\n                dappOracleInput={put as DappOracleInputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n        }\n\n        case (\"waiting\") : {\n            return (\n                <DappWaitingPut\n                    dappWaitingPut={put as DappWaitingPutI}\n                    contractFunction={contractFunction}\n                    reduceContractFunction={reduceContractFunction}\n                />\n            )\n        }\n\n        default : {\n            return (\n                <DappDescput \n                dappDescput={put as DappDescputI}\n                contractFunction={contractFunction}\n                reduceContractFunction={reduceContractFunction}/>\n            )\n        }\n\n    }\n\n}","import React, {FC, ReactElement, useReducer} from 'react';\nimport { DappDescputI, DappOracleInputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI, DappCallputI, DappWaitingPutI } from '../DappPut/DappPutType';\n\nexport interface reduceContractFunctionI {\n    (state : OpenContractFunctionI) : OpenContractFunctionI\n}\n\nexport const allPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg && (typeof obj[key] === \"string\")\n    }, true)\n}\n\nexport const countPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg + (typeof obj[key] === \"string\" ? 1 : 0)\n    }, 0)\n}\n\nexport const createInputs = (\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappInputI[]=>{\n    return contractFunction.inputs.map((input)=>{\n        return {\n            ...input,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"input\"\n        } as DappInputI\n    })\n}\n\nexport const createErrors = (\n    errors : OpenContractFunctionI[\"errors\"], \n    resetArgs : DappErrputI[\"resetArgs\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappErrputI[]=>{\n    return errors ? errors.map((error)=>{\n\n        \n\n        return {\n            ...error,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"error\",\n            resetArgs : resetArgs\n        }\n    }) : []\n}\n\nexport const createXpras = (\n    xpras : OpenContractFunctionI[\"xpras\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappInteractputI[]=>{\n    return xpras ? xpras.map((xpra)=>{\n        return {\n            ...xpra,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"interactive\"\n        } \n    }) : []\n}\n\nexport const createOutputs = (\n    prints : OpenContractFunctionI[\"prints\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void,\n) : DappOutputI[]=>{\n    return prints ? prints.map((print)=>{\n        return {\n            ...print,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction,\n            putType : \"output\"\n        } \n    }) : []\n}\n\nexport const createOracleInputs = (\n    inputs : OpenContractFunctionI[\"oracleInputs\"],\n    contractFunction : OpenContractFunctionI,\n    resolve : (message : string)=>void,\n    reject : (message : string)=>void,\n    reduceContractFunction : (func : reduceContractFunctionI)=>void,\n    index : number\n) : DappOracleInputI[]=>{\n    return inputs ? Object.keys(inputs).map((key, i)=>{\n        return {\n            ...inputs[key],\n            name : index.toString(),\n            value : inputs[key].prompt,\n            resolve : resolve,\n            reject : reject,\n            putType : \"oracle-input\",\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction\n        } \n    }) : []\n}\n\nexport const createOracleData = (\n    contractFunction : OpenContractFunctionI,\n    setFunc ? : (func : reduceContractFunctionI)=>void\n) : DappOracleputI=>{\n\n    return {\n        name : \"Oracle data\",\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        putType : \"oracle\",\n    } as DappOracleputI\n\n}\n\nexport const createOracleCallPut = (\n    call : DappCallputI[\"call\"],\n    contractFunction : OpenContractFunctionI,\n    setFunc : (func : reduceContractFunctionI)=>void\n) : DappCallputI=>{\n    return {\n        call : call,\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        name : contractFunction.name,\n        putType : \"callput\",\n        value : \"\"\n    }\n}\n\nexport const createResult = (\n    data : any,\n    contractFunction : OpenContractFunctionI,\n    setFunc : (func : reduceContractFunctionI)=>void\n) : DappResultputI=>{\n    \n    return {\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        name : \"Result\",\n        value : data,\n        putType : \"result\"\n    }\n}\n\nexport const getContractFunctionInputs = (puts : DappPutI[])=>{\n    return puts.filter((put)=>{\n        return put.putType === \"input\";\n    });\n}\n\nexport const resetInputs = (inputs : OpenContractFunctionI[\"inputs\"])=>{\n    return inputs.map((value)=>{\n        return {\n            ...value,\n            value : undefined\n        }\n    })\n}\n\nexport const resetInputPuts = (puts : OpenContractFunctionI[\"puts\"])=>{\n    return puts?.map((put)=>{\n        return {\n            ...put,\n            value : put.putType === \"input\" ? undefined : put.value\n        }\n    })\n}\n\nexport const produceUpdatedPuts = (\n    puts : OpenContractFunctionI[\"puts\"],\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void\n) : DappPutI[]=>{\n    return (puts||[]).map((put)=>{\n        return {\n            ...put,\n            contractFunction : contractFunction,\n            reduceContractFunction : reduceContractFunction\n        } as DappPutI\n    })\n}\n\nexport const createWaitingPut = (\n    seconds : number,\n    message : string,\n    contractFunction : OpenContractFunctionI,\n    setFunc : (func : reduceContractFunctionI)=>void\n) : DappWaitingPutI=>{\n    return {\n        contractFunction : contractFunction,\n        reduceContractFunction : setFunc,\n        name : contractFunction.name,\n        value : message,\n        message : message,\n        duration : seconds,\n        putType : \"waiting\",\n        type : \"waiting\",\n        timeStarted : new Date()\n    }\n}\n\nexport const removeWaitingPut = (\n    reduceContractFunction ? : (func : reduceContractFunctionI)=>void\n)=>{\n\n    reduceContractFunction&& reduceContractFunction((state)=>{\n        return {\n            ...state,\n            puts : state.puts && state.puts.filter((put)=>{\n                return put.putType !== \"waiting\"\n            })\n        }\n    })\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes, Shadows } from '../../Theme';\nimport { DappInputHeader } from '../DappPut/DappInput/DappInputHeader';\nimport { TextInputApollo } from '../../Components/TextInput';\nimport * as pure from \"./StateMethods\";\nimport { DefaultHeader } from '../DappPut/Standards';\n\nexport type DappFunctionLogRunButtonProps = {\n    contractFunction : OpenContractFunctionI,\n    reduceContractFunction : (contractFunction : pure.reduceContractFunctionI)=>void,\n}\n\nexport const DappFunctionLogRunButton : FC<DappFunctionLogRunButtonProps>  = ({\n    contractFunction,\n    reduceContractFunction\n}) =>{\n\n    const searchParams = new URLSearchParams(window.location.search);\n\n    const inputs = pure.createInputs(\n        contractFunction,\n        reduceContractFunction\n    ).map((input, index)=>{\n\n       const _input = searchParams.get(`i.${contractFunction.name}.${input.name}`);\n       const val = _input && decodeURI(_input);\n\n       if(!input.value && val){\n           reduceContractFunction((contractFunction)=>{\n            const newInput =  {\n                ...contractFunction.inputs[index],\n                value : val\n            };\n            return  {\n                ...contractFunction,\n                inputs : [\n                    ...contractFunction.inputs.slice(0, index),\n                    newInput,\n                    ...contractFunction.inputs.slice(index + 1)\n                ]\n            };\n           })\n       }\n\n        const onTextInput = (text : string)=>{\n      \n            reduceContractFunction((contractFunction)=>{\n                \n                const newInput =  {\n                    ...contractFunction.inputs[index],\n                    value : text\n                };\n                const newC = {\n                    ...contractFunction,\n                    inputs : [\n                        ...contractFunction.inputs.slice(0, index),\n                        newInput,\n                        ...contractFunction.inputs.slice(index + 1)\n                    ]\n                };\n                searchParams.set(\n                    `${contractFunction.name}.${input.name}`,\n                    text\n                );\n\n                window.history.pushState({\n                    path : `/?${searchParams.toString()}/${window.location.hash}`\n                }, '', `/?${searchParams.toString()}/${window.location.hash}`)\n\n                return newC;\n            });\n        }\n\n        \n\n        return (\n                    <><div \n                    key={`${index}-${input.name}`}\n                    style={{\n                        alignContent : 'center',\n                        alignItems : \"center\",\n                        paddingBottom : DesktopSizes.Padding.standard,\n                        lineHeight : \"18px\"\n                    }}>\n                        <DappInputHeader dappInput={input} style={{\n                            fontSize : \"16px\",\n                        }}/>\n                        <div style={{\n                            display : \"flex\",\n                            color : Colors.secondaryTextColor,\n                            alignContent : \"center\",\n                            alignItems : \"center\",\n                            fontSize : \"16px\"\n                        }}>\n                           &emsp;<span style={{\n                               fontSize : \"16px\"\n                           }}>=&emsp;</span><TextInputApollo\n                            value={input.value||val||\"\"}\n                            onTextInput={onTextInput}\n                            style={{\n                                fontSize : \"16px\"\n                           }}/>\n                        </div>\n                    </div><br/></>\n                )\n         \n    });\n\n    return (\n             <div style={{\n                position : \"relative\",\n            }}>\n                <div\n                    style={{\n                        width : \"100%\",\n                        borderTopLeftRadius : DesktopSizes.BorderRadius.standard,\n                        borderTopRightRadius : DesktopSizes.BorderRadius.standard,\n                        borderBottomLeftRadius : DesktopSizes.BorderRadius.standard,\n                        borderBottomRightRadius : DesktopSizes.BorderRadius.standard,\n                        background : 'white',\n                        boxShadow : Shadows.defaultShadow,\n                        padding :  \"20px\"\n                    }}>\n                    <div style={{\n                        color : Colors.Maintheme\n                    }}>\n                        <DefaultHeader dappPut={{\n                            name : \"Inputs\",\n                            putType : \"Inputs\",\n                            value : \"any\",\n                            contractFunction : {} as OpenContractFunctionI,\n                            reduceContractFunction : ()=>{} \n                        }}>\n                            <DefaultHeader.Pre>\n                            𝑥\n                            </DefaultHeader.Pre>\n                        </DefaultHeader>\n                        <div style={{\n                            paddingLeft : DesktopSizes.Padding.whitespacePreferred\n                        }}>\n                            {inputs}\n                        </div>\n                    </div>\n                </div>\n            </div>\n       \n      \n\n    )\n\n}","import React, {FC, ReactElement, useState, useEffect, useReducer} from 'react';\nimport { AthenaButton, PredicateButton } from '../../Components/Buttons';\nimport { useOpenContractContext } from '../../Models';\nimport { Colors } from '../../Theme';\nimport { lightenStandard, darkenStandard } from '../DappPut/Methods';\nimport * as pure from \"./StateMethods\";\n\n\nexport type DappFunctionSubmitStateProps = {\n    contractFunction : OpenContractFunctionI,\n    call : ()=>Promise<any>,\n    loadOracleData : ()=>Promise<{[key : string] : string}>,\n    reduceContractFunction :  (contractFunction : pure.reduceContractFunctionI)=>void\n}\n\nexport const DappFunctionSubmitState : FC<DappFunctionSubmitStateProps>  = ({\n    contractFunction,\n    call,\n    loadOracleData,\n    reduceContractFunction\n}) =>{\n\n    const map = contractFunction.oracleData||{};\n    const resolved = pure.allPromisesResolved(map);\n    const count = pure.countPromisesResolved(map);\n    const {openContract} = useOpenContractContext();\n    \n    const resetLog = ()=>{\n        setCalled(false);\n        reduceContractFunction((state)=>{\n            const _state = {\n                ...state,\n                // inputs : pure.resetInputs(state.inputs),\n                puts : [],\n                oracleData : undefined\n            }\n            \n            return _state;\n        })\n    }\n    \n    const [called, setCalled] = useState(false);\n    const handleCall = async ()=>{\n        setCalled(true);\n        return await call();\n    }\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            justifyContent : \"right\",\n            justifyItems : \"right\",\n            fontSize : \"18px\",\n        }}>\n            <AthenaButton\n            onClick={resetLog}\n            primaryColor={Colors.failedRed}\n            secondaryColor={\"white\"}>\n                    Reset\n            </AthenaButton>\n            &emsp;\n            <PredicateButton \n            Warning={<div>You need to <a>connect your wallet</a>.</div>}\n            disabled={!(openContract && openContract.walletConnected)}\n            invert\n            style={{\n                fontSize : \"18px\"\n            }}\n            action={handleCall}\n            primaryColor={Colors.Maintheme}\n            secondaryColor={\"white\"}>\n                Call function\n            </PredicateButton>\n        </div>\n\n    )\n\n}","import React, {FC, PureComponent, ReactElement, useReducer} from 'react';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { DappI, parseGitUrl } from '../Dapp/Dapp';\nimport { DappDescput, DappInput, DappInteractput, DappPut } from '../DappPut';\nimport { DappDescputI, DappOracleInputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI } from '../DappPut/DappPutType';\nimport {to} from \"await-to-js\";\nimport { useEffect } from 'react';\nimport {DappFunctionLogRunButton} from \"./DappFunctionLogRunButton\";\nimport {DappFunctionSubmitState} from \"./DappFunctionSubmitState\";\nimport {generate} from \"shortid\";\nimport * as log from \"./StateMethods\";\nimport { OpenContractFunctionReducer } from '../../Types';\nimport { useOpenContractContext } from '../../Models/OpenContract/OpenContractModelProvider';\nimport { useState } from 'react';\n\n\nexport type DappFunctionLogProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setFunctionState : OpenContractFunctionReducer\n}\n\n/**\n * Declared here, but the ClientError from the window will be used.\n */\nexport class ClientError extends Error {};\n\nexport const DappFunctionLog : FC<DappFunctionLogProps>  = ({\n    dapp,\n    contractFunction,\n    setFunctionState\n}) =>{\n\n    const {openContract} = useOpenContractContext();\n\n    const [tick, forceUpdate] = useReducer(x=>x+1, 0);\n\n    const resetArgs = (setFunctionState : (update : log.reduceContractFunctionI)=>void)=>{\n        setFunctionState((oc : OpenContractFunctionI)=>{\n            return {\n                ...oc,\n                inputs : log.resetInputs(oc.inputs)\n            }\n        })\n    };\n\n    const updatedPuts = log.produceUpdatedPuts(\n        contractFunction.puts,\n        contractFunction,\n        setFunctionState\n    );\n\n    const puts = updatedPuts.reduce((agg, put, index)=>{\n        return [\n            ...agg,\n            ...put.putType !== \"input\" ? [\n                (\n                    <div \n                        style={{\n                            paddingBottom : DesktopSizes.Padding.standard\n                        }}\n                        key={index}><DappPut \n                        key={`${index}-${tick}`} // this needs to be index to allow for updates, but...\n                        // we also need to inlcude an index \n                        contractFunction={contractFunction}\n                        reduceContractFunction={setFunctionState}\n                        end={index > (contractFunction.puts ? contractFunction.puts.length - 2 : -1)}\n                        index={index} put={put}/></div>\n                )\n            ] : []\n        ]\n    }, [] as React.ReactNode[])\n\n\n    const addOutput = (name : string, message : string)=>{\n        setFunctionState((contractFunctionState)=>{\n            const newOutput = {\n                name : name,\n                value : message\n            };\n            return {\n                ...contractFunctionState,\n                ...contractFunctionState.requiresOracle ? {\n                    result : \"Oracle output received! See below.\"\n                } : {},\n                waiting : false,\n                prints : [...contractFunctionState.prints||[], newOutput],\n                puts : [...contractFunctionState.puts||[], ...log.createOutputs(\n                    [newOutput],\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        });\n    }\n    contractFunction.printHandler = async (message : string)=>{\n        addOutput(\"Notification.\", message)\n    }\n\n    const [oracleInputCount, setOracleInputCount] = useState(0);\n    const addOracleInput = (\n        data : string,\n        resolve : (msg : string)=>void,\n        reject : (msg : string)=>void\n    )=>{\n        setFunctionState((contractFunction : OpenContractFunctionI)=>{\n            \n            const newOracleInput = {\n                prompt : data,\n                response : undefined,\n                id : generate()\n            }\n            setOracleInputCount(oracleInputCount + 1);\n            return {\n                ...contractFunction,\n                waiting : false,\n                oracleInputs : {\n                    ...contractFunction.oracleInputs, \n                    [newOracleInput.id] : newOracleInput\n                },\n                puts : [...contractFunction.puts||[], ...log.createOracleInputs(\n                    {\n                        [newOracleInput.id] : newOracleInput\n                    },\n                    contractFunction,\n                    resolve,\n                    reject,\n                    setFunctionState,\n                    oracleInputCount\n                )]\n            }\n        });\n    };\n    useEffect(()=>{\n        contractFunction.inputHandler = async (message : string)=>{\n            return new Promise((resolve, reject)=>{\n                addOracleInput(message, resolve, reject);\n                forceUpdate();\n            })\n        }\n    })\n\n    const addError = (e : Error)=>{\n        setFunctionState((contractFunction : OpenContractFunctionI)=>{\n            const newError = {\n                ...e,\n                value : e.message\n            }\n            return {\n                ...contractFunction,\n                waiting : false,\n                errors : [...contractFunction.errors||[], newError],\n                puts : [...(contractFunction.puts||[]), ...log.createErrors(\n                    [newError], \n                    resetArgs,\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        });\n    }\n\n    contractFunction.errorHandler = async (e : Error)=>{\n        addError(e);\n    };\n\n    const addOracleData = (\n        data : OpenContractFunctionI[\"oracleData\"], \n        resolve : OpenContractFunctionI[\"oraclePromiseResolve\"],\n        reject : OpenContractFunctionI[\"oraclePromiseReject\"]\n    )=>{\n        \n        setFunctionState((contractFunction)=>{\n           return {\n            ...contractFunction,\n            waiting : false,\n            oracleData : {\n                ...contractFunction.oracleData,\n                ...data\n            },\n            oraclePromiseResolve : resolve,\n            oraclePromiseReject : reject\n           }\n        })\n\n    }\n\n    const addResult = (data : OpenContractFunctionI[\"result\"])=>{\n\n        \n\n        setFunctionState((contractFunction : OpenContractFunctionI)=>{\n            return {\n                ...contractFunction,\n                result : data,\n                puts : [...contractFunction.puts||[], log.createResult(\n                    data,\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        });\n\n    }\n\n    const [oracleStates, setOracleStates] = useReducer(\n        (\n            state : OpenContractFunctionI[\"oracleData\"], \n            set : (data : OpenContractFunctionI[\"oracleData\"])=>OpenContractFunctionI[\"oracleData\"]\n        )=>set(state),\n        contractFunction.oracleData\n    );\n    useEffect(()=>{\n        if(\n            oracleStates !== undefined\n            && log.allPromisesResolved(oracleStates) \n            && contractFunction.oracleData !== oracleStates\n        ){\n            contractFunction.oraclePromiseResolve && contractFunction.oraclePromiseResolve(oracleStates as any);\n            addOracleData(\n                oracleStates,\n                undefined,\n                undefined\n            );\n        }\n    }, [oracleStates])\n\n    const loadOracleData = async () : Promise<{[key : string] : string}>=>{\n\n        const [error, data]= await to<{[key : string] : Promise<string>}>(window.githubOracleDownloader(\n            dapp.owner || \"\",\n            dapp.repo || \"\",\n            dapp.branch || \"main\",\n            contractFunction.oracleFolder\n        ));\n\n        if(error){\n            addError(\n                new ClientError(\"Oracle data unavailable.\"),\n            )\n        }\n        return new Promise((resolve, reject)=>{\n            if(data){\n                Object.keys(data).map((key)=>{\n                    if((data[key] as Promise<string>).then){\n                        (data[key] as Promise<string>).then((data)=>{\n                            setOracleStates((oracleData)=>({\n                                ...oracleData,\n                                [key] : data\n                            }))\n                        }).catch(()=>{\n                            contractFunction.oraclePromiseReject && \n                            contractFunction.oraclePromiseReject(); \n                        })\n                    }\n                })\n            };\n            addOracleData(\n                data||{} as any,\n                resolve,\n                reject\n            );\n            if(error){\n                addError(new ClientError(\"GitHub download failed.\"));\n                reject();\n            }\n        })\n\n    }\n\n    const addOracleCallput = (call : ()=>Promise<void>)=>{\n        setFunctionState((contractFunction)=>{\n            return {\n                ...contractFunction,\n                waiting : false,\n                callOracle : call,\n                puts : [...contractFunction.puts||[], log.createOracleCallPut(\n                    call,\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        })\n    }\n\n    const handleSubmit = async (call : ()=>Promise<void>)=>{\n        \n        addOracleCallput(call);\n    }\n    contractFunction.submitHandler = handleSubmit;\n\n    const handleCall = async ()=>{\n\n       return new Promise((resolve, reject)=>{\n\n            if(contractFunction.requiresOracle){\n\n                contractFunction.call().then((data)=>{\n                    resolve(data);\n                }).catch((err)=>{\n                    addError(err);\n                    resolve({});\n                })\n                return;\n            } \n            \n            contractFunction.call().then((data)=>{\n                \n                addResult(data);\n                resolve(data);\n            }).catch((err)=>{\n                addError(err);\n                resolve({});\n            })\n       })\n\n    }\n\n    const addInteractput = (name : string, targetUrl : string, sessionUrl : string, xpraExit : Promise<void>)=>{\n      setFunctionState((contractFunction)=>{\n        const newXpra : DappInteractputI =  {\n            name : name,\n            targetUrl : targetUrl,\n            sessionUrl : sessionUrl,\n            xpraExit : xpraExit,\n            description : \"\",\n            value : \"\",\n            putType : \"interactive\",\n            contractFunction : contractFunction,\n            reduceContractFunction : setFunctionState\n        };\n        return {\n            ...contractFunction,\n            ...contractFunction.requiresOracle ? {\n                result : \"Oracle output received! See below.\"\n            } : {},\n            waiting : false,\n            xpras : [...contractFunction.xpras||[], newXpra],\n            puts : [...contractFunction.puts||[], ...log.createXpras(\n                [newXpra],\n                contractFunction,\n                setFunctionState\n            )]\n        }\n      });\n\n    }\n\n    contractFunction.xpraHandler = async (targetUrl, sessionUrl, xpraExit)=>{\n\n        addInteractput(\"Interactive session started.\", targetUrl, sessionUrl, xpraExit);\n\n    }\n\n    const addWaitingPut = (seconds : number, message : string)=>{\n\n        log.removeWaitingPut(setFunctionState);\n\n        setFunctionState((state)=>{\n            return {\n                ...state,\n                waiting : true,\n                puts : [...state.puts||[], log.createWaitingPut(\n                    seconds, \n                    message,\n                    contractFunction,\n                    setFunctionState\n                )]\n            }\n        })\n    }\n\n    contractFunction.waitHandler = async (seconds, message)=>{\n        addWaitingPut(seconds, message);\n    }\n\n    useEffect(()=>{\n        if(!contractFunction.waiting){\n            log.removeWaitingPut(setFunctionState);\n        }\n    }, [contractFunction.waiting]);\n\n    \n\n    return (\n\n        <>\n            <div style={{\n                width : \"100%\",\n                paddingBottom : DesktopSizes.Padding.standard,\n            }}>\n                {contractFunction.description && <div style={{\n                    paddingBottom : DesktopSizes.Padding.standard\n                }}>\n                    <DappDescput\n                    contractFunction={contractFunction}\n                    reduceContractFunction={setFunctionState}\n                    dappDescput={{\n                        name : \"Description\",\n                        value : contractFunction.description,\n                        putType : \"description\",\n                        contractFunction : contractFunction,\n                        reduceContractFunction : setFunctionState\n                    }}/>    \n                </div>}\n                {contractFunction.inputs.length > 0 && <div style={{\n                    paddingBottom : DesktopSizes.Padding.standard\n                }}>\n                    <DappFunctionLogRunButton\n                    reduceContractFunction={setFunctionState}\n                    contractFunction={contractFunction}\n                /></div>}\n                <div style={{\n                    paddingBottom : DesktopSizes.Padding.standard\n                }}>\n                    <DappFunctionSubmitState\n                        reduceContractFunction={setFunctionState}\n                        loadOracleData={loadOracleData}\n                        call={handleCall}\n                        contractFunction={contractFunction}\n                    />\n                </div>\n                {puts}\n                <br/>\n            </div>\n        </>\n\n    )\n\n}\n","import React, {FC, ReactElement} from 'react';\nimport { OpenContractFunctionReducer } from '../../Types';\nimport {DappI} from \"../Dapp\";\nimport { DappFunctionLog } from './DappFunctionLog';\n\nexport type DappFunctionAthenaProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setDappFunction : OpenContractFunctionReducer\n}\n\nexport const DappFunctionAthena : FC<DappFunctionAthenaProps>  = ({\n    dapp,\n    contractFunction,\n    setDappFunction\n}) =>{\n\n    return (\n\n        <DappFunctionLog setFunctionState={setDappFunction} dapp={dapp} contractFunction={contractFunction}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../../Theme';\nimport { OpenContractFunctionReducer } from '../../../Types';\nimport {DappI} from \"../../Dapp\";\nimport { DappFunctionAthena } from '../../DappFunction';\n\nexport type ApolloRunDappFunctionViewProps = {\n    dapp : DappI,\n    setDappFunction : OpenContractFunctionReducer\n    contractFunction ? : OpenContractFunctionI\n}\n\nexport const ApolloRunDappFunctionView : FC<ApolloRunDappFunctionViewProps>  = ({\n    dapp,\n    setDappFunction,\n    contractFunction\n}) =>{\n\n    return (\n\n        <div style={{\n            padding: DesktopSizes.Padding.standard\n        }}>\n            {contractFunction && \n                <DappFunctionAthena\n                dapp={dapp}\n                setDappFunction={setDappFunction}\n                contractFunction={contractFunction}/>\n            }\n            {!contractFunction && <h2>No function selected.</h2>}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { Coin, Github, InfoCircle, PatchCheckFill, PatchPlus } from 'react-bootstrap-icons';\nimport { PlayFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { DappI, } from '../Dapp';\nimport { ethers, providers } from 'ethers';\n\nexport type ApolloRunDappMainItemMobileActionsProps = {\n    gitUrl : string,\n    dapp : DappI\n}\n\nexport const ApolloRunDappMainItemMobileActions : FC<ApolloRunDappMainItemMobileActionsProps>  = ({\n    gitUrl,\n    dapp\n}) =>{\n\n    const handleGitHub = ()=>{\n        window.open(`https://github.com/${dapp.owner}/${dapp.repo}/tree/${dapp.branch}`);\n    }\n\n    const getTokens = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).getOPN('3')\n        }\n    }\n\n    const approveHub = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).approveOPN('3')\n        }\n    }\n\n\n    return (\n\n        <div style={{\n        }}>\n            <p style={{\n                textAlign : \"left\"\n            }}>\n                <InfoCircle size={18}/>&emsp;If this is your first time here, you may need to&nbsp;<a\n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    getTokens();\n                }}>get some OPN</a>&nbsp;and&nbsp;<a\n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    approveHub();\n                }}>grant access to the Open Contracts hub</a>.\n            </p>\n            <br/>\n            <div style={{\n                display  : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                gap : DesktopSizes.Padding.standard\n            }}>\n                <AthenaButton \n                onClick={handleGitHub}\n                style={{\n                    width : \"100%\",\n                    border : \"none\"\n                }}\n                primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        See on GitHub&emsp;<Github/>\n                    </div>\n                </AthenaButton>\n                <AthenaButton\n                    style={{\n                        width : \"100%\",\n                        border : \"none\"\n                    }}\n                    action={getTokens}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        Get OPN&emsp;<Coin/>\n                    </div>\n                </AthenaButton>\n                <AthenaButton \n                    action={approveHub}\n                    style={{\n                        width : \"100%\",\n                        border : \"none\"\n                    }}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        Grant Hub Access&emsp;<PatchCheckFill/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n            </div>\n            <br/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName, getDappSolidityContract, getDappOracle, getDappImageUri, getDappReadMe, parseGitUrl, getDappContract } from '../Dapp';\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport {ApolloRunDappContent} from \"./ApolloRunDappContent\";\nimport { ApolloRunDappFunctionGridView } from './ApolloRunDappFunctionGridView';\nimport { ApolloRunDappFunctionView } from './ApolloRunDappFunctionView';\nimport { useErrorContext } from '../../../Error/ErrorProvider';\nimport { ApolloRunDappMainItemMobileActions } from './ApolloRunDappMainItemMobileActions';\nimport { OpenContractReducer } from '../../../Types';\n\n\nexport type ApolloRunDappMainItemMobileReadmeProps = {\n    style ? : React.CSSProperties,\n    readme : string | undefined\n}\n\nexport const ApolloRunDappMainItemMobileReadMe : FC<ApolloRunDappMainItemMobileReadmeProps> = ({\n    style,\n    readme\n})=>{\n\n    return (\n        <div style={{\n            ...style,\n            textAlign : 'left'\n        }}>\n            {!readme && <Skeleton width=\"100%\" count={5}/>}\n            {readme && <ReactMarkdown plugins={[remarkGfm]}>\n                {readme}    \n            </ReactMarkdown>}\n        </div>\n    )\n\n}\n\nexport type ApolloRunDappMainItemMobileInternalsProps = {\n    dappItem : DappI,\n    setDappItem : OpenContractReducer,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemMobileInternals : FC<ApolloRunDappMainItemMobileInternalsProps>  = ({\n    dappItem,\n    style,\n    setDappItem,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{\n\n    const _selectedFunc = dappItem.contract && dappItem.contract.contractFunctions ? \n                            dappItem.contract.contractFunctions.filter((func)=>{\n                                return func.name === which\n                            })[0] : undefined\n\n    const selectedFunc = _selectedFunc || (\n        dappItem.contract?.contractFunctions[0]\n    )\n\n    const setFunc = (set : (\n        contractFunction : OpenContractFunctionI\n    )=>OpenContractFunctionI)=>setDappItem((dappItem)=>{\n        return {\n            ...dappItem,\n            contract : dappItem.contract && {\n                ...dappItem.contract,\n                contractFunctions :  dappItem.contract.contractFunctions.reduce((agg, oldContractFunction)=>[\n                    ...agg,\n                    ...(which === oldContractFunction.name) ? [set(oldContractFunction)] : [oldContractFunction]\n                ], [] as OpenContractFunctionI[])\n            }\n        }\n    })\n\n    const handleWhich = (which : string)=>{\n        setGrid && setGrid(false);\n        setWhich && setWhich(which);\n    }\n\n    \n\n    return (\n\n        <div style={{\n            paddingTop : DesktopSizes.Padding.standard,\n            width : \"100%\",\n            // paddingBottom : DesktopSizes.Padding.whitespacePreferred,\n            ...style\n        }}>\n            <div>\n                <div style={{\n                    textAlign : \"left\",\n                    color : Colors.Maintheme\n                }}>\n                    <h1>{dappItem.contract ? dappItem.contract.contractName : \"\"}</h1>\n                    <ReactMarkdown plugins={[remarkGfm]}>\n                        {dappItem.contract ? dappItem.contract.contractDescription : \"\"}\n                    </ReactMarkdown>\n                </div>\n                <div>\n                    <ApolloRunDappMainItemMobileActions\n                        dapp={dappItem}\n                        gitUrl={dappItem.gitUrl}\n                    />\n                </div>\n                <ApolloRunDappContent which={which} grid={grid} setGrid={setGrid}>\n                    <ApolloRunDappContent.Grid>\n                        <ApolloRunDappFunctionGridView\n                            dapp={dappItem}\n                            setWhich={handleWhich}\n                            which={which}\n                        />\n                    </ApolloRunDappContent.Grid>\n                    <ApolloRunDappContent.Single>\n                        <ApolloRunDappFunctionView\n                            dapp={dappItem}\n                            setDappFunction={setFunc}\n                            contractFunction={selectedFunc}\n                        />\n                    </ApolloRunDappContent.Single>\n                </ApolloRunDappContent>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport type ApolloRunDappMainItemMobileProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp : OpenContractReducer,\n    forceLoad ? : boolean,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemMobile : FC<ApolloRunDappMainItemMobileProps>  = ({\n    dappItem,\n    style,\n    updateDapp,\n    which,\n    setWhich,\n    setGrid,\n    grid\n}) =>{\n\n    return (\n\n        <ApolloRunDappMainItemMobileInternals \n            setDappItem={updateDapp} \n            dappItem={dappItem} \n            grid={grid}\n            setGrid={setGrid}\n            which={which}\n            setWhich={setWhich}\n            style={style}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton, PredicateButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { Coin, Github, InfoCircle, PatchCheckFill, PatchPlus } from 'react-bootstrap-icons';\nimport { PlayFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { DappI, parseGitUrl } from '../Dapp';\nimport { ethers, providers } from 'ethers';\nimport { useOpenContractContext } from '../../../Models/OpenContract/OpenContractModelProvider';\n\nexport type ApolloRunDappMainItemActionsProps = {\n    gitUrl : string,\n    dapp : DappI\n}\n\nexport const ApolloRunDappMainItemActions : FC<ApolloRunDappMainItemActionsProps>  = ({\n    gitUrl,\n    dapp\n}) =>{\n\n    const {openContract} = useOpenContractContext();\n\n    const handleGitHub = ()=>{\n        window.open(`https://github.com/${dapp.owner}/${dapp.repo}/tree/${dapp.branch}`);\n    }\n\n    const getTokens = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).getOPN('3')\n        }\n    }\n\n    const approveHub = async ()=>{\n        if(dapp.contract){\n            await (dapp.contract as any).approveOPN('3')\n        }\n    }\n\n    const Warning = <div>You need to <a>connect your wallet.</a></div>;\n\n    return (\n\n        <div style={{\n        }}>\n            <p style={{\n                textAlign : \"left\"\n            }}>\n                <InfoCircle size={18}/>&emsp;If this is your first time here, you may need to&nbsp;<a \n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    getTokens()\n                }}>get some OPN</a>&nbsp;and&nbsp;<a \n                href=\"#\" \n                onClick={(e)=>{\n                    e.preventDefault();\n                    approveHub();\n                }}>grant access to the Open Contracts hub</a>.\n            </p>\n            <br/>\n            <div style={{\n            display : \"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n            }}>\n                <AthenaButton \n                style={{\n                    border : \"none\",\n                }}\n                onClick={handleGitHub}\n                primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        See on GitHub&emsp;<Github/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n                <PredicateButton\n                    disabled={!(openContract && openContract.walletConnected)}\n                    Warning={Warning}\n                    style={{\n                        border : \"none\",\n                    }}\n                    action={getTokens}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        Get OPN&emsp;<Coin/>\n                    </div>\n                </PredicateButton>\n                &emsp;\n                <PredicateButton\n                    disabled={!(openContract && openContract.walletConnected)}\n                    Warning={Warning}\n                    style={{\n                        border : \"none\",\n                    }}\n                    action={approveHub}\n                    primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        Grant Hub Access&emsp;<PatchCheckFill/>\n                    </div>\n                </PredicateButton>\n                &emsp;\n            </div>\n            <br/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName,  getDappContract } from '../Dapp';\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport {ApolloRunDappContent} from \"./ApolloRunDappContent\";\nimport { ApolloRunDappFunctionGridView } from './ApolloRunDappFunctionGridView';\nimport { ApolloRunDappFunctionView } from './ApolloRunDappFunctionView';\nimport { ApolloRunDappMainItemActions } from './ApolloRunDappMainItemActions';\nimport { OpenContractReducer, OpenContractFunctionReducer } from '../../../Types';\n\n\n\nexport type ApolloRunDappMainItemReadmeProps = {\n    style ? : React.CSSProperties,\n    readme : string | undefined\n}\n\nexport const ApolloRunDappMainItemReadMe : FC<ApolloRunDappMainItemReadmeProps> = ({\n    style,\n    readme\n})=>{\n\n    return (\n        <div style={{\n            ...style,\n            textAlign : 'left'\n        }}>\n            {!readme && <Skeleton width=\"100%\" count={5}/>}\n            {readme && <ReactMarkdown plugins={[remarkGfm]}>\n                {readme}    \n            </ReactMarkdown>}\n        </div>\n    )\n\n}\n\nexport type ApolloRunDappMainItemInternalsProps = {\n    dappItem : DappI,\n    setDappItem : OpenContractReducer,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemInternals : FC<ApolloRunDappMainItemInternalsProps>  = ({\n    dappItem,\n    style,\n    setDappItem,\n    grid,\n    setGrid, \n    which,\n    setWhich\n}) =>{\n\n    const _selectedFunc = dappItem.contract && dappItem.contract.contractFunctions ? \n                            dappItem.contract.contractFunctions.filter((func)=>{\n                                return func.name === which\n                            })[0] : undefined\n\n    const selectedFunc = _selectedFunc || (\n        dappItem.contract?.contractFunctions[0]\n    )\n\n    const setFunc = (set : (\n        contractFunction : OpenContractFunctionI\n    )=>OpenContractFunctionI)=>setDappItem((dappItem)=>{\n        return {\n            ...dappItem,\n            contract : dappItem.contract && {\n                ...dappItem.contract,\n                contractFunctions :  dappItem.contract.contractFunctions.reduce((agg, oldContractFunction)=>[\n                    ...agg,\n                    ...(which === oldContractFunction.name) ? [set(oldContractFunction)] : [oldContractFunction]\n                ], [] as OpenContractFunctionI[])\n            }\n        }\n    })\n\n\n    const handleWhich = (which : string)=>{\n        setGrid && setGrid(false);\n        setWhich && setWhich(which);\n    }\n\n    return (\n\n        <div style={{\n            width : \"100%\",\n            ...style\n        }}>\n            <div>\n                <div style={{\n                    textAlign : \"left\",\n                    color : Colors.Maintheme\n                }}>\n                    <h1>{dappItem.contract ? dappItem.contract.contractName : \"\"}</h1>\n                    <ReactMarkdown plugins={[remarkGfm]}>\n                        {dappItem.contract ? dappItem.contract.contractDescription : \"\"}\n                    </ReactMarkdown>\n                </div>\n                <div>\n                    <ApolloRunDappMainItemActions\n                        dapp={dappItem}\n                        gitUrl={dappItem.gitUrl}\n                    />\n                </div>\n                <ApolloRunDappContent \n                    which={selectedFunc ? selectedFunc.name : \"\"}\n                    grid={grid} setGrid={setGrid}>\n                    <ApolloRunDappContent.Grid>\n                        <ApolloRunDappFunctionGridView\n                            dapp={dappItem}\n                            setWhich={handleWhich}\n                            which={which}\n                        />\n                    </ApolloRunDappContent.Grid>\n                    <ApolloRunDappContent.Single>\n                        <ApolloRunDappFunctionView\n                            dapp={dappItem}\n                            setDappFunction={setFunc}\n                            contractFunction={selectedFunc}\n                        />\n                    </ApolloRunDappContent.Single>\n                </ApolloRunDappContent>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport type ApolloRunDappMainItemProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp : OpenContractReducer,\n    forceLoad ? : boolean,\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItemDesktop : FC<ApolloRunDappMainItemProps>  = ({\n    dappItem,\n    style,\n    updateDapp,\n    grid,\n    setGrid,\n    setWhich,\n    which\n}) =>{\n\n    return (\n\n        <ApolloRunDappMainItemInternals \n        setWhich={setWhich}\n        which={which}\n        grid={grid}\n        setGrid={setGrid}\n        setDappItem={updateDapp} dappItem={dappItem} style={style}/>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport {ApolloRunDappMainItemMobile} from \"./ApolloRunDappMainItemMobile\";\nimport {ApolloRunDappMainItemDesktop} from \"./ApolloRunDappMainItemDesktop\";\nimport { useErrorContext } from '../../../Error/ErrorProvider';\nimport { ApolloRunDappMainItemActions } from './ApolloRunDappMainItemActions';\nimport { MediaResponsive } from '../../../Sytems';\nimport { DappI, getDappName,  getDappContract } from '../Dapp';\nimport { OpenContractReducer } from '../../../Types';\n\nexport type ApolloRunDappMainItemProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    updateDapp : OpenContractReducer,\n    grid : boolean,\n    setGrid : (grid : boolean)=>void,\n    which : string,\n    setWhich : (which : string)=>void\n}\n\nexport const ApolloRunDappMainItem : FC<ApolloRunDappMainItemProps>  = (props) =>{\n\n    document.title = props.dappItem.name || \"Open Contracts - Run\";\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <ApolloRunDappMainItemDesktop \n                grid={props.grid}\n                setGrid={props.setGrid}\n                which={props.which}\n                setWhich={props.setWhich}\n                style={props.style}\n                dappItem={props.dappItem}\n                updateDapp={props.updateDapp}\n             />\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <ApolloRunDappMainItemDesktop \n                    grid={props.grid}\n                    setGrid={props.setGrid}\n                    which={props.which}\n                    setWhich={props.setWhich}\n                    style={props.style}\n                    dappItem={props.dappItem}\n                    updateDapp={props.updateDapp}\n                />\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <ApolloRunDappMainItemMobile\n                    grid={props.grid}\n                    setGrid={props.setGrid}\n                    which={props.which}\n                    setWhich={props.setWhich}\n                    style={props.style}\n                    dappItem={props.dappItem}\n                    updateDapp={props.updateDapp}\n                />\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <ApolloRunDappMainItemMobile\n                    grid={props.grid}\n                    setGrid={props.setGrid}\n                    which={props.which}\n                    setWhich={props.setWhich}\n                    style={props.style}\n                    dappItem={props.dappItem}\n                    updateDapp={props.updateDapp}\n                    />\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { DappI } from '../../Items';\nimport { ApolloRunDappMainItem } from '../../Items/Dapp/ApolloDapp/ApolloRunDappMainItem';\nimport { OpenContractReducer } from '../../Types';\n\nexport type RunBenchDesktopProps = {\n    dapp  : DappI,\n    setDapp : OpenContractReducer,\n    grid : boolean,\n    setGrid : (grid : boolean)=>void,\n    which : string,\n    setWhich : (which : string)=>void\n}\n\nexport const RunBenchDesktop : FC<RunBenchDesktopProps>  = ({\n    dapp, \n    setDapp,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{\n\n    return (\n            <ApolloRunDappMainItem \n            grid={grid}\n            setGrid={setGrid}\n            which={which}\n            setWhich={setWhich}\n            dappItem={dapp} updateDapp={setDapp} />\n       \n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { DappI } from '../../Items';\nimport { OpenContractReducer } from '../../Types';\n\nexport type RunPageWithRepoProps = {\n    dapp : DappI,\n    setDapp : OpenContractReducer,\n    grid : boolean,\n    setGrid : (grid : boolean)=>void,\n    which : string,\n    setWhich : (which : string)=>void\n}\n\nexport const RunPageWithRepo : FC<RunPageWithRepoProps>  = ({\n    dapp,\n    setDapp,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{\n\n    return (<RunBenchDesktop \n        grid={grid}\n        setGrid={setGrid}\n        which={which}\n        setWhich={setWhich}\n        dapp={dapp} setDapp={setDapp}/>)\n\n}","import { Octokit } from \"@octokit/rest\";\nimport to from \"await-to-js\";\nimport {fromByteArray} from \"base64-js\";\nconst { createPullRequest } = require(\"octokit-plugin-create-pull-request\");\n\nexport const MyOctokit = Octokit.plugin(createPullRequest);\nexport const octokit = new MyOctokit({\n    auth : process.env.REACT_APP_GITHUB_TOKEN\n});\n\nexport const getSha = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    const { data: { sha } } = await octokit.request(`GET /repos/${args.owner}/${args.repo}/contents/${args.path}`);\n\n    return sha\n}\n\nexport const getFileBlob = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    return await octokit.rest.git.getBlob({\n        owner : args.owner,\n        repo : args.repo,\n        file_sha : await getSha({\n            owner : args.owner,\n            repo : args.repo,\n            path : args.path\n        })\n    })\n\n}\n\n/**\n * https://stackoverflow.com/questions/30106476/using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\n * @param str \n * @returns \n */\nfunction b64DecodeUnicode(str : string) {\n    return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n    }).join(''))\n}\n\nexport const getFileText = async (args : {\n    owner : string,\n    repo : string,\n    branch ? : string\n    path : string\n}) : Promise<string>=> {\n\n    const [error, text] = await to(\n        (await fetch(`https://raw.githubusercontent.com/${args.owner}/${args.repo}/${args.branch||\"main\"}/${args.path}`)).text()\n    )\n\n    if(error){\n        throw error;\n    }\n\n    return text as string;\n\n}","import { getFileBlob, getFileText, getSha, octokit } from \"../../Sytems/Octokit\";\nimport {to} from \"await-to-js\";\n\nexport interface DappDataI {\n    name : string,\n    readme : string,\n    oracle : string,\n    appTile : string,\n    contract : IOpenContract,\n    openContractsInterface : OpenContractsInterfaceI,\n    dappInterface : IOpenContractnterfaceI\n}\n\nexport interface DappI extends Partial<DappDataI>{\n    __isDapp__ : true\n    id : string\n    gitUrl : string,\n    owner : string,\n    repo : string,\n    branch : string,\n    // loaded : boolean\n}\n\nexport const isDapp = (obj : any) : obj is DappI => {\n\n    return obj.__isDapp__;\n\n}\n\nexport const parseGitUrl = (url : string) : {\n    owner : string |undefined,\n    repo : string | undefined,\n    branch : string | undefined\n}=>{\n\n    const _indexCom = url.indexOf(\".com\");\n    const indexCom = _indexCom > 0 ? _indexCom + 4 : 0;\n    const substr = url.substring(indexCom).trim().replace(/^\\/*|-\\/*$/, \"\");\n\n    const split = substr.split(\"/\");\n\n    \n\n    return {\n        owner : split.length ? split[0] : undefined,\n        repo : split.length > 1 ? split[1] : undefined,\n        branch : split.length > 2 ? split[2] : undefined\n    }\n    \n\n}\n\nconst README = 'README.md';\n\nexport const parseName = (readme : string)=>{\n\n    const lines = readme.split(\"\\n\");\n    return lines.length ? \n                    lines[0].replace(/(\\W|\\s)/, \"\").trim()\n                    : \"Unnamed\"\n\n\n}\n\nexport const getDappName = async (dapp : DappI, onGet ? : (name : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    \n\n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n    const name = parseName(readme||\"\");\n\n    onGet && onGet(name);\n\n    return name;\n\n}\n\nexport const isDescriptionLine = (line : string)=>{\n\n    return (\n        line.length < 1 ||\n        line[0] !== \"#\"\n    )\n\n}\n\nexport const getDescriptionLines = (readme : string) : [number, number]=>{\n\n    const lines = readme.split(\"\\n\");\n\n    if(lines.length < 2){\n        return [-1, -1];\n    }\n\n    if(!isDescriptionLine(lines[1])){\n        return [-1, -1];\n    }\n\n    let i = 1;\n    while(i < lines.length && isDescriptionLine(lines[i])) ++i;\n\n    return [1, i];\n\n}\n\nexport const parseDescription = (readme : string) : string=>{\n\n    const descriptionLines = getDescriptionLines(readme);\n\n    return readme.split(\"\\n\").slice(descriptionLines[0], descriptionLines[1] + 1).join(\"\\n\");\n\n}\n\nexport const getDescription = async (dapp : DappI, onGet ? : (description : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n\n    const description = parseDescription(readme||\"\");\n\n\n    onGet && onGet(description);\n\n    return description;\n\n}\n\nexport const SOLIDITY = \"contract.sol\";\n\nexport const getDappSolidityContract = async (dapp : DappI, onGet ? : (contract : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, contract] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : SOLIDITY\n    })) : [undefined, \"\"];\n\n    if(err) throw err;\n\n    onGet && onGet(contract||\"\");\n\n    return contract||\"\";\n\n}\n\nexport const ORACLE = \"oracle.py\";\n\nexport const getDappOracle = async (dapp : DappI, onGet ? : (oracle : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const oracle = owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : ORACLE\n    }) : \"\";\n\n    onGet && onGet(oracle);\n\n    return oracle;\n\n}\n\nexport const APPTILE = \"tile\";\n\nexport const imageUriFromRepoAndOwner = (args : {\n    owner : string,\n    repo : string,\n    branch ? : string\n    type : string\n})=>{\n\n    return `https://raw.githubusercontent.com/${args.owner}/${args.repo}/${args.branch||\"main\"}/${APPTILE}.${args.type}`\n\n}\n\nexport const getDappImageUri = async (dapp : DappI, onGet ? : (imageUri : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    let uri =  \"\";\n    try {\n\n        const ext = \"png\";\n\n        await getFileBlob({\n            owner : owner||\"\",\n            repo : repo||\"\",\n            path : `${APPTILE}.${ext}`\n        })\n\n        uri = owner && repo ? imageUriFromRepoAndOwner({\n            owner : owner,\n            repo : repo,\n            type : ext\n        })  : \"\"\n\n    \n\n    } catch(e){\n\n        try {\n\n            const ext = \"jpg\"\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n\n        } catch(e){\n\n            const ext = \"jpg\"\n\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n        }\n\n    } \n\n    onGet && onGet(uri);\n\n    return uri;\n\n}\n\nexport const getDappReadMe = async (dapp : DappI, onGet ? : (readme : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const readme = decodeURI(owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    }) : \"\");\n\n    onGet && onGet(readme);\n\n    return readme;\n\n}\n\nexport const jsonInterfacePath = \"interface.json\";\nexport const getDappInterface = async (\n    dapp : DappI,\n    onGet ? : (dappInterface : IOpenContractnterfaceI)=>void\n) : Promise<IOpenContractnterfaceI>=>{\n\n    const dappInterface = (dapp.owner && dapp.repo) ? JSON.parse(\n        await getFileText({\n            owner : dapp.owner,\n            repo : dapp.repo,\n            branch : dapp.branch,\n            path : jsonInterfacePath\n        })\n    ) : undefined\n\n    if(!dappInterface){\n        throw new Error(\"Failed to find a Dapp Interface.\");\n    }\n\n    onGet && onGet(dappInterface);\n\n    return dappInterface;\n\n}\n\nexport const ocInterfacePath = \"/client-protocol/opencontracts_interface.json\"\nexport const getOpenContractsInterface = async (\n    onGet ? : (dappInterface : OpenContractsInterfaceI)=>void\n) : Promise<OpenContractsInterfaceI>=>{\n\n    \n\n    const ocInterface = JSON.parse(await (await fetch(ocInterfacePath)).text())\n\n    if(!ocInterface){\n        throw new Error(\"Failed to find the Open Contracts interface for this site.\");\n    }\n\n    onGet && onGet(ocInterface);\n\n    return ocInterface;\n\n}\n\nexport const getDappContract = async (\n    dapp : DappI,\n    onGet ? : (contract : IOpenContract)=>void\n) : Promise<IOpenContract>=>{\n\n    const opencontract = await window.OpenContracts();\n    const openContractsInterface = dapp.openContractsInterface || await getOpenContractsInterface();\n    const contractLocation = `@git/${dapp.owner}/${dapp.repo}/${dapp.contract||\"main\"}`;\n    await opencontract.parseContracts(openContractsInterface, contractLocation);\n\n    onGet && onGet(opencontract);\n\n    return opencontract;\n\n}\n\nexport const getDappInfo = async (\n    dapp : DappI\n)=>{\n\n    \n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    return owner && repo && await octokit.rest.repos.get({\n        owner : owner,\n        repo : repo\n    });\n\n}\n","import React, {FC, ReactElement, useState} from 'react';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { TextInputApollo } from '../../Components/TextInput';\nimport { useNavigate } from 'react-router-dom';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors } from '../../Theme';\nimport { parseGitUrl } from '../../Items';\nimport { DappI } from '../../Items';\nimport { OpenContractReducer } from '../../Types';\n\nexport type RunPageNoRepoProps = {\n    setDapp : OpenContractReducer,\n}\n\n\nexport const RunPageNoRepo : FC<RunPageNoRepoProps>  = ({\n    setDapp\n}) =>{\n\n    const navigate = useNavigate();\n    const [text, setText] = useState(\"\");\n\n    const handleSubmit = ()=>{\n\n        const {\n            owner,\n            repo,\n            branch\n        } = parseGitUrl(text);\n\n        setDapp(()=>({\n            __isDapp__ : true,\n            gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n            id : `${owner}/${repo}/${branch||\"main\"}`,\n            owner : owner || \"\",\n            repo : repo || \"\", \n            branch : branch || \"main\",\n            // loaded : false\n        }));\n\n        navigate(`/${owner}/${repo}/${branch||\"main\"}`);\n        window.location.reload();\n    }\n\n    const handleEnter = (text : string)=>{\n        const {\n            owner,\n            repo,\n            branch\n        } = parseGitUrl(text);\n\n        setDapp(()=>({\n            __isDapp__ : true,\n            gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n            id : `${owner}/${repo}/${branch||\"main\"}`,\n            owner : owner || \"\",\n            repo : repo || \"\", \n            branch : branch || \"main\",\n            // loaded : false\n        }));\n\n        navigate(`/${owner}/${repo}/${branch||\"main\"}`);\n        window.location.reload();\n    }\n\n    return (\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <TextInputApollo \n            onSubmit={handleEnter}\n            placeholder={\"github-handle/contract-repo/branch\"}\n            onTextInput={setText}/>&emsp;<AthenaButton \n            onClick={handleSubmit}\n            primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                Submit\n            </AthenaButton>\n        </div>\n\n    )\n\n}\n","import React, {FC, ReactElement} from 'react';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { RunPageWithRepo } from './RunPageWithRepo';\nimport { RunPageNoRepo } from './RunPageNoRepo';\nimport { DappI } from '../../Items';\nimport {OpenContractReducer} from \"../../Types\";\n\nexport type ReadyToRunProps = {\n    dapp : DappI,\n    setDapp : OpenContractReducer,\n    grid : boolean,\n    setGrid : (grid : boolean)=>void,\n    which : string,\n    setWhich : (which : string)=>void\n}\n\nexport const ReadyToRun : FC<ReadyToRunProps>  = ({\n    dapp,\n    setDapp,\n    grid,\n    setGrid,\n    which,\n    setWhich\n}) =>{    \n\n    return (dapp.owner.length && dapp.repo.length) ?\n    (<RunPageWithRepo \n        grid={grid}\n        setGrid={setGrid}\n        which={which}\n        setWhich={setWhich}\n        dapp={dapp} setDapp={setDapp}/>) :\n    (<RunPageNoRepo setDapp={setDapp}/>)\n\n}","import React, {FC, ReactElement, useReducer} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport {ReadyToRun} from \"./ReadyToRun\";\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {useNavigationType, useParams} from \"react-router-dom\";\nimport { useErrorContext } from '../../Error/ErrorProvider';\nimport { DappI, getDappName,  getDappContract } from \"../../Items\";\nimport { useOpenContractContext } from '../../Models';\nimport { useNavigate } from 'react-router';\n\nexport type RunPageProps = {\n    stepStatus : StepStatusT,\n    setStepStatus : (status : StepStatusT)=>void\n}\n\nexport const RunPage : FC<RunPageProps>  = ({\n    stepStatus\n}) =>{\n    // step status should go away \n    const {\n        owner,\n        repo,\n        branch\n    } = useParams();\n\n    \n\n    const [dapp, setDapp] = useReducer(\n        (dapp : DappI, set :(dapp : DappI)=>DappI)=>{\n            return set(dapp);\n        },\n        {\n            __isDapp__ : true,\n            gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n            id : `${owner}/${repo}/${branch||\"main\"}`,\n            owner : owner || \"\",\n            repo : repo || \"\", \n            branch : branch || \"main\",\n        } \n    )\n\n    const [loc, setLoc] = useState<string>(window.location.hash);\n    useEffect(()=>{\n        if(loc !== window.location.hash){\n            setDapp(()=>({\n                __isDapp__ : true,\n                gitUrl : `https://github.com/${owner}/${repo}/${branch}`,\n                id : `${owner}/${repo}/${branch||\"main\"}`,\n                owner : owner || \"\",\n                repo : repo || \"\", \n                branch : branch || \"main\"\n            }));\n            setLoc(window.location.hash);\n        }\n    }, [window.location.hash]); // I don't believe this dep array actually does anything.\n\n    const {funcName} = useParams();\n\n    const [grid, setGrid] = useState(true);\n    const [which, setWhich] = useState<string>(funcName||\"\");\n    useEffect(()=>{\n        which.length && window.history.pushState({\n            path : `/${window.location.search}#/${owner}/${repo}/${branch||\"main\"}`\n        }, '', `/${window.location.search}#/${owner}/${repo}/${branch||\"main\"}`);\n\n    }, [which])\n\n    // Logic for loading the contract\n    const {\n        dispatch\n    } = useErrorContext();\n\n    const [nameLoad, setNameLoad] = useState<string|undefined>(undefined);\n    useEffect(()=>{\n\n        if(!nameLoad && dapp.owner.length && dapp.repo.length){\n            getDappName(\n                dapp,\n                (name : string)=>setNameLoad(name)\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [dapp.name])\n    useEffect(()=>{\n\n        if(dapp.name !== nameLoad){\n            setDapp((dapp)=>{\n                return {\n                    ...dapp,\n                    name : nameLoad\n                }\n            })\n        }\n\n    })\n\n    const {dispatch : dispatchContract} = useOpenContractContext();\n    const [contractLoad, setContractLoad] = useState<IOpenContract|undefined>(undefined);\n    useEffect(()=>{\n\n        if(!dapp.contract && dapp.owner.length && dapp.repo.length){\n            \n            getDappContract(\n                dapp,\n                (contract : IOpenContract)=>{\n                    setContractLoad(contract);\n                    !which.length && setWhich(contract.contractFunctions[0].name);\n                    \n                    dispatchContract((context)=>{\n                        return {\n                            ...context,\n                            openContract : contract\n                        }\n                    })\n                }\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [dapp.contract?.contractName])\n    useEffect(()=>{\n\n        if(contractLoad && (dapp.contract !== contractLoad)){\n            setDapp(()=>({\n                ...dapp,\n                contract : contractLoad\n            }))\n        }\n\n    }, [contractLoad])\n\n\n    const page = (<ReadyToRun \n    grid={grid}\n    setGrid={setGrid}\n    which={which}\n    setWhich={setWhich}\n    dapp={dapp} \n    setDapp={setDapp}/>);\n\n    return (\n            <MediaResponsive>\n                <MediaResponsive.Desktop>\n                        <MainLayoutDesktop>\n                            <MainLayoutDesktop.Header>\n                                <HeaderResponsive wallet={stepStatus.wallet}/>\n                            </MainLayoutDesktop.Header>\n                            <MainLayoutDesktop.Content>\n                                {page}\n                            </MainLayoutDesktop.Content>\n                        </MainLayoutDesktop>\n                    </MediaResponsive.Desktop>\n                <MediaResponsive.Laptop>\n                        <MainLayoutDesktop>\n                            <MainLayoutDesktop.Header>\n                                <HeaderResponsive wallet={stepStatus.wallet}/>\n                            </MainLayoutDesktop.Header>\n                            <MainLayoutDesktop.Content>\n                            {page}\n                            </MainLayoutDesktop.Content>\n                        </MainLayoutDesktop>\n                </MediaResponsive.Laptop>\n                <MediaResponsive.Tablet>\n                        <MainLayoutMobile>\n                            <MainLayoutMobile.Header>\n                                <HeaderResponsive wallet={stepStatus.wallet}/>\n                            </MainLayoutMobile.Header>\n                            <MainLayoutMobile.Content>\n                            {page}\n                            </MainLayoutMobile.Content>\n                        </MainLayoutMobile>\n                </MediaResponsive.Tablet>\n                <MediaResponsive.Mobile>\n                        <MainLayoutMobile>\n                            <MainLayoutMobile.Header>\n                                <HeaderResponsive wallet={stepStatus.wallet}/>\n                            </MainLayoutMobile.Header>\n                            <MainLayoutMobile.Content>\n                                {page}\n                            </MainLayoutMobile.Content>\n                        </MainLayoutMobile>\n                </MediaResponsive.Mobile>\n            </MediaResponsive>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Colors } from '../../Theme';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport Skeleton from \"react-loading-skeleton\";\n\nexport type TermsProps = {}\n\nexport const Terms : FC<TermsProps>  = () =>{\n\n    const [terms, setTerms] = useState<string|undefined>(undefined);\n    useEffect(()=>{\n        fetch(\"/Terms.md\").then((data)=>{\n            data.text().then((data)=>{\n                setTerms(data);\n            }).catch(()=>{})\n        }).catch(()=>{});\n    }, []);\n\n    return (\n\n        <div style={{\n            width : \"100vw\",\n            padding : \"5%\",\n            display : 'grid',\n            justifyContent : \"center\",\n            justifyItems : \"center\",\n            color : Colors.Maintheme\n        }}>\n            <div style={{\n                textAlign : \"left\",\n                width : \"80%\"\n            }}>\n                {terms ? <ReactMarkdown plugins={[remarkGfm]}>\n                    {terms||\"\"}\n                </ReactMarkdown> : <Skeleton count={6}/>}\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { FileTextFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { Colors } from '../../Theme';\n\nexport type FooterProps = {}\n\nexport const Footer : FC<FooterProps>  = () =>{\n\n    const nav = useNavigate();\n\n    return (\n\n        <div style={{\n            paddingTop : \"40px\",\n            width : '100%',\n            display : \"grid\",\n            gridTemplateColumns : \"1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\",\n            color : Colors.Maintheme,\n            fontSize : \"14px\",\n            paddingBottom : \"20px\",\n            gap : \"10px\",\n            /*bottom : 0,\n            position : \"absolute\"*/\n        }}>\n            <div>\n                Copyright &copy; 2022, Open Contracts\n            </div>\n            <div style={{\n                    display : \"flex\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    textAlign : 'right',\n                    flexDirection : \"row-reverse\"\n                }}>\n                    <a onClick={(e)=>{\n                        e.preventDefault();\n                        nav(\"/terms\");\n                    }} href=\"/terms\">Terms</a>&ensp;<FileTextFill/>\n                    </div>\n                <div>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { useCheckStore } from '../../Sytems';\nimport {RunPage} from \"../Run\";\nimport { CheckPage } from '../CheckPage/CheckPage';\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport {Footer} from \"../../Maps/Footers\"\n\nexport type MainPageProps = {}\n\nexport const MainPage : FC<MainPageProps>  = () =>{\n\n    const {\n        checksCompleted\n    } = useCheckStore()\n\n    const [stepStatus, setStepStatus] = useState<StepStatusT>({\n        wallet : \"not ready\",\n    });\n\n    return <><RunPage stepStatus={stepStatus}\n    setStepStatus={setStepStatus}/><Footer/></>\n \n\n}","import React, {FC, ReactElement} from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { IntegratedErrorBoundary } from '../Error/IntegratedErrorBoundary';\nimport { RunPage, Terms } from '../Pages';\nimport { ErrorPage } from '../Pages/ErrorPage';\nimport { CheckProvider } from '../Sytems';\nimport {MainPage} from \".././Pages/MainPage\"\n\nexport type MainRouterProps = {}\n\nexport const MainRouter : FC<MainRouterProps>  = () =>{\n\n    return (\n\n        <HashRouter>\n            <CheckProvider>\n                <IntegratedErrorBoundary>\n                    <Routes>\n                        <Route path=\"/terms\" element={<Terms/>}/>\n                        <Route path=\"/:owner/:repo/:branch\" element={<MainPage/>}/>\n                        <Route path=\"/:owner/:repo\" element={<MainPage/>}/>\n                        <Route path=\"/error\" element={<ErrorPage/>}/>\n                        <Route path=\"/\" element={<MainPage/>}/>\n                    </Routes>\n                </IntegratedErrorBoundary>\n            </CheckProvider>\n        </HashRouter>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ConnectWalletContextProvider, OpenContractContextProvider } from '../Models';\nimport { HashIgnorantRouterContextProvider, MainRouter } from \"../Router\";\n\n\nexport type MainSegmentProps = {}\n\nexport const MainSegment : FC<MainSegmentProps>  = () =>{\n\n    return (<OpenContractContextProvider>\n        <ConnectWalletContextProvider>\n            <MainRouter/>\n        </ConnectWalletContextProvider>\n    </OpenContractContextProvider>)\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"./CSS/Main.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { MainSegment } from './Segments';\n\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{\n      height : \"100vh\",\n      overflow : \"scroll\"\n    }}>\n      <MainSegment/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
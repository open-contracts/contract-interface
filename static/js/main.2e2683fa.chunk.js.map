{"version":3,"sources":["Error/ErrorProvider/ErrorProvider.tsx","Error/ErrorProvider/ErrorDispatch.tsx","Error/UniversalErrorBoundary/UniversalErrorBoundary.tsx","Theme/Colors.tsx","Theme/DesktopSizes.tsx","Error/ErrorNotification/CrashLogo.tsx","Error/ErrorNotification/ErrorNotification.tsx","Error/IntegratedErrorBoundary/IntegratedErrorBoundary.tsx","Components/Walkthrough/Step/StepType.ts","Components/Walkthrough/Step/StepPre.tsx","Components/Walkthrough/Step/SuceededStepPost.tsx","Components/Buttons/AthenaButton/AthenaButton.tsx","Components/Walkthrough/Step/FailedStepPost.tsx","Components/Walkthrough/Step/StepPost.tsx","Components/Walkthrough/Step/Step.tsx","Statics/Steps/CrtStep.tsx","Statics/Steps/WalletStep.tsx","Statics/Steps/EnclaveStep.tsx","Statics/Steps/Steps.tsx","Statics/Steps/simulateNetworkRequest.tsx","Statics/Steps/RunSteps.tsx","Pages/Run/NotReadyToRun.tsx","Sytems/Octokit/index.ts","Items/Dapp/Dapp.tsx","Items/Dapp/ApolloDapp/ApolloRunDappContent.tsx","Sytems/MediaResponsive/MediaResponsive.tsx","Items/DappPut/Standards/DefaultHeader.tsx","Items/DappPut/DappInput/DappInputHeader.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunction.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionsMobile.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionGridView.tsx","Items/DappPut/DappInput/DappInput.tsx","Items/DappPut/DappPutLayout.tsx","Items/DappPut/DappInteractput/DappInteractputHeader.tsx","Items/DappPut/Methods/color.ts","Items/DappPut/DappInteractput/DappInteractputContent.tsx","Items/DappPut/DappInteractput/DappInteractput.tsx","Items/DappPut/DappOutput/DappOutputHeader.tsx","Items/DappPut/DappOutput/DappOutputContent.tsx","Items/DappPut/DappOutput/DappOutput.tsx","Items/DappPut/DappErrput/DappErrputHeader.tsx","Items/DappPut/DappErrput/DappErrputContent.tsx","Items/DappPut/DappErrput/DappErrput.tsx","Items/DappPut/DappDescput/DappDescputHeader.tsx","Items/DappPut/DappDescput/DappDescputContent.tsx","Items/DappPut/DappDescput/DappDescput.tsx","Items/DappPut/DappOracleput/DappOracleputHeader.tsx","Items/DappPut/DappOracleput/OracleLink.tsx","Items/DappPut/DappOracleput/DappOracleputContent.tsx","Items/DappPut/DappOracleput/DappOracleput.tsx","Items/DappPut/DappResultput/DappResultputHeader.tsx","Items/DappPut/DappResultput/DappResultputContent.tsx","Items/DappPut/DappResultput/DappResultput.tsx","Items/DappPut/DappPut/DappPut.tsx","Components/TextInput/TextInputApollo.tsx","Items/DappFunction/DappFunctionLogRunButton.tsx","Items/DappFunction/DappFunctionSubmitState.tsx","Items/DappFunction/DappFunctionLogAthena.tsx","Items/DappFunction/DappFunctionAthena.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionView.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemMobileActions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemMobile.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemActions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItemDesktop.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItem.tsx","Benches/Run/RunBenchDesktop.tsx","Pages/Run/RunPageWithRepo.tsx","Pages/Run/RunPageNoRepo.tsx","Pages/Run/ReadyToRun.tsx","Layouts/Header/HeaderLayoutDesktop.tsx","Layouts/Header/HeaderLayoutMobile.tsx","Layouts/Main/MainLayoutDesktop.tsx","Layouts/Main/MainLayoutMobile.tsx","Theme/ColorProvider.tsx","Glitter/Logos/LogoB.tsx","Glitter/Animations/Grow/GrowOnEventAchamaenid.tsx","Glitter/Animations/ThroughGlass/ThroughGlassAgathocles.tsx","Components/Ready/AristophanesReady/AristophanesReady.tsx","Components/Ready/AristophanesReady/AristophanesReadyStack.tsx","Maps/ConnectionStatus/ConnectionStatus.tsx","Maps/Headers/HeaderDesktop.tsx","Maps/Headers/HeaderMobile.tsx","Maps/Headers/HeaderResponsive.tsx","Pages/Run/RunPage.tsx","Pages/ErrorPage/ErrorPage.tsx","Router/MainRouter.tsx","Segments/MainSegment.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DefaultErrorContext","errorLoading","errorValidating","errorLoaded","error","undefined","dispatch","ErrorContext","createContext","ErrorReducer","state","action","ErrorProvider","initialerror","children","navigate","useNavigate","useReducer","useEffect","Provider","value","useErrorContext","context","useContext","Error","ErrorDispatch","UniversalErrorBoundary","props","this","React","Component","Colors","Maintheme","primaryTextColor","secondaryTextColor","tertiaryTextColor","quartenaryTextColor","backgroundColorSecondary","logoColor","readyGreen","waitingYellow","failedRed","greenCeramic","forestEdge","fadedRed","lilac","deepPurple","skyBlue","royalBlue","babyBlue","infoYellow","arizonaOrange","cyan","deepCyan","bloodOrange","DesktopSizes","contentWidth","standard","whitespacePreferred","CrashLogo","color","style","height","width","id","xmlns","viewBox","shapeRendering","textRendering","clipPath","transform","d","fill","fillRule","stroke","strokeWidth","rx","ry","ErrorNotification","errorText","display","gridTemplateRows","justifyContent","alignContent","margin","toUpperCase","IntegratedErrorBoundary","Members","StepPre","next","getComponentMembers","Title","Info","Content","gridTemplateColumns","motion","div","animate","position","y","transition","ease","duration","opacity","generateNamedMember","SucceededStepPost","done","onAnimationComplete","scale","x","overflow","size","AthenaButton","label","primaryColor","secondaryColor","invert","disabled","active","loading","hovered","e","a","onClick","onMouseEnter","onMouseLeave","useState","setDisabled","isActive","setActive","isLoading","setLoading","setE","then","invertedBackground","Color","lighten","contrast","hex","isHovered","setHovered","_isHovered","Button","variant","cursor","borderTop","borderLeft","borderBottom","borderRight","backgroundColor","Spinner","animation","FailedStepPost","justifyItems","StepPost","success","Step","ready","CrtStep","WalletStep","src","EnclaveStep","AllSteps","Steps","status","crt","wallet","enclave","which","handleDone","simulateNetworkRequest","upperBound","Promise","resolve","reject","setTimeout","Math","random","RunSteps","setStepStatus","stepStatus","stepIndex","setStepIndex","allDone","setAllDone","data","index","indexOf","length","NotReadyToRun","handleAllDone","createPullRequest","require","Octokit","plugin","auth","process","REACT_APP_GITHUB_TOKEN","getFileText","args","to","fetch","owner","repo","path","text","parseGitUrl","url","_indexCom","indexCom","split","substring","trim","replace","console","log","branch","README","parseName","readme","lines","getDappName","dapp","onGet","gitUrl","err","name","getDappInterface","JSON","parse","dappInterface","getOpenContractsInterface","ocInterface","getDappContract","window","OpenContracts","opencontract","openContractsInterface","parseContracts","ApolloRunDappContent","grid","setGrid","Single","Grid","alignItems","zIndex","top","borderBottomRightRadius","borderBottomLeftRadius","background","MediaResponsive","Desktop","Laptop","Tablet","Mobile","minWidth","maxWidth","DefaultHeader","dappPut","Pre","Post","fontSize","description","DappInputHeader","dappInput","type","ApolloDappFunction","func","selected","inputs","map","input","wordWrap","overflowX","overflowY","padding","textAlign","requiresOracle","ApolloDappFunctions","setWhich","onFunctionClick","funcs","contract","contractFunctions","borderRadius","className","breakpointCols","ApolloDappFunctionsMobile","ApolloRunDappFunctionGridView","DappInput","setInput","DappPutLayout","end","Header","overflowWrap","paddingTop","paddingBottom","paddingLeft","paddingRight","borderCollapse","DappInteractputHeader","dappInteractput","lightenStandard","darkenStandard","darken","DappInteractputContent","DappInteractput","border","DappOutputHeader","dappOutput","DappOutputContent","navigator","clipboard","writeText","DappOutput","DappErrputHeader","dappErrput","DappErrputContent","resetArgs","DappErrput","DappDescputHeader","dappDescput","DappDescputContent","DappDescput","DappOracleputHeader","dappOracleput","OracleLink","link","href","DappOracleputContent","contractFunction","oracleData","Object","keys","reduce","agg","key","oracleStatii","setOracleStatii","oracleStates","setOracleStates","catch","oraclePromiseReject","obj","allResolved","resolveCount","countPromisesResolved","links","oraclePromiseResolve","setOracleData","DappOracleput","DappResultputHeader","dappResultput","DappResultputContent","setResultput","userSelect","DappResultput","DappPut","put","setPut","putType","TextInputApollo","onTextInput","rest","Form","Control","onKeyDown","char","target","onSubmit","DappFunctionLogRunButton","puts","lineHeight","borderTopLeftRadius","borderTopRightRadius","DappFunctionSubmitState","call","loadOracleData","setFunc","oracleLoad","setOracleLoad","_loadOracleData","resolved","count","callOracle","createInputs","createErrors","errors","createResult","result","getContractFunctionInputs","filter","resetInputs","resetInputPuts","DappFunctionLogAthena","setDappFunction","addOutput","message","prints","newOutput","_newFuctionState","print","printHandler","addError","newResult","newError","_newFunctionState","handleError","errorHandler","addOracleData","addResult","githubOracleDownloader","oracleFolder","addOracleCallput","handleSubmit","submitHandler","handleCall","toString","addInteractput","targetUrl","sessionUrl","xpras","newXpra","xpra","xpraHandler","xpraExit","DappFunctionAthena","ApolloRunDappFunctionView","ApolloRunDappMainItemMobileActions","getTokens","provider","ethers","providers","Web3Provider","ethereum","signerToken","OPNtoken","connect","getSigner","gimmeSomeMoreOfDemCoins","gap","ApolloRunDappMainItemMobileInternals","dappItem","setDappItem","selectedFunc","newContractFunctions","oldContractFunction","ApolloRunDappMainItemMobile","updateDapp","forceLoad","dappState","setDappState","nameLoad","setNameLoad","contractLoad","setContractLoad","contractLoaded","setContracLoaded","ApolloRunDappMainItemActions","ApolloRunDappMainItemInternals","ApolloRunDappMainItemDesktop","ApolloRunDappMainItem","RunBenchDesktop","RunPageWithRepo","__isDapp__","RunPageNoRepo","setText","placeholder","ReadyToRun","useParams","HeaderLayoutDesktop","Brand","Nav","Account","HeaderLayoutMobile","MainLayoutDesktop","Footer","MainLayoutMobile","flexDirection","DefaultColorContext","colors","ColorContext","useColorStore","LogoB","main","post","fontColor","_logoColor","_fontColor","GrowOnEventAchamaenid","grow","ThroughGlassAgathocles","glass","glassOpacity","DefaultExpressions","DefaultColors","AristophanesReady","right","expressions","information","lightStyle","_expressions","_information","_colors","onMouseOver","onMouseOut","title","verticalAlign","AristophanesReadyStack","ConnectionStatus","stack","address","setAddress","signer","getAddress","HeaderDesktop","HeaderMobile","handleSelect","item","location","HeaderResponsive","RunPage","readyToRun","setReadyToRun","page","ErrorPage","MainRouter","element","MainSegment","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e2683fa.chunk.js","sourcesContent":["import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nexport interface ErrorContextI {\n    errorLoading : boolean,\n    errorValidating : boolean,\n    errorLoaded : boolean,\n    error : undefined | Error,\n    dispatch : (fn : (state : ErrorContextI)=>ErrorContextI)=>void\n}\n\nconst DefaultErrorContext : ErrorContextI = {\n    errorLoading : false,\n    errorValidating : false,\n    errorLoaded : false,\n    error : undefined,\n    dispatch : ()=>{}\n}\n\n\nexport const ErrorContext = createContext(DefaultErrorContext);\n\nexport const ErrorReducer = (\n    state : ErrorContextI, \n    action : (state : ErrorContextI)=>ErrorContextI\n)=>{\n    return action(state);\n}\n\nexport type ErrorProviderProps = {\n    initialerror? : {\n        [key : string] : any\n    } \n}\n\nexport const ErrorProvider : FC<ErrorProviderProps>  = ({\n    initialerror,\n    children\n}) =>{\n\n    const navigate = useNavigate();\n\n    const [state, dispatch] = useReducer(ErrorReducer, DefaultErrorContext);\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && !state.errorValidating){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    dispatch : dispatch,\n                    errorValidating : true,\n                }\n            })\n\n        }\n\n    })\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && state.errorValidating && state.dispatch){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    errorValidating : false,\n                    errorLoaded : true\n                }\n            })\n\n\n        } \n    })\n\n    useEffect(()=>{\n\n        if(state.error){\n            navigate(\"/error\");\n            dispatch((state)=>{\n                return {\n                    ...state,\n                    error : undefined\n                }\n            })\n        }\n\n    })\n\n    return (\n\n        <ErrorContext.Provider value={{\n            ...state,\n            dispatch : dispatch\n        }}>\n                {children}\n        </ErrorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useErrorContext = () : ErrorContextI=>{\n\n    const context = useContext(ErrorContext);\n\n    if(!context){\n        throw new Error(\"useerror must be called within a ErrorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useErrorContext } from './ErrorProvider';\n\nexport type ErrorDispatchProps = {\n    error : Error\n}\n\nexport const ErrorDispatch : FC<ErrorDispatchProps>  = ({\n    error\n}) =>{\n\n    const {\n        dispatch \n    } = useErrorContext();\n\n    useEffect(()=>{\n        dispatch((state)=>{\n            return {\n                ...state,\n                error : error\n            }\n        })\n    })\n\n    return (\n\n        <>\n        \n\n        </>\n\n    )\n\n}","import React, { ErrorInfo } from \"react\";\nimport {ErrorDispatch, useErrorContext} from \"../ErrorProvider\";\n\ntype UniversalErrorBoundaryProps = {\n\n}\n\ntype UniversalErrorBoundaryStateI = {\n    error : Error | undefined\n}\n\nexport class UniversalErrorBoundary extends React.Component<UniversalErrorBoundaryProps, UniversalErrorBoundaryStateI> {\n    state : UniversalErrorBoundaryStateI = {\n        error : undefined\n    }\n\n    constructor(props : UniversalErrorBoundaryProps) {\n      super(props);\n      this.state = { error: undefined };\n    }\n  \n    static getDerivedStateFromError(error : Error) {\n      // Update state so the next render will show the fallback UI.\n      return { error: error };\n    }\n  \n    render() {\n      if (this.state.error) {\n\n        return <ErrorDispatch error={this.state.error}/>;\n      }\n  \n      return this.props.children; \n    }\n  }","export const Colors = {\n    Maintheme : \"#373737\",\n    primaryTextColor : \"#FAF9F6\",\n    secondaryTextColor : \"#515151\",\n    tertiaryTextColor : \"#979797\",\n    quartenaryTextColor : \"#f1f1f1\",\n    backgroundColorSecondary : \"#D7D7D7\",\n    logoColor : \"#D7D7D7\",\n    readyGreen : \"#11db1e\",\n    waitingYellow : \"#fceb2f\",\n    failedRed : \"#ff0000\",\n    greenCeramic : \"#addcc9\",\n    forestEdge : \"#06955f\",\n    fadedRed : \"#f7a8a6\",\n    lilac : \"#C8A2C8\",\n    deepPurple: \"#d2a6cc\",\n    skyBlue : \"#bdd7ee\",\n    royalBlue : \"#4169e1\",\n    babyBlue : \"#4499ab\",\n    infoYellow : \"#faf264\",\n    arizonaOrange : \"#fdd2b5\",\n    cyan : \"#00b5b5\",\n    deepCyan : \"#004584\",\n    bloodOrange : \"#cc8866\"\n} as const","export const DesktopSizes = {\n    Main : {\n        contentWidth : 950\n    },\n    Padding : {\n        standard : \"10px\",\n        whitespacePreferred : \"40px\"\n    },\n    BorderRadius : {\n        standard : \"5px\"\n    }\n} as const","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\n\nexport type CrashLogoProps = {\n    color? : React.CSSProperties[\"color\"],\n    style ? : React.CSSProperties\n}\n\nexport const CrashLogo : FC<CrashLogoProps>  = ({\n    color = Colors.Maintheme,style\n}) =>{\n\n    return (\n\n        <div style={{\n            height : \"200px\",\n            width : \"200px\",\n            ...style\n        }}>\n            <svg id=\"e7l4ir2eLhD1\" xmlns=\"http://www.w3.org/2000/svg\" \n                viewBox=\"0 0 1295 1296\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\">\n                <g id=\"e7l4ir2eLhD2\" clipPath=\"url(#e7l4ir2eLhD5)\">\n                    <g id=\"e7l4ir2eLhD3\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <path id=\"e7l4ir2eLhD4\"\n                            d=\"M2281.32,449.263L2551.39,449.263L2552.12,450.769C2584.88,528.295,2603,613.53,2603,703C2603,792.47,2584.88,877.705,2552.12,955.231L2550.93,957.704L2280.6,957.704L2298.15,934.214C2342.71,868.213,2368.72,788.647,2368.72,703C2368.72,617.353,2342.71,537.787,2298.15,471.786ZM1955.5,55C2156.65,55,2336.38,146.796,2455.14,290.812L2455.18,290.863L1983.28,290.863L1955.5,289.459C1727.28,289.459,1542.28,474.608,1542.28,703C1542.28,931.392,1727.28,1116.54,1955.5,1116.54L1964.14,1116.1L2454.31,1116.1L2413.35,1161.21C2296.18,1278.47,2134.3,1351,1955.5,1351C1597.9,1351,1308,1060.88,1308,703C1308,345.119,1597.9,55,1955.5,55Z\"\n                            transform=\"matrix(0.103391 -0.251703 0.251703 0.103391 1297.463604 955.789861)\"\n                            fill={color} fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" />\n                    </g>\n                    <clipPath id=\"e7l4ir2eLhD5\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <rect id=\"e7l4ir2eLhD6\" width=\"1295\" height=\"1296\" rx=\"0\" ry=\"0\" transform=\"matrix(1 0 0 1 1308 55)\"\n                            fill={color} stroke=\"none\" strokeWidth=\"1\" />\n                    </clipPath>\n                </g>\n                <path id=\"e7l4ir2eLhD7\"\n                    d=\"M811.27241,1085.63037L755.48824,1058.06402L880.4497,805.18796C880.42923,804.69885,880.41891,804.20759,880.41891,803.71433C880.41891,797.8312,881.88713,792.2333,884.53541,787.16032L770.96006,668.53597L631.91347,909.37173L576.15756,877.18104L724.58424,620.0985L691.31772,585.35311L550.79195,828.75088L495.03604,796.56019L644.94189,536.91564L639.59344,531.32943L584.21684,514.54791L599.70208,463.44887L651.53212,479.15564C655.22556,478.48418,660.01241,479.17178,664.73022,481.33136C671.28682,484.33265,675.77869,489.29288,676.39603,493.6522L933.50579,762.19179C959.69536,763.51273,980.44439,781.59804,980.44439,803.71435C980.44439,811.51833,977.86091,818.82042,973.36652,825.06115L1011.26733,1101.2539L949.62144,1109.71331L916.96606,871.74531L811.27241,1085.63037Z\"\n                    fill={color} stroke=\"none\" strokeWidth=\"0\" />\n            </svg>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\nimport { CrashLogo } from './CrashLogo';\n\nexport type ErrorNotificationProps = {\n    errorText? : string,\n    style? : React.CSSProperties\n}\n\nexport const ErrorNotification : FC<ErrorNotificationProps>  = ({\n    errorText = \"Sorry, our site encountered an error. Please try refreshing the page.\", \n    style\n}) =>{\n\n    return (\n\n        <div style={{\n            display : \"grid\",\n            gridTemplateRows : \"5fr 1fr\",\n            width : \"100%\",\n            ...style\n        }}>\n            <div style={{\n                width : \"100%\",\n                justifyContent : \"center\",\n                alignContent : \"center\"\n            }}>\n                <CrashLogo style={{\n                    width : \"300px\",\n                    height : \"300px\",\n                    margin : \"auto\",\n                }}/>\n            </div>\n            <div style={{\n                color : Colors.primaryTextColor\n            }}>\n                <h6>{errorText.toUpperCase()}</h6>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ErrorProvider } from '../ErrorProvider';\nimport { UniversalErrorBoundary } from '..';\n\nexport type IntegratedErrorBoundaryProps = {}\n\nexport const IntegratedErrorBoundary : FC<IntegratedErrorBoundaryProps>  = ({\n    children\n}) =>{\n\n    return (\n\n        <ErrorProvider>\n            <UniversalErrorBoundary>\n                {children}\n            </UniversalErrorBoundary>\n        </ErrorProvider>\n\n    )\n\n}","import React from \"react\";\n\nexport const Members = [\"Title\", \"Info\", \"Content\"] as const;\n\nexport type StepMemberI = typeof Members[number];\nexport type StepStylesT = {\n    [key in StepMemberI] : React.CSSProperties\n} & {\n    wrapper : React.CSSProperties\n}\n","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\n\nexport type StepPreProps = {\n    next ? : ()=>void\n}\n\nconst StepPre : FC<StepPreProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    next,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            y : [300, 0]\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : 1\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.Maintheme\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : [0, 0, 0, 0, 1.0]\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 1.25\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                <motion.div \n                    animate={{\n                        opacity : [0, 0, 1.0],\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 2.0\n                    }}\n                >\n                    {Content}\n                </motion.div>\n            </div>\n    )\n\n}\n\nStepPre.Title = generateNamedMember(\"Title\");\nStepPre.Info = generateNamedMember(\"Info\");\nStepPre.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPre}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {Check} from \"react-bootstrap-icons\";\n\nexport type SucceededStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const SucceededStepPost : FC<SucceededStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <motion.div \n            onAnimationComplete={()=>{\n                done && done(true);\n            }}\n            animate={{\n                opacity : [1.0, 1.0, 1.0, 0.0],\n                scale : [1.0, .75, .25, .05],\n                position : [\"relative\", \"relative\", \"relative\", \"relative\"],\n                y : [0, 0, -200, -300],\n                x : [0, 0, 200, 300]\n            }}\n            transition={{\n                ease : \"easeInOut\",\n                duration : 2.0\n            }}\n        >\n           {children}\n           <motion.div\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    width : [0, 80],\n                    color : Colors.readyGreen\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .75\n                }}\n            >\n                <Check size={60}/>\n            </motion.div>\n        </motion.div>\n\n    )\n\n}","import Color from \"color\";\nimport React, { FC, useEffect, useState } from 'react';\nimport {Button, Spinner } from \"react-bootstrap\";\n\n\n/**\n * @initialAuthor\n * @contributors\n */\n\n/**\n * @description\n */\nexport type AthenaButtonProps = {\n    label?: string,\n    primaryColor: React.CSSProperties[\"color\"],\n    secondaryColor: React.CSSProperties[\"color\"],\n    invert? : boolean,\n    disabled?: boolean,\n    active?: boolean,\n    hovered? : boolean,\n    loading?: boolean,\n    size?: \"sm\" | \"lg\" | undefined,\n    action? : (e? : React.MouseEvent)=>Promise<void>,\n    onClick? : (e : React.MouseEvent)=>void,\n    onMouseEnter? : (e : React.MouseEvent)=>void,\n    onMouseLeave? : (e : React.MouseEvent)=>void,\n    style?: React.CSSProperties\n}\n\n/**\n * @description \n */\nexport const AthenaButton : FC<AthenaButtonProps>  = ({\n    label, \n    primaryColor, \n    secondaryColor,\n    children,\n    invert=false,\n    disabled=false,\n    active=false,\n    loading=false,\n    size=undefined,\n    hovered,\n    action=async (e? : React.MouseEvent)=>{return},\n    onClick=(e: React.MouseEvent)=>{},\n    onMouseEnter=(e: React.MouseEvent)=>{},\n    onMouseLeave=(e: React.MouseEvent)=>{},\n    style\n}) =>{\n\n    const [isDisabled, setDisabled] = useState(disabled);\n    const [isActive, setActive] = useState(active);\n    const [isLoading, setLoading] = useState(loading);\n    const [e, setE] = useState<React.MouseEvent|undefined>(undefined)\n\n    useEffect(()=>{\n        if(isLoading){\n            action(e).then(()=>{\n                setDisabled(false);\n                setLoading(false);\n                setActive(false);\n            })\n        }\n    }, [isLoading])\n\n\n\n    const invertedBackground = Color(primaryColor).lighten(1/(10 - Color(primaryColor).contrast(Color(secondaryColor)))).hex()\n\n    const handleClick = (e : React.MouseEvent<HTMLElement>)=>{\n        onClick(e);\n        setE(e);\n        setDisabled(true);\n        setLoading(true);\n        setActive(true);\n        setHovered(false);\n    }\n\n    const [isHovered, setHovered] = useState(false); \n    const handleMouseEnter = (e : React.MouseEvent)=>{\n        setHovered(true);\n        onMouseEnter(e);\n    }\n    const handleMouseLeave = (e : React.MouseEvent)=>{\n        setHovered(false);\n        onMouseLeave(e);\n    }\n\n    const _isHovered = isHovered || hovered;\n\n    return (\n\n        <Button\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            variant={`outline`}\n            disabled={isLoading||disabled}\n            active={isActive||active}\n            size={size}\n            onClick={handleClick}\n            style={{\n                cursor: \"pointer\",\n                transition: _isHovered? \"all .1s ease-in-out\" : \"\",\n                display: \"inline-block\",\n                color: _isHovered? secondaryColor : !invert ? primaryColor : secondaryColor,\n                borderTop: `1px solid ${primaryColor}`,\n                borderLeft: `1px solid ${primaryColor}`,\n                borderBottom: `1px solid ${primaryColor}`,\n                borderRight: `1px solid ${primaryColor}`,\n                backgroundColor: _isHovered? primaryColor : invert ? invertedBackground : secondaryColor,\n                ...style\n            }}\n        >{label||children}<span style={{display: isLoading||loading ? \"inline-block\" : \"none\"}}>&ensp;</span><Spinner\n            animation=\"border\"\n            style={{\n                display : isLoading||loading ? \"inline-block\" : \"none\", \n                height : \"15px\",\n                width: \"15px\"\n            }}\n            ></Spinner>\n        </Button>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {X} from \"react-bootstrap-icons\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type FailedStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const FailedStepPost : FC<FailedStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <div>\n           {children}\n           <motion.div\n                onAnimationComplete={()=>{\n                    done && done(false);\n                }}\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    scale : [0, 1.5, 1.1, 1.0, 1.0],\n                    color : Colors.failedRed\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .5\n                }}\n            >\n                <X size={60}/>\n            </motion.div>\n            <motion.div\n                style={{\n                    display: \"grid\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\" \n                }}\n                animate={{\n                    display : [\"none\", \"block\"],\n                    opacity : [0.0, 0.0, 0.0, 1.0],\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .75\n                }}\n            >\n                <AthenaButton \n                    size={\"lg\"}\n                    primaryColor={Colors.Maintheme} \n                    secondaryColor={Colors.primaryTextColor}>Retry</AthenaButton>\n            </motion.div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport {SucceededStepPost} from \"./SuceededStepPost\";\nimport {FailedStepPost} from \"./FailedStepPost\";\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type StepPostProps = {\n    done ? : (success : boolean)=>void,\n    success ? : boolean\n}\n\nconst StepPost : FC<StepPostProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    done,\n    success,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\",\n                justifyContent : \"center\",\n                justifyItems : \"center\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            opacity : success ? [1.0, .25, 0] : 1.0,\n                            y : success ? [0, 0, 100] : 0\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : 1\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.Maintheme\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : success ? [1.0, 0, 0] : 1.0\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 1\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                {success && <SucceededStepPost done={done}>\n                    {Content}\n                </SucceededStepPost>}\n                {!success && <FailedStepPost done={done}>\n                    {Content}\n                </FailedStepPost>}\n            </div>\n    )\n\n}\n\nStepPost.Title = generateNamedMember(\"Title\");\nStepPost.Info = generateNamedMember(\"Info\");\nStepPost.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPost}","import React, {FC, ReactElement} from 'react';\nimport { StepContainer } from './StepContainer';\nimport { StepPre, } from './StepPre';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport { Members } from './StepType';\nimport {StepPost} from \"./StepPost\";\nimport { ReadyT } from '../../Ready/AristophanesReady/AristophanesReady';\n\n\nexport type StepProps = {\n    style ? : React.CSSProperties,\n    ready ? : ReadyT,\n    done ? : (success : boolean)=>void\n}\n\nconst Step : FC<StepProps> & {\n    \n    Title : FC,\n    Info : FC,\n    Content : FC\n\n}  = ({\n    style,\n    children,\n    done,\n    ready = \"not ready\"\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children)\n\n    return (\n\n        <>{ready === \"not ready\" ? <StepPre>\n            <StepPre.Title>\n                {Title}\n            </StepPre.Title>\n            <StepPre.Info>\n                {Info}\n            </StepPre.Info>\n            <StepPre.Content>\n                {Content}\n            </StepPre.Content>\n        </StepPre> : ready === \"ready\" ? \n        <StepPost success={true} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost> : \n        <StepPost success={false} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost>\n        }\n        \n        </>\n\n    )\n\n}\n\nStep.Title = generateNamedMember(\"Title\");\nStep.Info = generateNamedMember(\"Info\");\nStep.Content = generateNamedMember(\"Content\");\n\nexport {Step}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type CrtStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const CrtStep : FC<CrtStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}\n        >\n            <Step.Title>\n                Step 2: Checking Root CA\n            </Step.Title>\n            <Step.Info>\n                You must have installed our Root CA to use this application.\n            </Step.Info>\n            <Step.Content>\n                <Key size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type WalletStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const WalletStep : FC<WalletStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}>\n            <Step.Title>\n               Connecting to MetaMask\n            </Step.Title>\n            <Step.Info>\n                We need to connect to your MetaMask to run the application.\n            </Step.Info>\n            <Step.Content>\n                <img \n                    width={60}\n                    src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/1200px-MetaMask_Fox.svg.png\"}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\nimport { CpuFill } from 'react-bootstrap-icons';\nimport { useState } from 'react';\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\n\nexport type EnclaveStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const EnclaveStep : FC<EnclaveStepProps>  = ({\n    ready,\n    done \n}) =>{\n\n    return (\n\n        <Step ready={ready} done={done}>\n            <Step.Title>\n                Step 3: Connecting to an enclave\n            </Step.Title>\n            <Step.Info>\n                Any oracles that require an enclave will be executed against the one we find for you.\n            </Step.Info>\n            <Step.Content>\n                <CpuFill size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {ReadyT} from \"../../Components/Ready/AristophanesReady\";\nimport { CrtStep } from './CrtStep';\nimport {WalletStep} from \"./WalletStep\";\nimport {EnclaveStep} from \"./EnclaveStep\";\n\nexport const AllSteps = [\"wallet\"];\n\nexport type StepStatusT = {\n    [key in typeof AllSteps[number]] : ReadyT\n}\n\nexport type StepsProps = {\n    done ? : (which : string, success : boolean)=>void\n    status ? : StepStatusT,\n    which ? : typeof AllSteps[number],\n}\n\nexport const Steps : FC<StepsProps>  = ({\n    done,\n    status = {\n        crt : \"not ready\",\n        wallet : \"not ready\",\n        enclave : \"not ready\"\n    },\n    which  = \"crt\"\n}) =>{\n\n    const handleDone = (success : boolean)=>{\n        done && done(which, success);\n    }\n\n    if(which === \"crt\"){\n\n        return (\n            <CrtStep ready={status[which]} done={handleDone}/>\n        )\n\n    }\n\n    if(which === \"wallet\"){\n        return (\n            <WalletStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    if(which === \"enclave\"){\n        return (\n            <EnclaveStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    return (\n\n        <>Step not found.</>\n\n    )\n\n}","export const simulateNetworkRequest =  async <T extends any>(value : T, upperBound : number = 5000) : Promise<T> =>{\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            resolve(value);\n        }, Math.random() * upperBound)\n    })\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {Steps, AllSteps, StepStatusT} from \"./Steps\";\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\n\nexport type RunStepsProps = {\n    done ? : ()=>void,\n    setStepStatus ? : (stepStatus : StepStatusT)=>void,\n    stepStatus : StepStatusT\n}\n\nexport const RunSteps : FC<RunStepsProps>  = ({\n    done,\n    setStepStatus,\n    stepStatus\n}) =>{\n\n    const [stepIndex, setStepIndex] = useState(0);\n    const [allDone, setAllDone] = useState(false);\n\n    const handleDone = (which : string, success : boolean)=>{\n        const index = AllSteps.indexOf(which);\n        if((index !== undefined) && (index < AllSteps.length - 1) && success){\n            setStepIndex(stepIndex + 1);\n            return;\n        }\n        if((index !== undefined) && (index > AllSteps.length - 2) && success){\n            setAllDone(true);\n        }\n    }\n\n    useEffect(()=>{\n\n        simulateNetworkRequest<StepStatusT>({\n            ...stepStatus,\n            [AllSteps[stepIndex]] : \"ready\"\n        }).then((data)=>{\n            setStepStatus && setStepStatus(data)\n        })\n\n    }, [stepStatus])\n\n    useEffect(()=>{\n        if(allDone){\n            done && done();\n        }\n    })\n\n    return (\n\n        <Steps \n        done={handleDone}\n        which={AllSteps[stepIndex]}\n        status={stepStatus}/>\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {Step} from \"../../Components/Walkthrough/Step\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {RunSteps} from \"../../Statics/Steps/RunSteps\";\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport { ethers } from 'ethers';\n\ndeclare global {\n    interface Window {\n        ethereum : ethers.providers.ExternalProvider\n    }\n}\n\nexport type NotReadyToRunProps = {\n\n    handleAllDone : ()=>void,\n    stepStatus : StepStatusT,\n    setStepStatus : (stepStatus : StepStatusT)=>void\n\n}\n\nexport const NotReadyToRun : FC<NotReadyToRunProps>  = ({\n    handleAllDone,\n    stepStatus,\n    setStepStatus\n}) =>{\n   \n    return (<RunSteps done={handleAllDone} setStepStatus={setStepStatus} stepStatus={stepStatus}/>);\n\n}","import { Octokit } from \"@octokit/rest\";\nimport to from \"await-to-js\";\nimport {fromByteArray} from \"base64-js\";\nconst { createPullRequest } = require(\"octokit-plugin-create-pull-request\");\n\nexport const MyOctokit = Octokit.plugin(createPullRequest);\nexport const octokit = new MyOctokit({\n    auth : process.env.REACT_APP_GITHUB_TOKEN\n});\n\nexport const getSha = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    const { data: { sha } } = await octokit.request(`GET /repos/${args.owner}/${args.repo}/contents/${args.path}`);\n\n    return sha\n}\n\nexport const getFileBlob = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    return await octokit.rest.git.getBlob({\n        owner : args.owner,\n        repo : args.repo,\n        file_sha : await getSha({\n            owner : args.owner,\n            repo : args.repo,\n            path : args.path\n        })\n    })\n\n}\n\n/**\n * https://stackoverflow.com/questions/30106476/using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\n * @param str \n * @returns \n */\nfunction b64DecodeUnicode(str : string) {\n    return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n    }).join(''))\n}\n\nexport const getFileText = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n}) : Promise<string>=> {\n\n    const [error, text] = await to(\n        (await fetch(`https://raw.githubusercontent.com/${args.owner}/${args.repo}/main/${args.path}`)).text()\n    )\n\n    if(error){\n        throw error;\n    }\n\n    return text as string;\n\n}","import { getFileBlob, getFileText, getSha, octokit } from \"../../Sytems/Octokit\";\nimport {to} from \"await-to-js\";\n\nexport interface DappDataI {\n    name : string,\n    readme : string,\n    oracle : string,\n    appTile : string,\n    contract : OpenContractI,\n    openContractsInterface : OpenContractsInterfaceI,\n    dappInterface : OpenContractInterfaceI\n}\n\nexport interface DappI extends Partial<DappDataI>{\n    __isDapp__ : true\n    id : string\n    gitUrl : string\n}\n\nexport const isDapp = (obj : any) : obj is DappI => {\n\n    return obj.__isDapp__;\n\n}\n\nexport const parseGitUrl = (url : string) : {\n    owner : string |undefined,\n    repo : string | undefined,\n    branch : string | undefined\n}=>{\n\n    const _indexCom = url.indexOf(\".com\");\n    const indexCom = _indexCom > 0 ? _indexCom + 4 : 0;\n    const substr = url.substring(indexCom).trim().replace(/^\\/*|-\\/*$/, \"\");\n\n    const split = substr.split(\"/\");\n\n    console.log(split);\n\n    return {\n        owner : split.length ? split[0] : undefined,\n        repo : split.length > 1 ? split[1] : undefined,\n        branch : split.length > 2 ? split[2] : undefined\n    }\n    \n\n}\n\nconst README = 'README.md';\n\nexport const parseName = (readme : string)=>{\n\n    const lines = readme.split(\"\\n\");\n    return lines.length ? \n                    lines[0].replace(/(\\W|\\s)/, \"\").trim()\n                    : \"Unnamed\"\n\n\n}\n\nexport const getDappName = async (dapp : DappI, onGet ? : (name : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    \n\n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n    const name = parseName(readme||\"\");\n\n    onGet && onGet(name);\n\n    return name;\n\n}\n\nexport const isDescriptionLine = (line : string)=>{\n\n    return (\n        line.length < 1 ||\n        line[0] !== \"#\"\n    )\n\n}\n\nexport const getDescriptionLines = (readme : string) : [number, number]=>{\n\n    const lines = readme.split(\"\\n\");\n\n    if(lines.length < 2){\n        return [-1, -1];\n    }\n\n    if(!isDescriptionLine(lines[1])){\n        return [-1, -1];\n    }\n\n    let i = 1;\n    while(i < lines.length && isDescriptionLine(lines[i])) ++i;\n\n    return [1, i];\n\n}\n\nexport const parseDescription = (readme : string) : string=>{\n\n    const descriptionLines = getDescriptionLines(readme);\n\n    return readme.split(\"\\n\").slice(descriptionLines[0], descriptionLines[1] + 1).join(\"\\n\");\n\n}\n\nexport const getDescription = async (dapp : DappI, onGet ? : (description : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n\n    const description = parseDescription(readme||\"\");\n\n\n    onGet && onGet(description);\n\n    return description;\n\n}\n\nexport const SOLIDITY = \"contract.sol\";\n\nexport const getDappSolidityContract = async (dapp : DappI, onGet ? : (contract : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, contract] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : SOLIDITY\n    })) : [undefined, \"\"];\n\n    if(err) throw err;\n\n    onGet && onGet(contract||\"\");\n\n    return contract||\"\";\n\n}\n\nexport const ORACLE = \"oracle.py\";\n\nexport const getDappOracle = async (dapp : DappI, onGet ? : (oracle : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const oracle = owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : ORACLE\n    }) : \"\";\n\n    onGet && onGet(oracle);\n\n    return oracle;\n\n}\n\nexport const APPTILE = \"tile\";\n\nexport const imageUriFromRepoAndOwner = (args : {\n    owner : string,\n    repo : string,\n    branch ? : string\n    type : string\n})=>{\n\n    return `https://raw.githubusercontent.com/${args.owner}/${args.repo}/${args.branch||\"main\"}/${APPTILE}.${args.type}`\n\n}\n\nexport const getDappImageUri = async (dapp : DappI, onGet ? : (imageUri : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    let uri =  \"\";\n    try {\n\n        const ext = \"png\";\n\n        await getFileBlob({\n            owner : owner||\"\",\n            repo : repo||\"\",\n            path : `${APPTILE}.${ext}`\n        })\n\n        uri = owner && repo ? imageUriFromRepoAndOwner({\n            owner : owner,\n            repo : repo,\n            type : ext\n        })  : \"\"\n\n    \n\n    } catch(e){\n\n        try {\n\n            const ext = \"jpg\"\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n\n        } catch(e){\n\n            const ext = \"jpg\"\n\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n        }\n\n    } \n\n    onGet && onGet(uri);\n\n    return uri;\n\n}\n\nexport const getDappReadMe = async (dapp : DappI, onGet ? : (readme : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const readme = decodeURI(owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    }) : \"\");\n\n    onGet && onGet(readme);\n\n    return readme;\n\n}\n\nexport const jsonInterfacePath = \"interface.json\";\nexport const getDappInterface = async (\n    dapp : DappI,\n    onGet ? : (dappInterface : OpenContractInterfaceI)=>void\n) : Promise<OpenContractInterfaceI>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    const dappInterface = (owner && repo) ? JSON.parse(\n        await getFileText({\n            owner : owner,\n            repo : repo,\n            path : jsonInterfacePath\n        })\n    ) : undefined\n\n    if(!dappInterface){\n        throw new Error(\"Failed to find a Dapp Interface.\");\n    }\n\n    onGet && onGet(dappInterface);\n\n    return dappInterface;\n\n}\n\nexport const ocInterfacePath = \"/protocol/opencontracts_interface.json\"\nexport const getOpenContractsInterface = async (\n    onGet ? : (dappInterface : OpenContractsInterfaceI)=>void\n) : Promise<OpenContractsInterfaceI>=>{\n\n    \n\n    const ocInterface = JSON.parse(await (await fetch(ocInterfacePath)).text())\n\n    if(!ocInterface){\n        throw new Error(\"Failed to find the Open Contracts interface for this site.\");\n    }\n\n    onGet && onGet(ocInterface);\n\n    return ocInterface;\n\n}\n\nexport const getDappContract = async (\n    dapp : DappI,\n    onGet ? : (contract : OpenContractI)=>void\n) : Promise<OpenContractI>=>{\n\n    const opencontract = await window.OpenContracts();\n    const dappInterface = dapp.dappInterface|| await getDappInterface(dapp);\n    const openContractsInterface = dapp.openContractsInterface || await getOpenContractsInterface();\n\n    opencontract.parseContracts(openContractsInterface, dappInterface);\n\n    onGet && onGet(opencontract);\n\n    return opencontract;\n\n}\n\nexport const getDappInfo = async (\n    dapp : DappI\n)=>{\n\n    \n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    return owner && repo && await octokit.rest.repos.get({\n        owner : owner,\n        repo : repo\n    });\n\n}\n","import React, {FC, ReactElement, useState} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport {AthenaButton} from \"../../../Components/Buttons\";\nimport {Colors} from \"../../../Theme\";\nimport {Grid3x3GapFill} from \"react-bootstrap-icons\";\n\nconst Members = [\"Single\", \"Grid\"]\n\n\nexport type ApolloRunDappContentProps = {\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void\n}\n\nconst ApolloRunDappContent : FC<ApolloRunDappContentProps> & {\n    Single : FC,\n    Grid : FC\n}  = ({\n    children,\n    grid,\n    setGrid\n}) =>{\n\n    const {\n        Single,\n        Grid\n    } = getComponentMembers(Members, children);\n\n    const handleGrid = ()=>{\n        setGrid && setGrid(true);\n    }\n    const handleSingle = ()=>{\n        setGrid && setGrid(false);\n    }\n\n    \n\n    return (\n\n        <div>\n            <div style={{\n                display : \"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                borderBottom : `1px solid ${Colors.Maintheme}`,\n                position : \"relative\"\n            }}>\n                <AthenaButton\n                    onClick={handleGrid}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={Colors.quartenaryTextColor}\n                    style={{\n                        zIndex : 100,\n                        position : \"relative\",\n                        top : grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop : grid ? `1px solid ${Colors.Maintheme}` : \"none\",\n                        borderLeft : grid ? `1px solid ${Colors.Maintheme}` : \"none\",\n                        borderBottom : grid ? `1px solid ${Colors.quartenaryTextColor}` : \"none\",\n                        borderRight : grid ? `1px solid ${Colors.Maintheme}` : \"none\"\n                    }}\n                >\n                    <Grid3x3GapFill/>\n                </AthenaButton>\n                <AthenaButton\n                    onClick={handleSingle}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={Colors.quartenaryTextColor}\n                    style={{\n                        zIndex : 100,\n                        position : \"relative\",\n                        top : !grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop : !grid ? `1px solid ${Colors.Maintheme}` : \"none\",\n                        borderLeft : !grid ? `1px solid ${Colors.Maintheme}` : \"none\",\n                        borderBottom : !grid ? `1px solid ${Colors.quartenaryTextColor}` : \"none\",\n                        borderRight : !grid ? `1px solid ${Colors.Maintheme}` : \"none\"\n                    }}\n                >\n                    <b>ƒ<sub>𝑥</sub></b>\n                </AthenaButton>\n            </div>\n            <div style={{\n                background : Colors.quartenaryTextColor\n            }}>\n                {grid ? Grid : Single}\n            </div>\n        </div>\n\n    )\n\n}\n\nApolloRunDappContent.Grid = generateNamedMember(\"Grid\");\nApolloRunDappContent.Single = generateNamedMember(\"Single\");\n\nexport {ApolloRunDappContent}","import React, {Children, FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport MediaQuery from \"react-responsive\";\n\nconst Members = [\"Desktop\", \"Laptop\", \"Tablet\", \"Mobile\"] as const;\n\nexport type MediaResponsiveProps = {}\n\n/**\n * Uses media queries to control component display by media type.\n * @param param0 \n * @returns a ReactNode displaying the appropriate component view by media type.\n */\nconst MediaResponsive : FC<MediaResponsiveProps> & {\n    Desktop : FC,\n    Laptop : FC,\n    Tablet : FC,\n    Mobile : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Desktop,\n        Laptop,\n        Tablet,\n        Mobile\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <>\n            <MediaQuery minWidth={1200}>\n                {Desktop}\n            </MediaQuery>   \n            <MediaQuery minWidth={992} maxWidth={1199}>\n                {Laptop}\n            </MediaQuery>\n            <MediaQuery minWidth={768} maxWidth={991}>\n                {Tablet}\n            </MediaQuery>\n            <MediaQuery maxWidth={767}>\n                {Mobile}\n            </MediaQuery>\n        </>\n\n    )\n\n}\n\nMediaResponsive.Desktop = generateNamedMember(\"Desktop\");\nMediaResponsive.Laptop = generateNamedMember(\"Laptop\");\nMediaResponsive.Tablet = generateNamedMember(\"Tablet\");\nMediaResponsive.Mobile = generateNamedMember(\"Mobile\")\n\nexport { MediaResponsive };\n\n","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappPutI } from '../DappPutType';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Pre\", \"Post\"];\n\nexport type DefaultHeaderProps = {\n    dappPut : DappPutI,\n    style ? : React.CSSProperties\n}\n\nconst DefaultHeader : FC<DefaultHeaderProps> & {\n    Pre : FC,\n    Post : FC\n}  = ({\n    dappPut,\n    children,\n    style\n}) =>{\n\n    const {\n        Pre,\n        Post\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div>\n            <div style={{\n                display :\"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                fontSize : \"18px\",\n                color : Colors.primaryTextColor,\n                ...style\n            }}><b>{Pre}&emsp;</b>{dappPut.name}{Post}</div>\n            {dappPut.description && <><br/>\n            <p style={{\n                color : Colors.secondaryTextColor\n            }}>\n            {dappPut.description}\n            </p></>}\n        </div>\n\n    )\n\n}\n\nDefaultHeader.Pre = generateNamedMember(\"Pre\");\nDefaultHeader.Post = generateNamedMember(\"Post\");\n\nexport {DefaultHeader}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappInputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappInputHeaderProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n}\n\nexport const DappInputHeader : FC<DappInputHeaderProps>  = ({\n    dappInput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappInput} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Pre>\n                𝑥\n            </DefaultHeader.Pre>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}>{dappInput.type}</i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {DappI} from \"../Dapp\";\nimport {AthenaButton} from \"../../../Components/Buttons/AthenaButton\";\nimport {Colors, DesktopSizes} from \"../../../Theme\";\nimport { DappInputHeader } from '../../DappPut/DappInput/DappInputHeader';\nimport { DappInputI } from '../../DappPut/DappPutType';\n\nexport type ApolloDappFunctionProps = {\n    dapp : DappI,\n    func : OpenContractFunctionI,\n    selected : boolean,\n    onClick ? : (\n        e : React.MouseEvent,\n        name : string\n    )=>void,\n    style ? : React.CSSProperties\n}\n\nexport const ApolloDappFunction : FC<ApolloDappFunctionProps>  = ({\n    dapp,\n    func,\n    selected,\n    onClick,\n    style \n}) =>{\n\n    const handleClick = (e : React.MouseEvent)=>{\n        onClick && onClick(e, func.name);\n    }\n\n    const inputs = func.inputs.map((input)=>{\n        return (<DappInputHeader dappInput={input as DappInputI} style={{\n            width : \"50px\",\n            fontSize : \"16px\"\n        }}/>)\n    })\n\n    return (\n\n    \n            <AthenaButton \n            onClick={handleClick}\n                style={{\n                    wordWrap : \"normal\",\n                    width : \"auto\",\n                    fontSize : \"18px\",\n                    ...style\n                }}\n            \n                primaryColor={Colors.Maintheme} secondaryColor={\"white\"}>\n                       <div style={{\n                           overflowX : \"scroll\",\n                           overflowY : \"scroll\",\n                           padding : DesktopSizes.Padding.standard\n                       }}>\n                            <div style={{\n                                display : \"flex\",\n                                justifyContent : \"left\",\n                                alignContent : \"center\",\n                                alignItems : \"center\",\n                            }}>\n                                <div>\n                                    <b>ƒ<sub>𝑥</sub></b>&emsp;\n                                </div>\n                                <hr style={{\n                                    color : Colors.Maintheme\n                                }}/>\n                                <div>\n                                    {func.name}\n                                </div>\n                            </div>  \n                            <div>\n                                {inputs}\n                            </div>\n                            <div style={{\n                                textAlign : \"left\"\n                            }}>\n                                {func.requiresOracle && <i style={{\n                                    color : Colors.deepCyan,\n                                    fontSize : \"16px\",\n                                    textAlign : \"left\"\n                                }}>\n                                    Oracle required.  \n                                </i>}\n                            </div>\n                       </div>\n            </AthenaButton>\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CollectionFill } from 'react-bootstrap-icons';\nimport { DappI } from '../Dapp';\nimport {ApolloDappFunction} from \"./ApolloRunDappFunction\";\nimport {LeftRightScrollAdorno} from \"../../../Components/Scroll/LeftRightScroll\";\nimport { DesktopSizes } from '../../../Theme';\nimport Masonry from \"react-masonry-css\";\n\nexport type ApolloDappFunctionsProps = {\n    dapp : DappI,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloDappFunctions : FC<ApolloDappFunctionsProps>  = ({\n    dapp,\n    which,\n    setWhich\n}) =>{\n\n    const onFunctionClick = (e : React.MouseEvent, name : string)=>{\n        setWhich && setWhich(name);\n    }\n\n\n    const funcs = dapp.contract && dapp.contract ? dapp.contract.contractFunctions.map((func)=>{\n\n\n        return (\n            <div style={{\n                padding : DesktopSizes.Padding.standard\n            }}>\n                <ApolloDappFunction \n                    style={{\n                        width : \"100%\",\n                        height : \"auto\",\n                        borderRadius : DesktopSizes.BorderRadius.standard\n                    }}\n                    onClick={onFunctionClick}\n                    selected={func.name === which} \n                    dapp={dapp} \n                    func={func}/>\n            </div>\n        )\n    }) : <></>\n\n    return (\n\n        <Masonry \n            className={\"masonry\"}\n            breakpointCols={3}>\n            {funcs}\n        </Masonry>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CollectionFill } from 'react-bootstrap-icons';\nimport { DappI } from '../Dapp';\nimport {ApolloDappFunction} from \"./ApolloRunDappFunction\";\nimport {LeftRightScrollAdorno} from \"../../../Components/Scroll/LeftRightScroll\";\nimport { DesktopSizes } from '../../../Theme';\nimport Masonry from \"react-masonry-css\";\n\nexport type ApolloDappFunctionsMobileProps = {\n    dapp : DappI,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloDappFunctionsMobile : FC<ApolloDappFunctionsMobileProps>  = ({\n    dapp,\n    which,\n    setWhich\n}) =>{\n\n    const onFunctionClick = (e : React.MouseEvent, name : string)=>{\n        setWhich && setWhich(name);\n    }\n\n\n    const funcs = dapp.contract && dapp.contract ? dapp.contract.contractFunctions.map((func)=>{\n\n\n        return (\n            <div style={{\n                padding : DesktopSizes.Padding.standard\n            }}>\n                <ApolloDappFunction \n                    style={{\n                        width : \"100%\",\n                        height : \"auto\",\n                        borderRadius : DesktopSizes.BorderRadius.standard\n                    }}\n                    onClick={onFunctionClick}\n                    selected={func.name === which} \n                    dapp={dapp} \n                    func={func}/>\n            </div>\n        )\n    }) : <></>\n\n    return (\n\n        <>\n            {funcs}\n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MediaResponsive } from '../../../Sytems';\nimport { DappI } from '../Dapp';\nimport { ApolloDappFunctions } from './ApolloRunDappFunctions';\nimport {ApolloDappFunctionsMobile} from \"./ApolloRunDappFunctionsMobile\";\n\n\nexport type ApolloRunDappFunctionGridViewProps = {\n    which ? : string,\n    dapp : DappI,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappFunctionGridView : FC<ApolloRunDappFunctionGridViewProps>  = ({\n    which,\n    setWhich,\n    dapp\n}) =>{\n\n    return (\n\n        <MediaResponsive>\n            <MediaResponsive.Desktop>\n                <ApolloDappFunctions dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Desktop>\n            <MediaResponsive.Laptop>\n                <ApolloDappFunctions dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Laptop>\n            <MediaResponsive.Mobile>\n                <ApolloDappFunctionsMobile dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Mobile>\n            <MediaResponsive.Tablet>\n                <ApolloDappFunctionsMobile dapp={dapp} setWhich={setWhich} which={which}/>\n            </MediaResponsive.Tablet>\n        </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInputHeader } from './DappInputHeader';\nimport { DappInputContent } from './DappInputContent';\nimport { darkenStandard } from '../Methods';\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n    setInput ? : (input : DappInputI)=>void,\n}\n\nexport const DappInput : FC<DappPutInputProps>  = ({\n    dappInput,\n    style,\n    setInput\n}) =>{\n\n    return (\n\n        <></>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport { DesktopSizes } from '../../Theme';\n\nconst Members = [\"Content\", \"Header\"];\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties,\n    end ? : boolean\n}\n\nconst DappPutLayout : FC<DappPutInputProps> & {\n    Header : FC,\n    Content : FC\n} = ({\n    style,\n    end,\n    children\n}) =>{\n\n    const {\n        Header,\n        Content\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            textAlign : \"left\",\n            overflowWrap : \"anywhere\",\n            paddingTop : DesktopSizes.Padding.standard,\n            paddingBottom : DesktopSizes.Padding.standard,\n            paddingLeft : DesktopSizes.Padding.standard,\n            paddingRight : DesktopSizes.Padding.standard,\n            borderRadius : DesktopSizes.BorderRadius.standard,\n            borderCollapse : \"collapse\",\n            ...style,\n        }}>\n            <div>\n                {Header}\n            </div>\n            <div>\n                {Content}\n            </div>\n        </div>\n\n    )\n\n}\n\nDappPutLayout.Header = generateNamedMember(\"Header\");\nDappPutLayout.Content = generateNamedMember(\"Content\")\n\nexport {DappPutLayout};","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards';\nimport { HandIndexFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../../Theme';\n\nexport type DappInteractputHeaderProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputHeader : FC<DappInteractputHeaderProps>  = ({\n    dappInteractput\n}) =>{\n\n    return (\n\n        <DefaultHeader \n            style={{\n                color : Colors.lilac\n            }}\n            dappPut={dappInteractput}>\n            <DefaultHeader.Pre>\n                <HandIndexFill size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import Color from \"color\";\nimport React from \"react\";\n\nexport const lightenStandard = (color : React.CSSProperties[\"color\"])=>{\n\n    return Color(color).lighten(.2).hex();\n\n}\n\nexport const darkenStandard = (color : React.CSSProperties[\"color\"])=>{\n    return Color(color).darken(.2).hex();\n}","import React, {FC, ReactElement} from 'react';\nimport {AthenaButton} from \"../../../Components/Buttons\"\nimport {\n    lightenStandard,\n    darkenStandard\n} from \"../Methods\";\nimport {Colors} from \"../../../Theme\";\nimport {\n    DappInteractputI\n} from \"../DappPutType\";\nimport { useNavigate } from 'react-router-dom';\n\nexport type DappInteractputContentProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputContent : FC<DappInteractputContentProps>  = ({\n    dappInteractput\n}) =>{\n\n    const navigate = useNavigate();\n\n    return (\n\n        <div style={{\n            display : \"flex\"\n        }}>\n            <AthenaButton \n                onClick={()=>{\n                    navigate(dappInteractput.value)\n                }}\n                primaryColor={darkenStandard(Colors.lilac)}\n                secondaryColor={lightenStandard(Colors.deepPurple)}>\n                    Launch interactive session\n                </AthenaButton>\n                &emsp;\n                <AthenaButton\n                    primaryColor={darkenStandard(Colors.failedRed)}\n                    secondaryColor={lightenStandard(Colors.deepPurple)}\n                >\n                    Reject interactive session\n                </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInteractputHeader } from './DappInteractputHeader';\nimport {DappInteractputContent} from \"./DappInteractputContent\";\n\nexport type DappPutInteractputProps = {\n    style ? : React.CSSProperties\n    dappInteractput : DappInteractputI,\n    end ? : boolean\n}\n\nexport const DappInteractput : FC<DappPutInteractputProps>  = ({\n    dappInteractput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            border : `1px solid ${Colors.lilac}`,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappInteractputHeader dappInteractput={dappInteractput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappInteractputContent dappInteractput={dappInteractput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards/DefaultHeader\";\nimport {ArrowReturnRight} from \"react-bootstrap-icons\";\n\nexport type DappOutputHeaderProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputHeader : FC<DappOutputHeaderProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappOutput}>\n            <DefaultHeader.Pre>\n                <ArrowReturnRight size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Clipboard } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappOutputI } from '../DappPutType';\n\nexport type DappOutputContentProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputContent : FC<DappOutputContentProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor,\n            width : \"100%\",\n            display : \"flex\",\n            alignContent : 'center',\n            alignItems : \"center\"\n        }}>\n            <AthenaButton primaryColor={Colors.royalBlue} secondaryColor={Colors.skyBlue} action={async ()=>{\n                navigator.clipboard.writeText(dappOutput.value||\"\");\n            }}>\n               <div style={{\n                   display : \"flex\",\n                   alignContent : \"center\",\n                   alignItems : \"center\"\n               }}>\n                    <Clipboard \n                    style={{\n                        color : Colors.primaryTextColor\n                    }}/>\n               </div>\n            </AthenaButton>\n            &emsp;\n            <div style={{\n                color : Colors.secondaryTextColor\n            }}>\n                {dappOutput.value}\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport {DappOutputHeader} from \"./DappOutputHeader\";\nimport { DappOutputContent } from '../DappOutput/DappOutputContent';\n\nexport type DappPutOutputProps = {\n    style ? : React.CSSProperties\n    dappOutput : DappOutputI,\n    end ? : boolean\n}\n\nexport const DappOutput : FC<DappPutOutputProps>  = ({\n    style,\n    dappOutput,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : Colors.skyBlue,\n            border : `1px solid ${Colors.royalBlue}`,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOutputHeader dappOutput={dappOutput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOutputContent dappOutput={dappOutput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill} from \"react-bootstrap-icons\";\nimport { Colors } from '../../../Theme';\n\nexport type DappErrputHeaderProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputHeader : FC<DappErrputHeaderProps>  = ({\n    dappErrput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            style={{\n                color : Colors.failedRed\n            }}\n            dappPut={dappErrput}>\n                <DefaultHeader.Pre>\n                    <ExclamationCircleFill size={18}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappErrputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\n\nexport type DappErrputContentProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputContent : FC<DappErrputContentProps>  = ({\n    dappErrput\n}) =>{\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor\n        }}>\n            {dappErrput.value}\n            <AthenaButton\n                    onClick={dappErrput.resetArgs}\n                    primaryColor={darkenStandard(Colors.failedRed)}\n                    secondaryColor={lightenStandard(Colors.fadedRed)}\n                >\n                    Reset args\n                </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappErrputHeader } from './DappErrputHeader';\nimport { DappErrputContent } from './DappErrputContent';\n\nexport type DappPutErrputProps = {\n    style ? : React.CSSProperties\n    dappErrput : DappErrputI,\n    end ? : boolean\n}\n\nexport const DappErrput : FC<DappPutErrputProps>  = ({\n    dappErrput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            border : `1px solid ${Colors.failedRed}`,\n            color : Colors.Maintheme,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappErrputHeader dappErrput={dappErrput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappErrputContent dappErrput={dappErrput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill} from \"react-bootstrap-icons\";\n\nexport type DappDescputHeaderProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputHeader : FC<DappDescputHeaderProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            dappPut={dappDescput}>\n                <DefaultHeader.Pre>\n                    <b>ƒ<sub>𝑥</sub></b>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappDescputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\n\nexport type DappDescputContentProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputContent : FC<DappDescputContentProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor\n        }}>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappDescputHeader } from './DappDescputHeader';\nimport { DappDescputContent } from './DappDescputContent';\n\nexport type DappPutDescputProps = {\n    style ? : React.CSSProperties\n    dappDescput : DappDescputI\n}\n\nexport const DappDescput : FC<DappPutDescputProps>  = ({\n    dappDescput,\n    style\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : Colors.arizonaOrange,\n            border : `1px solid ${Colors.infoYellow}`,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappDescputHeader dappDescput={dappDescput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappDescputContent dappDescput={dappDescput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill, Eyeglasses} from \"react-bootstrap-icons\";\n\nexport type DappOracleputHeaderProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputHeader : FC<DappOracleputHeaderProps>  = ({\n    dappOracleput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            dappPut={dappOracleput}>\n                <DefaultHeader.Pre>\n                    <Eyeglasses size={24}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Check, X, Circle, CircleFill} from 'react-bootstrap-icons';\nimport { Ellipsis } from 'react-bootstrap/esm/PageItem';\nimport {ReadyT} from \"../../../Components/Ready\"\nimport { Colors } from '../../../Theme';\n\nexport type OracleLinkProps = {\n    ready ? :ReadyT,\n    link : string\n}\n\nexport const OracleLink : FC<OracleLinkProps>  = ({\n    ready,\n    link\n}) =>{\n\n\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n\n            <div style={{\n                width : \"30px\",\n                display : \"flex\",\n                alignItems : \"center\",\n                alignContent : 'center',\n                justifyItems : \"center\",\n                justifyContent : \"center\"\n            }}>\n                {ready === \"ready\"  && \n                    <Check size={20} style={{\n                        color : Colors.forestEdge\n                    }} />\n                }\n                {!ready || (ready === \"failed\") && \n                    <X size={20} style={{\n                        color : Colors.failedRed\n                    }}/>\n                }\n                {ready === \"not ready\" && \n                    <CircleFill size={10} style={{\n                        color : Colors.arizonaOrange\n                    }}/>\n                }\n            </div>\n            <div>\n            &emsp;<a style ={{\n                color  : Colors.babyBlue\n            }} href={link}>{link}</a>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useReducer} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappOracleputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\nimport {OracleLink} from \"./OracleLink\";\nimport { ReadyT } from '../../../Components/Ready';\n\nconst allPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        \n        return agg && (typeof obj[key] === \"string\")\n    }, true)\n}\n\nconst countPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg + ((typeof obj[key] === \"string\" ? 1 : 0) * 1)\n    }, 0)\n}\n\nexport type DappOracleputContentProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputContent : FC<DappOracleputContentProps>  = ({\n    dappOracleput\n}) =>{\n\n    const map = dappOracleput.contractFunction.oracleData||{};\n    const [oracleStatii, setOracleStatii] = useState<{[key : string] : ReadyT}>(\n        Object.keys(map).reduce((agg, key)=>{\n            return {\n                ...agg,\n                [key] : [typeof map[key] === \"string\"] ? \"ready\" :  \"not ready\"\n            }\n        }, {} as {[key : string] : ReadyT})\n    )\n    const [oracleStates, setOracleStates] = useReducer<\n        (state : {[key : string] : string}, data : {[key : string] : string})=>{[key : string] : string}\n    >(\n        (state, data)=>{\n            return {\n                ...state,\n                ...data\n            }\n        },\n        (dappOracleput.contractFunction.oracleData||{})as unknown as {[key : string] : string}\n    );\n    useEffect(()=>{\n        Object.keys(map).map((key)=>{\n            if((map[key] as Promise<String>).then){\n                (map[key] as Promise<String>).then((data)=>{\n                    setOracleStatii({\n                        ...oracleStatii,\n                        [key] : \"ready\"\n                    });\n                    \n                    setOracleStates({\n                        [key] : data\n                    } as {[key : string]: string})\n                }).catch(()=>{\n                    dappOracleput.contractFunction.oraclePromiseReject && \n                    dappOracleput.contractFunction.oraclePromiseReject();\n                    setOracleStatii({\n                        ...oracleStatii,\n                        [key] : \"not ready\"\n                    })      \n                })\n            }\n        })\n    }, [])\n\n    const allResolved = allPromisesResolved(oracleStates);\n    const resolveCount = countPromisesResolved(oracleStates);\n    const links = Object.keys(oracleStatii).map((key)=>{\n        return (\n            <OracleLink link={key} ready={oracleStatii[key]}/>\n        )\n    })\n\n    useEffect(()=>{\n        \n        if(allResolved\n            && oracleStates  \n            && dappOracleput.contractFunction.oraclePromiseResolve\n        ){\n            dappOracleput.setOracleData(\n                oracleStates\n            );\n            dappOracleput.contractFunction.oraclePromiseResolve(\n                oracleStates as {[key : string] : string}\n            );\n        }\n    })\n\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor\n        }}>\n           <div style={{\n               border : `1px solid ${Colors.cyan}`,\n               borderRadius : DesktopSizes.BorderRadius.standard,\n               padding : DesktopSizes.Padding.standard,\n               background : Colors.primaryTextColor,\n               color : Colors.deepCyan\n           }}>\n                <h6>{allResolved ? \"Finished\" : \"Awaiting...\"} {resolveCount}/{Object.keys(dappOracleput.contractFunction.oracleData||{}).length}</h6>\n                {links}\n           </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappOracleputHeader } from './DappOracleputHeader';\nimport { DappOracleputContent } from './DappOracleputContent';\n\nexport type DappPutOracleputProps = {\n    style ? : React.CSSProperties\n    dappOracleput : DappOracleputI,\n    end ? : boolean\n}\n\nexport const DappOracleput : FC<DappPutOracleputProps>  = ({\n    dappOracleput,\n    style,\n    end\n}) =>{\n\n    return (\n\n        <DappPutLayout \n        end={end}\n        style={{\n            background : \"white\",\n            border : `1px solid ${Colors.deepCyan}`,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOracleputHeader dappOracleput={dappOracleput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOracleputContent dappOracleput={dappOracleput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappResultputHeaderProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n}\n\nexport const DappResultputHeader : FC<DappResultputHeaderProps>  = ({\n    dappResultput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={{} as DappResultputI} style={{\n            color : Colors.forestEdge\n        }}>\n            <DefaultHeader.Pre>\n                Result     \n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\nimport { result } from 'cypress/types/lodash';\n\n\nexport type DappResultputContentProps = {\n    dappResultput : DappResultputI,\n    setResultput ? : (Resultput : DappResultputI)=>void\n}\n\nexport const DappResultputContent : FC<DappResultputContentProps>  = ({\n    dappResultput, \n    setResultput\n}) =>{\n\n    const onTextResultput = (text : string)=>{\n        setResultput && setResultput({\n            ...dappResultput,\n            value : text\n        })\n    }\n\n    return (\n\n        <div style={{\n            userSelect : \"text\",\n            display : \"flex\",\n            color : Colors.babyBlue,\n            fontSize : \"16px\"\n        }}>\n            &emsp;&emsp;<b>𝑦</b>&emsp;=&emsp;{dappResultput.value||\"No return value yet.\"}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappResultputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappResultputHeader } from './DappResultputHeader';\nimport { DappResultputContent } from './DappResultputContent';\nimport { darkenStandard } from '../Methods';\nimport { DesktopSizes } from '../../../Theme';\n\nexport type DappPutResultputProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n    setResultput ? : (Resultput : DappResultputI)=>void,\n}\n\nexport const DappResultput : FC<DappPutResultputProps>  = ({\n    dappResultput,\n    style,\n    setResultput\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : Colors.greenCeramic,\n            color : Colors.forestEdge,\n            borderTop : `1px solid ${Colors.forestEdge}`,\n            border : `1px solid ${Colors.forestEdge}`,\n            borderRadius : DesktopSizes.BorderRadius.standard,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappResultputHeader dappResultput={dappResultput} />\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappResultputContent setResultput={setResultput} dappResultput={dappResultput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI, DappPutI , DappErrputI, DappDescputI, DappInteractputI, DappOutputI, DappOracleputI, DappResultputI} from '../DappPutType';\nimport {DappInput} from \"../DappInput\";\nimport {DappOutput} from \"../DappOutput\";\nimport { DappDescput } from '../DappDescput';\nimport {DappInteractput} from \"../DappInteractput\";\nimport {DappErrput} from \"../DappErrput\";\nimport {DappOracleput} from \"../DappOracleput\";\nimport { DappResultput } from '../DappResultput';\n\nexport type DappPutProps = {\n    put : DappPutI,\n    index : number,\n    setPut ? : (put : DappPutI, index : number)=>void,\n    end ? : boolean\n}\n\nexport const DappPut : FC<DappPutProps>  = ({\n    put,\n    index,\n    setPut,\n    end\n}) =>{\n\n    const handleSetPut = (put : DappPutI)=>{\n\n        setPut && setPut(put, index);\n\n    }\n\n    switch(put.putType){\n\n        case (\"input\") :{\n\n            return (\n                <DappInput   dappInput={put as DappInputI} setInput={handleSetPut}/>\n            )\n\n        }\n\n        case (\"output\") :{\n\n            return (\n                <DappOutput end={end} dappOutput={put as DappOutputI}/>\n            )\n\n        }\n\n        case (\"error\") : {\n\n            return (\n                <DappErrput end={end} dappErrput={put as DappErrputI}/>\n            )\n\n        }\n\n        case (\"interactive\") : {\n\n            return (\n                <DappInteractput end={end} dappInteractput={put as DappInteractputI}/>\n            )\n\n        }\n\n        case (\"oracle\") : {\n            \n            return (\n                <DappOracleput end={end} dappOracleput={put as DappOracleputI}/>\n            )\n\n        }\n\n        case (\"result\") : {\n            return (\n                <DappResultput dappResultput={put as DappResultputI}/>\n            )\n        }\n\n        default : {\n            return (\n                <DappDescput dappDescput={put as DappDescputI}/>\n            )\n        }\n\n    }\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form, FormControlProps} from \"react-bootstrap\";\n\nexport type TextInputApolloProps = FormControlProps & {\n    style ? : React.CSSProperties,\n    onTextInput ? : (text : string)=>void,\n    onSubmit ? : (text : string)=>void,\n    placeholder ? : string,\n}\n\nexport const TextInputApollo : FC<TextInputApolloProps>  = (props) =>{\n    const {\n        onTextInput,\n        ...rest\n    } = {\n        ...props,\n        type : \"text\"\n    };\n    const handleKeyDown = (e : React.KeyboardEvent<HTMLInputElement>)=>{\n        const char = e.key.length < 2 ? e.key : \"\";\n        onTextInput && onTextInput((e.target as any).value + char);\n        if(e.key === \"Enter\"){\n            props.onSubmit && props.onSubmit((e.target as any).value);\n        }\n    }\n    return (\n        <Form.Control\n            onKeyDown={handleKeyDown}\n            {...rest}\n        />\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { Play, PlayCircleFill, PlayFill } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { DappI, parseGitUrl } from '../Dapp/Dapp';\nimport { DappInput, DappPut } from '../DappPut';\nimport { DappDescputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI } from '../DappPut/DappPutType';\nimport {to} from \"await-to-js\";\nimport { useEffect } from 'react';\nimport { DappInputHeader } from '../DappPut/DappInput/DappInputHeader';\nimport { DappResultput } from '../DappPut/DappResultput';\nimport { ArrowReturnRight } from 'react-bootstrap-icons';\nimport { TextInputApollo } from '../../Components/TextInput';\nexport const createResult = (contractFunction : OpenContractFunctionI) : DappResultputI=>{\n    return {\n        name : contractFunction.name,\n        value : contractFunction.result,\n        putType : \"result\"\n    }\n}\n\nexport type DappFunctionLogRunButtonProps = {\n    contractFunction : OpenContractFunctionI,\n    puts : DappPutI[],\n    setPut : (put : DappPutI, index : number)=>void\n}\n\nexport const DappFunctionLogRunButton : FC<DappFunctionLogRunButtonProps>  = ({\n    puts,\n    contractFunction,\n    setPut\n}) =>{\n\n    console.log(\"Puts received...\", puts);\n\n    const inputs = puts.reduce((agg, put, index)=>{\n        \n        const onTextInput = (text : string)=>{\n            setPut({\n                ...put,\n                value : text\n            } as DappInputI, index)\n        }\n        return [\n            ...agg,\n            ...put.putType === \"input\" ? [\n                (\n                    <div style={{\n                        alignContent : 'center',\n                        alignItems : \"center\",\n                        paddingBottom : DesktopSizes.Padding.standard,\n                        lineHeight : \"18px\"\n                    }}>\n                        <DappInputHeader dappInput={put as DappInputI} style={{\n                            width : \"50px\",\n                            fontSize : \"16px\",\n                        }}/>\n                        <br/>\n                        <div style={{\n                            display : \"flex\",\n                            color : Colors.secondaryTextColor,\n                            alignContent : \"center\",\n                            alignItems : \"center\",\n                            fontSize : \"16px\"\n                        }}>\n                           &emsp;<span style={{\n                               fontSize : \"16px\"\n                           }}>=&emsp;</span><TextInputApollo\n                            value={put.value ? put.value : \"\"}\n                            onTextInput={onTextInput}\n                            style={{\n                                fontSize : \"16px\"\n                           }}/>\n                        </div>\n                    </div>\n                )\n            ] : []\n        ]\n    }, [] as React.ReactNode[])\n    return (\n             <div style={{\n                position : \"relative\",\n            }}>\n                <div\n                    style={{\n                        width : \"100%\",\n                        padding : DesktopSizes.Padding.standard,\n                        borderTopLeftRadius : DesktopSizes.BorderRadius.standard,\n                        borderTopRightRadius : DesktopSizes.BorderRadius.standard,\n                        borderBottomLeftRadius : DesktopSizes.BorderRadius.standard,\n                        borderBottomRightRadius : DesktopSizes.BorderRadius.standard,\n                        borderLeft :`1px solid ${Colors.Maintheme}`,\n                        borderRight : `1px solid ${Colors.Maintheme}`,\n                        borderTop : `1px solid ${Colors.Maintheme}`,\n                        borderBottom : `1px solid ${Colors.Maintheme}`,\n                        background : 'white'\n                    }}>\n                    <div style={{\n                        fontSize : \"24px\",\n                        textAlign : \"left\"\n                    }}>\n                        <p><PlayCircleFill/>&emsp;{contractFunction.name}<sub>𝑥</sub></p>\n                        <div style={{\n                            paddingLeft : DesktopSizes.Padding.whitespacePreferred\n                        }}>\n                            {inputs}\n                        </div>\n                    </div>\n                </div>\n            </div>\n       \n      \n\n    )\n\n}","import React, {FC, ReactElement, useState, useEffect, useReducer} from 'react';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors } from '../../Theme';\nimport { lightenStandard, darkenStandard } from '../DappPut/Methods';\n\nconst allPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg && (typeof obj[key] === \"string\")\n    }, true)\n}\n\nconst countPromisesResolved = (obj : any)=>{\n    return Object.keys(obj).reduce((agg, key)=>{\n        return agg + ((typeof obj[key] === \"string\" ? 1 : 0) * 1)\n    }, 0)\n}\n\n\nexport type DappFunctionSubmitStateProps = {\n    contractFunction : OpenContractFunctionI,\n    call : ()=>Promise<any>,\n    loadOracleData : ()=>Promise<{[key : string] : string}>,\n    setFunc ? : (func : OpenContractFunctionI)=>void\n}\n\nexport const DappFunctionSubmitState : FC<DappFunctionSubmitStateProps>  = ({\n    contractFunction,\n    call,\n    loadOracleData,\n    setFunc\n}) =>{\n\n    const map = contractFunction.oracleData||{};\n    const [oracleStates, setOracleStates] = useReducer<\n        (state : {[key : string] : string}, data : {[key : string] : string})=>{[key : string] : string}\n    >(\n        (state, data)=>{\n            return {\n                ...state,\n                ...data\n            }\n        },\n        (contractFunction.oracleData||{})as unknown as {[key : string] : string}\n    );\n    const [oracleLoad, setOracleLoad] = useState(false);\n    const _loadOracleData = async ()=>{\n        setOracleLoad(true);\n        return await loadOracleData();\n    }\n    const resolved = allPromisesResolved(oracleStates);\n    const count = countPromisesResolved(oracleStates);\n    useEffect(()=>{\n        Object.keys(map).map((key)=>{\n            if((map[key] as Promise<String>).then){\n                (map[key] as Promise<String>).then((data)=>{\n                    setOracleStates({\n                        [key] : data\n                    } as {[key : string]: string})\n                }).catch(()=>{\n                    contractFunction.oraclePromiseReject && \n                    contractFunction.oraclePromiseReject(); \n                })\n            }\n        })\n    }, [contractFunction.oraclePromiseResolve])\n    useEffect(()=>{\n        if(resolved\n            && oracleStates  \n            && contractFunction.oraclePromiseResolve\n        ){\n            setFunc && setFunc({\n                ...contractFunction,\n                oracleData : oracleStates,\n                oraclePromiseReject : undefined,\n                oraclePromiseResolve : undefined\n            })\n            contractFunction.oraclePromiseResolve(\n                oracleStates as {[key : string] : string}\n            );\n        }\n    })\n\n    console.log(contractFunction.callOracle);\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            justifyContent : \"right\",\n            justifyItems : \"right\",\n            fontSize : \"18px\"\n        }}>\n            {contractFunction.requiresOracle && <AthenaButton\n                action={_loadOracleData as unknown as any}\n                style={{\n                    fontSize : \"18px\"\n                }}\n                primaryColor={Colors.Maintheme}\n                secondaryColor={\"white\"}>\n                {\n                    !oracleLoad ? \n                    <>\n                        Load oracle data\n                    </>\n                    : <>\n                        Load{resolved ? \"ed\" : \"ing\"} oracle data {count}/{Object.keys(oracleStates).length}     \n                    </>\n                }\n            </AthenaButton>}\n            &emsp;\n            <AthenaButton\n                invert\n                style={{\n                    fontSize : \"18px\"\n                }}\n                action={call}\n                disabled={contractFunction.requiresOracle && (contractFunction.oracleData === undefined || !resolved)}\n                primaryColor={Colors.Maintheme}\n                secondaryColor={\"white\"}\n            >\n                Call function\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { Play, PlayCircleFill, PlayFill } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { DappI, parseGitUrl } from '../Dapp/Dapp';\nimport { DappInput, DappPut } from '../DappPut';\nimport { DappDescputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI } from '../DappPut/DappPutType';\nimport {to} from \"await-to-js\";\nimport { useEffect } from 'react';\nimport { DappInputHeader } from '../DappPut/DappInput/DappInputHeader';\nimport { DappResultput } from '../DappPut/DappResultput';\nimport { ArrowReturnRight } from 'react-bootstrap-icons';\nimport {DappFunctionLogRunButton} from \"./DappFunctionLogRunButton\";\nimport {DappFunctionSubmitState} from \"./DappFunctionSubmitState\";\nimport { Spinner } from 'react-bootstrap';\n\nexport interface OpenContractLogStateI {\n    log : any[]\n}\n\nexport type DappFunctionLogAthenaProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setDappFunction ? : (func : OpenContractFunctionI)=>void\n}\n\nexport const transformToDappPut = (put : OpenContractFunctionI[\"inputs\"] | OpenContractFunctionI[\"prints\"])=>{\n\n}\n\nexport const createInputs = (inputs : OpenContractFunctionI[\"inputs\"]) : DappInputI[]=>{\n    return inputs.map((input)=>{\n        return {\n            ...input,\n            putType : \"input\"\n        } as DappInputI\n    })\n}\n\nexport const createErrors = (errors : OpenContractFunctionI[\"errors\"], resetArgs : ()=>void) : DappErrputI[]=>{\n    return errors ? errors.map((error)=>{\n        return {\n            ...error,\n            putType : \"error\",\n            resetArgs : resetArgs\n        }\n    }) : []\n}\n\nexport const createXpras = (xpras : OpenContractFunctionI[\"xpras\"]) : DappInteractputI[]=>{\n    return xpras ? xpras.map((xpra)=>{\n        return {\n            ...xpra,\n            putType : \"interactive\"\n        } \n    }) : []\n}\n\nexport const createOutputs = (prints : OpenContractFunctionI[\"prints\"]) : DappOutputI[]=>{\n    return prints ? prints.map((print)=>{\n        return {\n            ...print,\n            putType : \"output\"\n        } \n    }) : []\n}\n\nexport const createOracleData = (\n    contractFunction : OpenContractFunctionI,\n    setFunc ? : (func : OpenContractFunctionI)=>void\n) : DappOracleputI=>{\n\n    const setOracleData = (data : OpenContractFunctionI[\"oracleData\"])=>{\n        \n        \n        setFunc && setFunc({\n            ...contractFunction,\n            oracleData : data,\n            oraclePromiseReject : undefined,\n            oraclePromiseResolve : undefined\n        })\n    }\n\n    return {\n        name : \"Oracle data\",\n        contractFunction : contractFunction,\n        putType : \"oracle\",\n        setOracleData : setOracleData\n    } as DappOracleputI\n\n}\n\nexport const createResult = (contractFunction : OpenContractFunctionI) : DappResultputI=>{\n    return {\n        name : contractFunction.name,\n        value : contractFunction.result,\n        putType : \"result\"\n    }\n}\n\nexport const createDescriptionData = (contractFunction : OpenContractFunctionI) : DappDescputI[]=>{\n    return [\n        {\n            name : contractFunction.name,\n            description : contractFunction.description,\n            putType : \"description\",\n            value : contractFunction.name,\n\n        }\n    ]\n}\n\nexport const aggregateContractFunctionPuts = (\n    contractFunction : OpenContractFunctionI,\n)=>{\n\n    return [\n       /* ...createInputs(contractFunction),\n        ...createErrors(contractFunction),\n        ...createXpras(contractFunction),\n        ...createOutputs(contractFunction),*/\n    ]\n\n}\n\nexport const getContractFunctionInputs = (puts : DappPutI[])=>{\n    return puts.filter((put)=>{\n        return put.putType === \"input\";\n    });\n}\n\nexport const resetInputs = (inputs : OpenContractFunctionI[\"inputs\"])=>{\n    return inputs.map((value)=>{\n        return {\n            ...value,\n            value : undefined\n        }\n    })\n}\n\nexport const resetInputPuts = (puts : OpenContractFunctionI[\"puts\"])=>{\n    return puts?.map((put)=>{\n        return {\n            ...put,\n            value : put.putType === \"input\" ? undefined : put.value\n        }\n    })\n}\n\nexport const DappFunctionLogAthena : FC<DappFunctionLogAthenaProps>  = ({\n    dapp,\n    contractFunction,\n    setDappFunction\n}) =>{\n\n    console.log(contractFunction)\n\n    useEffect(()=>{\n\n       setDappFunction && setDappFunction({\n           ...contractFunction,\n           puts : createInputs(contractFunction.inputs)\n       })\n\n    }, [])\n\n    const setPut = (put : DappPutI, index : number)=>{\n        if(!contractFunction.puts){\n            contractFunction.puts = [];\n        }\n        contractFunction.puts[index] = put;\n        setDappFunction && setDappFunction({\n            ...contractFunction,\n           inputs : getContractFunctionInputs(contractFunction.puts)\n        })\n    }\n\n    const resetArgs = ()=>{\n        setDappFunction && setDappFunction({\n            ...contractFunction,\n            inputs : resetInputs(contractFunction.inputs),\n            puts : resetInputPuts(contractFunction.puts)\n        })\n    }\n\n    const inputs = createInputs(contractFunction.inputs);\n    console.log(inputs);\n    const puts = contractFunction.puts && contractFunction.puts.reduce((agg, put, index)=>{\n        return [\n            ...agg,\n            ...put.putType !== \"input\" ? [\n                (\n                    <><DappPut \n                        end={index > (contractFunction.puts ? contractFunction.puts.length - 2 : -1)}\n                        setPut={setPut} index={index} put={put}/><br/></>\n                )\n            ] : []\n        ]\n    }, [] as React.ReactNode)\n\n    const addOutput = (name : string, message : string)=>{\n        const newOutput = {\n            name : name,\n            value : message\n        };\n        const _newFuctionState = {\n            ...contractFunction,\n            ...contractFunction.requiresOracle ? {\n                result : \"Oracle output received! See below.\"\n            } : {},\n            prints : [...contractFunction.prints||[], newOutput],\n            puts : [...contractFunction.puts||[], ...createOutputs([newOutput])]\n        }\n        setDappFunction && setDappFunction(_newFuctionState)\n    }\n\n    contractFunction.printHandler = async (message : string)=>{\n        addOutput(\"Output received!\", message)\n    }\n\n    const addError = (name : string, e : any)=>{\n\n        const newResult = (\n            <div style={{\n                alignContent : 'center',\n                alignItems : 'center'\n            }}>\n                <p>\n                    <span style={{\n                        color : Colors.secondaryTextColor\n                    }}>Previous result:</span> {typeof contractFunction.result === \"string\" ? contractFunction.result : \"No data received.\"}\n                </p>\n                <p style={{\n                    color : Colors.fadedRed\n                }}>\n                     <span style={{\n                        color : Colors.secondaryTextColor\n                    }}>Current result:</span> Error\n                </p>\n            </div>\n        )\n        const newError = {\n            name : name,\n            description : e\n        }\n        const _newFunctionState = {\n            ...contractFunction,\n            result : newResult,\n            errors : [...contractFunction.errors||[], newError],\n            puts : [...contractFunction.puts||[], ...createErrors([newError], resetArgs)]\n        }\n        setDappFunction && setDappFunction(_newFunctionState)\n    }\n\n    const handleError = async (message : string)=>{\n\n        addError(\"An error occurred!\", message);\n\n    }\n    contractFunction.errorHandler = handleError;\n\n    const addOracleData = (\n        data : OpenContractFunctionI[\"oracleData\"], \n        resolve : OpenContractFunctionI[\"oraclePromiseResolve\"],\n        reject : OpenContractFunctionI[\"oraclePromiseReject\"]\n    )=>{\n        setDappFunction && setDappFunction({\n            ...contractFunction,\n            oracleData : data,\n            oraclePromiseResolve : resolve,\n            oraclePromiseReject : reject\n        })\n    }\n\n    const addResult = (data : OpenContractFunctionI[\"result\"])=>{\n        const _newFunctionState = {\n            ...contractFunction,\n            result : data,\n        }\n        setDappFunction &&  setDappFunction({\n            ..._newFunctionState,\n            puts : [\n                ..._newFunctionState.puts || [],\n                createResult(_newFunctionState)\n            ]\n        })\n    }\n\n    const loadOracleData = async () : Promise<{[key : string] : string}>=>{\n        const {\n            owner,\n            repo,\n            branch\n        } = parseGitUrl(dapp.gitUrl)\n\n        const [error, data]= await to(window.githubOracleDownloader(\n            owner || \"\",\n            repo || \"\",\n            branch || \"main\",\n            contractFunction.oracleFolder\n        ));\n\n        return new Promise((resolve, reject)=>{\n            addOracleData(\n                data||{} as any,\n                resolve,\n                reject\n            )\n            if(error){\n                addError(\"An error occurred!\", \"GitHub download failed.\");\n                reject();\n            }\n        })\n\n    }\n\n    const addOracleCallput = (call : ()=>Promise<string>)=>{\n        const _newFunctionState : OpenContractFunctionI = {\n            ...contractFunction,\n            callOracle : call\n        }\n        setDappFunction &&  setDappFunction({\n            ..._newFunctionState,\n            puts : [\n                ..._newFunctionState.puts || [],\n                createResult(_newFunctionState)\n            ]\n        })\n    }\n\n    const handleSubmit = async (call : ()=>Promise<string>)=>{\n        addOracleCallput(call);\n    }\n    contractFunction.submitHandler = handleSubmit;\n\n    const handleCall = async ()=>{\n\n       return new Promise((resolve, reject)=>{\n\n            addResult(<div style={{\n                display : 'flex',\n                alignContent : \"center\",\n                alignItems : \"center\"\n            }}>\n                <Spinner style={{\n                    height : \"10px\",\n                    width : \"10px\"\n                }} animation=\"border\"/>\n                &emsp;Pending...\n            </div>)\n\n            if(contractFunction.requiresOracle){\n\n                if(!contractFunction.oracleData){\n                    addError(\"No Oracle data!\", \"Oracle data is required for this function.\");\n                    resolve({});\n                }\n\n                contractFunction.call(contractFunction).then((data)=>{\n                    addResult(data ? data : <div style={{\n                        display : 'flex',\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Spinner style={{\n                            height : \"10px\",\n                            width : \"10px\"\n                        }} animation=\"border\"/>\n                        &emsp;Attempting oracle connection...\n                    </div>);\n                    resolve(data);\n                }).catch((err)=>{\n                    addError(\"An error occurred!\", err.toString());\n                    resolve({});\n                })\n                return;\n            } \n            contractFunction.call(contractFunction).then((data)=>{\n                addResult(data.length ? data : \"Success!\");\n                resolve(data);\n            }).catch((err)=>{\n                addError(\"An error occurred!\", err.toString());\n                resolve({});\n            })\n       })\n\n    }\n\n    const addInteractput = (name : string, targetUrl : string, sessionUrl : string)=>{\n        const newXpra =  {\n            name : name,\n            description : targetUrl,\n            value : sessionUrl\n        };\n        const _newFuctionState = {\n            ...contractFunction,\n            ...contractFunction.requiresOracle ? {\n                result : \"Oracle output received! See below.\"\n            } : {},\n            xpras : [...contractFunction.xpras||[], newXpra],\n            puts : [...contractFunction.puts||[], ...createXpras([newXpra])]\n        }\n        setDappFunction && setDappFunction(_newFuctionState)\n    }\n\n    contractFunction.xpraHandler = async (targetUrl, sessionUrl, xpraExit)=>{\n\n        addInteractput(\"Interactive session requested.\", targetUrl, sessionUrl);\n\n    }\n\n    console.log(contractFunction.callOracle);\n\n    return (\n\n        <>\n            <div style={{\n                width : \"100%\",\n                paddingBottom : DesktopSizes.Padding.standard,\n            }}>\n                <DappFunctionLogRunButton\n                    puts={inputs}\n                    setPut={setPut}\n                    contractFunction={contractFunction}\n                />\n                <br/>\n                <DappFunctionSubmitState\n                    setFunc={setDappFunction}\n                    loadOracleData={loadOracleData}\n                    call={handleCall}\n                    contractFunction={contractFunction}\n                />\n                <br/>\n                {puts}\n                <br/>\n            </div>\n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {DappI} from \"../Dapp\";\nimport { DappFunctionLogAthena } from './DappFunctionLogAthena';\n\nexport type DappFunctionAthenaProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setDappFunction ? : (func : OpenContractFunctionI)=>void\n}\n\nexport const DappFunctionAthena : FC<DappFunctionAthenaProps>  = ({\n    dapp,\n    contractFunction,\n    setDappFunction\n}) =>{\n\n    return (\n\n        <DappFunctionLogAthena setDappFunction={setDappFunction} dapp={dapp} contractFunction={contractFunction}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../../Theme';\nimport {DappI} from \"../../Dapp\";\nimport { DappFunctionAthena } from '../../DappFunction';\n\nexport type ApolloRunDappFunctionViewProps = {\n    dapp : DappI,\n    setDappFunction : (contractFunction : OpenContractFunctionI)=>void\n    contractFunction ? : OpenContractFunctionI\n}\n\nexport const ApolloRunDappFunctionView : FC<ApolloRunDappFunctionViewProps>  = ({\n    dapp,\n    setDappFunction,\n    contractFunction\n}) =>{\n\n    return (\n\n        <div style={{\n            padding: DesktopSizes.Padding.standard\n        }}>\n            {contractFunction && \n            \n                    <DappFunctionAthena\n                        dapp={dapp}\n                        setDappFunction={setDappFunction}\n                        contractFunction={contractFunction}\n                    />\n            }\n            {!contractFunction && <h2>No function selected.</h2>}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { Coin, Github, InfoCircle, PatchCheckFill, PatchPlus } from 'react-bootstrap-icons';\nimport { PlayFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { DappI, parseGitUrl } from '../Dapp';\nimport { ethers, providers } from 'ethers';\n\nexport type ApolloRunDappMainItemMobileActionsProps = {\n    gitUrl : string,\n    dapp : DappI\n}\n\nexport const ApolloRunDappMainItemMobileActions : FC<ApolloRunDappMainItemMobileActionsProps>  = ({\n    gitUrl,\n    dapp\n}) =>{\n\n    const getTokens = async ()=>{\n        if(dapp.contract){\n\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            const signerToken =  dapp.contract.OPNtoken.connect(provider.getSigner());\n            await signerToken.gimmeSomeMoreOfDemCoins();\n        }\n    }\n\n    return (\n\n        <div style={{\n        }}>\n            <p style={{\n                textAlign : \"left\"\n            }}>\n                <InfoCircle size={22}/>&emsp;If this is your first time here, you may need to&nbsp;<a href=\"\" style={{\n                    color : \"#99aacc\"\n                }}>get some OPN</a>&nbsp;and&nbsp;<a href=\"\" style={{\n                    color : \"#99aacc\"\n                }}>grant access to the Open Contracts hub</a>.\n            </p>\n            <br/>\n            <div style={{\n                display  : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                gap : DesktopSizes.Padding.standard\n            }}>\n                <AthenaButton \n                style={{\n                    width : \"100%\",\n                }}\n                primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        See on GitHub&emsp;<Github/>\n                    </div>\n                </AthenaButton>\n                <AthenaButton\n                    style={{\n                        width : \"100%\"\n                    }}\n                    action={getTokens}\n                    primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        Get OPN&emsp;<Coin/>\n                    </div>\n                </AthenaButton>\n                <AthenaButton \n                    style={{\n                        width : \"100%\"\n                    }}\n                    primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        justifyContent : \"center\",\n                        fontSize : \"22px\"\n                    }}>\n                        Grant Hub Access&emsp;<PatchCheckFill/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n            </div>\n            <br/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName, getDappSolidityContract, getDappOracle, getDappImageUri, getDappReadMe, parseGitUrl, getDappContract } from '../Dapp';\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport {ApolloRunDappContent} from \"./ApolloRunDappContent\";\nimport { ApolloRunDappFunctionGridView } from './ApolloRunDappFunctionGridView';\nimport { ApolloRunDappFunctionView } from './ApolloRunDappFunctionView';\nimport { useErrorContext } from '../../../Error/ErrorProvider';\nimport { ApolloRunDappMainItemMobileActions } from './ApolloRunDappMainItemMobileActions';\n\n\nexport type ApolloRunDappMainItemMobileReadmeProps = {\n    style ? : React.CSSProperties,\n    readme : string | undefined\n}\n\nexport const ApolloRunDappMainItemMobileReadMe : FC<ApolloRunDappMainItemMobileReadmeProps> = ({\n    style,\n    readme\n})=>{\n\n    return (\n        <div style={{\n            ...style,\n            textAlign : 'left'\n        }}>\n            {!readme && <Skeleton width=\"100%\" count={5}/>}\n            {readme && <ReactMarkdown plugins={[remarkGfm]}>\n                {readme}    \n            </ReactMarkdown>}\n        </div>\n    )\n\n}\n\nexport type ApolloRunDappMainItemMobileInternalsProps = {\n    dappItem : DappI,\n    setDappItem ? : (dappItem : DappI)=>void,\n    style? : React.CSSProperties,\n    key? : React.Key,\n}\n\nexport const ApolloRunDappMainItemMobileInternals : FC<ApolloRunDappMainItemMobileInternalsProps>  = ({\n    dappItem,\n    style,\n    setDappItem\n}) =>{\n\n    const [which, setWhich] = useState<string|undefined>(undefined);\n\n    const _selectedFunc = dappItem.contract && dappItem.contract.contractFunctions ? \n                            dappItem.contract.contractFunctions.filter((func)=>{\n                                return func.name === which\n                            })[0] : undefined\n\n    const selectedFunc = _selectedFunc || (\n        dappItem.contract?.contractFunctions[0]\n    )\n\n    const setFunc = (contractFunction : OpenContractFunctionI)=>{\n\n        \n\n        if(dappItem.contract && setDappItem){\n\n            const newContractFunctions = dappItem.contract.contractFunctions.reduce((agg, oldContractFunction)=>{\n\n                return [\n                    ...agg,\n                    ...(contractFunction.name === oldContractFunction.name) ? [contractFunction] : [oldContractFunction]\n                ]\n            }, [] as OpenContractFunctionI[])\n\n        \n    \n            setDappItem({\n                ...dappItem,\n                contract : {\n                    ...dappItem.contract,\n                    contractFunctions : newContractFunctions\n                }\n            })\n\n        }\n\n    }\n\n    const [grid, setGrid] = useState(true);\n    const handleWhich = (which : string)=>{\n        setGrid(false);\n        setWhich(which);\n    }\n\n    return (\n\n        <div style={{\n            paddingTop : DesktopSizes.Padding.standard,\n            borderTop : `1px solid ${Colors.Maintheme}`,\n            width : \"100%\",\n            paddingBottom : DesktopSizes.Padding.whitespacePreferred,\n            ...style\n        }}>\n            <div>\n                <div style={{\n                    textAlign : \"left\",\n                    color : Colors.Maintheme\n                }}>\n                    <h1>{dappItem.name}</h1>\n                </div>\n                <div>\n                    <ApolloRunDappMainItemMobileActions\n                        dapp={dappItem}\n                        gitUrl={dappItem.gitUrl}\n                    />\n                </div>\n                <ApolloRunDappContent grid={grid} setGrid={setGrid}>\n                    <ApolloRunDappContent.Grid>\n                        <ApolloRunDappFunctionGridView\n                            dapp={dappItem}\n                            setWhich={handleWhich}\n                            which={which}\n                        />\n                    </ApolloRunDappContent.Grid>\n                    <ApolloRunDappContent.Single>\n                        <ApolloRunDappFunctionView\n                            dapp={dappItem}\n                            setDappFunction={setFunc}\n                            contractFunction={selectedFunc}\n                        />\n                    </ApolloRunDappContent.Single>\n                </ApolloRunDappContent>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport type ApolloRunDappMainItemMobileProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp ? : (dapp : DappI)=>void,\n    forceLoad ? : boolean\n}\n\nexport const ApolloRunDappMainItemMobile : FC<ApolloRunDappMainItemMobileProps>  = ({\n    dappItem,\n    style,\n    updateDapp,\n    forceLoad = false\n}) =>{\n\n    const {\n        dispatch\n    } = useErrorContext();\n\n    const [dappState, setDappState] = useState(dappItem);\n    useEffect(()=>{\n\n        if((dappState !== dappItem) && updateDapp){\n            \n            updateDapp(dappState)\n        }\n\n    })\n\n    const [nameLoad, setNameLoad] = useState<string|undefined>(undefined);\n    useEffect(()=>{\n\n        if(!nameLoad){\n            getDappName(\n                dappItem,\n                (name : string)=>setNameLoad(name)\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [])\n    useEffect(()=>{\n\n        if(dappState.name !== nameLoad){\n            setDappState({\n                ...dappState,\n                name : nameLoad\n            })\n        }\n\n    })\n\n    const [contractLoad, setContractLoad] = useState<OpenContractI|undefined>(undefined);\n    const [contractLoaded, setContracLoaded] = useState(false);\n    useEffect(()=>{\n\n        if(!contractLoad){\n            getDappContract(\n                dappItem,\n                (contract : OpenContractI)=>{\n                    \n                    setContractLoad(contract)\n                }\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [])\n    useEffect(()=>{\n\n        if(contractLoad && (dappState.contract !== contractLoad) && !contractLoaded){\n            setDappState({\n                ...dappState,\n                contract : contractLoad\n            })\n            setContracLoaded(true);\n        }\n\n    })\n\n    const handleSetDappState = (dapp :DappI)=>{\n        \n        \n        setDappState(dapp);\n    }\n    \n\n    return (\n\n        <ApolloRunDappMainItemMobileInternals setDappItem={handleSetDappState} dappItem={dappState} style={style}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { Coin, Github, InfoCircle, PatchCheckFill, PatchPlus } from 'react-bootstrap-icons';\nimport { PlayFill } from 'react-bootstrap-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { DappI, parseGitUrl } from '../Dapp';\nimport { ethers, providers } from 'ethers';\n\nexport type ApolloRunDappMainItemActionsProps = {\n    gitUrl : string,\n    dapp : DappI\n}\n\nexport const ApolloRunDappMainItemActions : FC<ApolloRunDappMainItemActionsProps>  = ({\n    gitUrl,\n    dapp\n}) =>{\n\n    const getTokens = async ()=>{\n        if(dapp.contract){\n\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            const signerToken =  dapp.contract.OPNtoken.connect(provider.getSigner());\n            console.log(signerToken);\n            await signerToken.gimmeSomeMoreOfDemCoins();\n        }\n    }\n\n    return (\n\n        <div style={{\n        }}>\n            <p style={{\n                textAlign : \"left\"\n            }}>\n                <InfoCircle size={22}/>&emsp;If this is your first time here, you may need to&nbsp;<a href=\"\" style={{\n                    color : \"#99aacc\"\n                }}>get some OPN</a>&nbsp;and&nbsp;<a href=\"\" style={{\n                    color : \"#99aacc\"\n                }}>grant access to the Open Contracts hub</a>.\n            </p>\n            <br/>\n            <div style={{\n            display : \"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\"\n            }}>\n                <AthenaButton primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        See on GitHub&emsp;<Github/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n                <AthenaButton\n                    action={getTokens}\n                    primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        Get OPN&emsp;<Coin/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n                <AthenaButton \n                    primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                    <div style={{\n                        display : \"flex\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        Grant Hub Access&emsp;<PatchCheckFill/>\n                    </div>\n                </AthenaButton>\n                &emsp;\n            </div>\n            <br/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName, getDappSolidityContract, getDappOracle, getDappImageUri, getDappReadMe, parseGitUrl, getDappContract } from '../Dapp';\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport {ApolloRunDappContent} from \"./ApolloRunDappContent\";\nimport { ApolloRunDappFunctionGridView } from './ApolloRunDappFunctionGridView';\nimport { ApolloRunDappFunctionView } from './ApolloRunDappFunctionView';\nimport { useErrorContext } from '../../../Error/ErrorProvider';\nimport { ApolloRunDappMainItemActions } from './ApolloRunDappMainItemActions';\n\n\nexport type ApolloRunDappMainItemReadmeProps = {\n    style ? : React.CSSProperties,\n    readme : string | undefined\n}\n\nexport const ApolloRunDappMainItemReadMe : FC<ApolloRunDappMainItemReadmeProps> = ({\n    style,\n    readme\n})=>{\n\n    return (\n        <div style={{\n            ...style,\n            textAlign : 'left'\n        }}>\n            {!readme && <Skeleton width=\"100%\" count={5}/>}\n            {readme && <ReactMarkdown plugins={[remarkGfm]}>\n                {readme}    \n            </ReactMarkdown>}\n        </div>\n    )\n\n}\n\nexport type ApolloRunDappMainItemInternalsProps = {\n    dappItem : DappI,\n    setDappItem ? : (dappItem : DappI)=>void,\n    style? : React.CSSProperties,\n    key? : React.Key,\n}\n\nexport const ApolloRunDappMainItemInternals : FC<ApolloRunDappMainItemInternalsProps>  = ({\n    dappItem,\n    style,\n    setDappItem\n}) =>{\n\n    const [which, setWhich] = useState<string|undefined>(undefined);\n\n    const _selectedFunc = dappItem.contract && dappItem.contract.contractFunctions ? \n                            dappItem.contract.contractFunctions.filter((func)=>{\n                                return func.name === which\n                            })[0] : undefined\n\n    const selectedFunc = _selectedFunc || (\n        dappItem.contract?.contractFunctions[0]\n    )\n\n    const setFunc = (contractFunction : OpenContractFunctionI)=>{\n\n        \n\n        if(dappItem.contract && setDappItem){\n\n            const newContractFunctions = dappItem.contract.contractFunctions.reduce((agg, oldContractFunction)=>{\n\n                return [\n                    ...agg,\n                    ...(contractFunction.name === oldContractFunction.name) ? [contractFunction] : [oldContractFunction]\n                ]\n            }, [] as OpenContractFunctionI[])\n\n        \n    \n            setDappItem({\n                ...dappItem,\n                contract : {\n                    ...dappItem.contract,\n                    contractFunctions : newContractFunctions\n                }\n            })\n\n        }\n\n    }\n\n    const [grid, setGrid] = useState(true);\n    const handleWhich = (which : string)=>{\n        setGrid(false);\n        setWhich(which);\n    }\n\n    return (\n\n        <div style={{\n            width : \"100%\",\n            paddingBottom : DesktopSizes.Padding.whitespacePreferred,\n            ...style\n        }}>\n            <div>\n                <div style={{\n                    textAlign : \"left\",\n                    color : Colors.Maintheme\n                }}>\n                    <h1>{dappItem.name}</h1>\n                </div>\n                <div>\n                    <ApolloRunDappMainItemActions\n                        dapp={dappItem}\n                        gitUrl={dappItem.gitUrl}\n                    />\n                </div>\n                <ApolloRunDappContent grid={grid} setGrid={setGrid}>\n                    <ApolloRunDappContent.Grid>\n                        <ApolloRunDappFunctionGridView\n                            dapp={dappItem}\n                            setWhich={handleWhich}\n                            which={which}\n                        />\n                    </ApolloRunDappContent.Grid>\n                    <ApolloRunDappContent.Single>\n                        <ApolloRunDappFunctionView\n                            dapp={dappItem}\n                            setDappFunction={setFunc}\n                            contractFunction={selectedFunc}\n                        />\n                    </ApolloRunDappContent.Single>\n                </ApolloRunDappContent>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport type ApolloRunDappMainItemProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp ? : (dapp : DappI)=>void,\n    forceLoad ? : boolean\n}\n\nexport const ApolloRunDappMainItemDesktop : FC<ApolloRunDappMainItemProps>  = ({\n    dappItem,\n    style,\n    updateDapp,\n    forceLoad = false\n}) =>{\n\n    const {\n        dispatch\n    } = useErrorContext();\n\n    const [dappState, setDappState] = useState(dappItem);\n    useEffect(()=>{\n\n        if((dappState !== dappItem) && updateDapp){\n            \n            updateDapp(dappState)\n        }\n\n    })\n\n    const [nameLoad, setNameLoad] = useState<string|undefined>(undefined);\n    useEffect(()=>{\n\n        if(!nameLoad){\n            getDappName(\n                dappItem,\n                (name : string)=>setNameLoad(name)\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [])\n    useEffect(()=>{\n\n        if(dappState.name !== nameLoad){\n            setDappState({\n                ...dappState,\n                name : nameLoad\n            })\n        }\n\n    })\n\n    const [contractLoad, setContractLoad] = useState<OpenContractI|undefined>(undefined);\n    const [contractLoaded, setContracLoaded] = useState(false);\n    useEffect(()=>{\n\n        if(!contractLoad){\n            getDappContract(\n                dappItem,\n                (contract : OpenContractI)=>{\n                    \n                    setContractLoad(contract)\n                }\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [])\n    useEffect(()=>{\n\n        if(contractLoad && (dappState.contract !== contractLoad) && !contractLoaded){\n            setDappState({\n                ...dappState,\n                contract : contractLoad\n            })\n            setContracLoaded(true);\n        }\n\n    })\n\n    const handleSetDappState = (dapp :DappI)=>{\n        \n        \n        setDappState(dapp);\n    }\n    \n\n    return (\n\n        <ApolloRunDappMainItemInternals setDappItem={handleSetDappState} dappItem={dappState} style={style}/>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName, getDappSolidityContract, getDappOracle, getDappImageUri, getDappReadMe, parseGitUrl, getDappContract } from '../Dapp';\nimport {ApolloRunDappMainItemMobile} from \"./ApolloRunDappMainItemMobile\";\nimport {ApolloRunDappMainItemDesktop} from \"./ApolloRunDappMainItemDesktop\";\nimport { useErrorContext } from '../../../Error/ErrorProvider';\nimport { ApolloRunDappMainItemActions } from './ApolloRunDappMainItemActions';\nimport { MediaResponsive } from '../../../Sytems';\n\nexport type ApolloRunDappMainItemProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp ? : (dapp : DappI)=>void,\n    forceLoad ? : boolean\n}\n\nexport const ApolloRunDappMainItem : FC<ApolloRunDappMainItemProps>  = (props) =>{\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <ApolloRunDappMainItemDesktop {...props}/>\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <ApolloRunDappMainItemDesktop {...props}/>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <ApolloRunDappMainItemMobile {...props}/>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <ApolloRunDappMainItemMobile {...props}/>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { DappI } from '../../Items';\nimport { ApolloRunDappMainItem } from '../../Items/Dapp/ApolloDapp/ApolloRunDappMainItem';\n\nexport type RunBenchDesktopProps = {\n    dapp ? : DappI\n}\n\nexport const RunBenchDesktop : FC<RunBenchDesktopProps>  = ({\n    dapp\n}) =>{\n\n    const [dappState, setDappState] = useState<DappI|undefined>(dapp);\n\n    const handleUpdate = (dapp  : DappI)=>{\n\n        \n        setDappState(dapp);\n\n    }\n\n\n    return (\n\n        <>{dappState  ? \n            <ApolloRunDappMainItem dappItem={dappState} updateDapp={handleUpdate} />\n            : \"No dapp\"\n        }</>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { RunBenchDesktop } from '../../Benches';\nimport { DappI } from '../../Items';\n\nexport type RunPageWithRepoProps = {\n    stepStatus : StepStatusT,\n    repo : {\n        owner : string,\n        repo : string,\n        branch : string\n    }\n}\n\nexport const RunPageWithRepo : FC<RunPageWithRepoProps>  = ({\n    stepStatus,\n    repo\n}) =>{\n\n    const dapp : DappI = {\n        __isDapp__ : true,\n        gitUrl : `https://github.com/${repo.owner}/${repo.repo}/${repo.branch}`,\n        id : `${repo.owner}/${repo.repo}/${repo.branch}`\n    } \n\n    \n\n    return (<RunBenchDesktop dapp={dapp} />)\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { TextInputApollo } from '../../Components/TextInput';\nimport { useNavigate } from 'react-router-dom';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors } from '../../Theme';\nimport { parseGitUrl } from '../../Items';\n\nexport type RunPageNoRepoProps = {\n    stepStatus : StepStatusT\n}\n\n\nexport const RunPageNoRepo : FC<RunPageNoRepoProps>  = ({\n    stepStatus\n}) =>{\n\n    const navigate = useNavigate();\n    const [text, setText] = useState(\"\");\n\n    const handleSubmit = ()=>{\n\n        const {\n            owner,\n            repo,\n            branch\n        } = parseGitUrl(text);\n\n        navigate(`/${owner}/${repo}/${branch||\"main\"}`);\n\n    }\n\n    const handleEnter = (text : string)=>{\n        const {\n            owner,\n            repo,\n            branch\n        } = parseGitUrl(text);\n\n        navigate(`/${owner}/${repo}/${branch||\"main\"}`);\n\n    }\n\n    return (\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <TextInputApollo \n            onSubmit={handleEnter}\n            placeholder={\"Enter repo\"}\n            onTextInput={setText}/>&emsp;<AthenaButton \n            onClick={handleSubmit}\n            primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                Submit\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { RunBenchDesktop } from '../../Benches';\nimport { Params, useParams } from 'react-router-dom';\nimport { RunPageWithRepo } from './RunPageWithRepo';\nimport { RunPageNoRepo } from './RunPageNoRepo';\n\nexport type ReadyToRunProps = {\n    stepStatus : StepStatusT\n}\n\nexport const ReadyToRun : FC<ReadyToRunProps>  = ({\n    stepStatus\n}) =>{\n\n    const {\n        owner,\n        repo,\n        branch\n    } = useParams();\n\n    console.log(branch);\n\n    return (owner && repo) ?\n    (<RunPageWithRepo stepStatus={stepStatus} repo={{\n        owner : owner,\n        repo : repo,\n        branch : branch || \"main\"\n    }}/>) :\n    (<RunPageNoRepo stepStatus={stepStatus}/>)\n\n}","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutDesktopProps = {}\n\nconst HeaderLayoutDesktop : FC<HeaderLayoutDesktopProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            height : \"100%\",\n            width : \"100%\",\n            display : \"grid\",\n            gridTemplateColumns : \"1fr 1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\",\n            position : \"sticky\"\n        }}>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Brand}\n            </div>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutDesktop.Brand = generateNamedMember('Brand');\nHeaderLayoutDesktop.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutDesktop.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutDesktop};","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport { DesktopSizes } from '../../Theme';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutMobileProps = {}\n\nconst HeaderLayoutMobile : FC<HeaderLayoutMobileProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            display : \"grid\",\n            gridTemplateColumns : \"1fr\",\n            gap : DesktopSizes.Padding.standard,\n            padding : DesktopSizes.Padding.standard\n        }}>\n            <div>\n                {Brand}\n            </div>\n            <div>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutMobile.Brand = generateNamedMember('Brand');\nHeaderLayoutMobile.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutMobile.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutMobile};","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutDesktopProps = {}\n\nconst MainLayoutDesktop : FC<MainLayoutDesktopProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            height : \"auto\",\n            width : \"100vw\",\n            display : \"grid\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                width : DesktopSizes.Main.contentWidth,\n                overflow : \"visible\"\n            }}>\n                <div style={{\n                    height : \"200px\",\n                    width : \"100%\"\n                }}>\n                    {Header}\n                </div>\n                <div style={{\n                    height : \"auto\",\n                    width : \"100%\",\n                    overflow : \"auto\"\n                }}> \n                    {Content}\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutDesktop.Header = generateNamedMember(\"Header\");\nMainLayoutDesktop.Content = generateNamedMember(\"Content\");\nMainLayoutDesktop.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutDesktop}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutMobileProps = {}\n\nconst MainLayoutMobile : FC<MainLayoutMobileProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            flexDirection : \"column\",\n            margin : \"0 auto\",\n            width : \"80vw\",\n        }}>\n            <div>\n                {Header}\n            </div>\n            <div>\n                {Content}\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutMobile.Header = generateNamedMember('Header');\nMainLayoutMobile.Content = generateNamedMember(\"Content\");\nMainLayoutMobile.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutMobile}","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { Colors } from './Colors';\n\n\nexport interface ColorContextI {\n    colors : typeof Colors,\n    dispatch : (fn : (state : ColorContextI)=>ColorContextI)=>void\n}\n\nconst DefaultColorContext : ColorContextI = {\n    colors : Colors,\n    dispatch : ()=>{}\n}\n\n\nexport const ColorContext = createContext(DefaultColorContext);\n\nexport const ColorReducer = (\n    state : ColorContextI, \n    action : (state : ColorContextI)=>ColorContextI\n)=>{\n    return action(state);\n}\n\nexport type ColorProviderProps = typeof Colors\n\nexport const ColorProvider : FC<ColorProviderProps>  = (props) =>{\n\n    const {\n        children,\n        ...colors\n    } = props;\n\n    const [state, dispatch] = useReducer(ColorReducer, DefaultColorContext);\n\n    return (\n\n        <ColorContext.Provider value={{\n            ...state,\n            colors : colors\n        }}>\n                {props.children}\n        </ColorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useColorStore = () : ColorContextI=>{\n\n    const context = useContext(ColorContext);\n\n    if(!context){\n        throw new Error(\"useColors must be called within a ColorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport {File} from \"react-bootstrap-icons\";\nimport { useColorStore } from '../../Theme/ColorProvider';\n\nexport type LogoBProps = {\n    main? : string,\n    post? : string,\n    size? : React.CSSProperties[\"height\"],\n    fontSize ? : React.CSSProperties[\"height\"],\n    logoColor? : React.CSSProperties[\"color\"],\n    fontColor? : React.CSSProperties[\"color\"]\n    label ? : boolean\n}\n\nexport const LogoB : FC<LogoBProps>  = ({\n    main = \"OPEN\",\n    post = \"CONTRACTS\",\n    size = \"80px\",\n    fontSize = \"24px\",\n    logoColor,\n    fontColor,\n    label = true\n}) =>{\n\n    const Colors = useColorStore();\n    const _logoColor = logoColor || Colors.colors.Maintheme;\n    const _fontColor = fontColor || Colors.colors.tertiaryTextColor;\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <div style={{\n                height : size,\n                width : size\n            }}>\n                <svg viewBox=\"0 0 1295 1296\" xmlns=\"http://www.w3.org/2000/svg\"\n                overflow=\"hidden\">\n                    <defs>\n                        <clipPath id=\"clip0\">\n                            <rect x=\"1308\" y=\"55\" width=\"1295\" height=\"1296\" />\n                        </clipPath>\n                    </defs>\n                    <g clipPath=\"url(#clip0)\" transform=\"translate(-1308 -55)\">\n                        <path\n                            d=\"M2281.32 449.263 2551.39 449.263 2552.12 450.769C2584.88 528.295 2603 613.53 2603 703 2603 792.47 2584.88 877.705 2552.12 955.231L2550.93 957.704 2280.6 957.704 2298.15 934.214C2342.71 868.213 2368.72 788.647 2368.72 703 2368.72 617.353 2342.71 537.787 2298.15 471.786ZM1955.5 55C2156.65 55 2336.38 146.796 2455.14 290.812L2455.18 290.863 1983.28 290.863 1955.5 289.459C1727.28 289.459 1542.28 474.608 1542.28 703 1542.28 931.392 1727.28 1116.54 1955.5 1116.54L1964.14 1116.1 2454.31 1116.1 2413.35 1161.21C2296.18 1278.47 2134.3 1351 1955.5 1351 1597.9 1351 1308 1060.88 1308 703 1308 345.119 1597.9 55 1955.5 55Z\"\n                            fill={_logoColor} fillRule=\"evenodd\" />\n                    </g>\n                </svg>\n            </div>\n            &emsp;\n            {label && <div style={{\n                fontSize : fontSize,\n                color : _fontColor,\n                textAlign : \"left\",\n                lineHeight : \"1.3em\"\n            }}>\n                {main}\n                <br/>\n                {post}\n            </div>}\n        </div>\n       \n    )\n\n}","import React, {FC, ReactElement} from 'react';\n\nexport type GrowOnEventAchamaenidProps = {\n    grow ? : boolean,\n    style? : React.CSSProperties\n}\n\nexport const GrowOnEventAchamaenid : FC<GrowOnEventAchamaenidProps>  = ({\n    grow = false,\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n        className={grow ? \"grow\" : \"anti-grow\"}\n        style={{\n            ...style\n        }}>\n            {children}\n        </div>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\n\nexport type ThroughGlassAgathoclesProps = {\n    glass ? : boolean,\n    style ? : React.CSSProperties,\n    glassOpacity ? : React.CSSProperties[\"opacity\"]\n}\n\nexport const ThroughGlassAgathocles : FC<ThroughGlassAgathoclesProps>  = ({\n    glass = false,\n    glassOpacity = \".95\",\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n            style={{\n                opacity : glass ? glassOpacity : \"1.0\",\n                ...style\n            }}>\n                {children}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Colors} from \"../../../Theme\";\nimport {CircleFill as Circle} from \"react-bootstrap-icons\";\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\nimport { useState } from 'react';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\n\nexport type ReadyT = \"ready\" | \"not ready\" | \"failed\";\n\nexport interface StateMapI<T extends any = string> {\n    \"ready\" ? : T,\n    \"not ready\" ? : T, \n    \"failed\" ? : T\n}\n\nexport type AristophanesReadyProps = {\n    right ? : boolean\n    ready ? : \"ready\" | \"not ready\" | \"failed\",\n    label ? : string,\n    size ? : React.CSSProperties[\"height\"],\n    expressions ? : StateMapI,\n    information ? : StateMapI,\n    colors ? : StateMapI<React.CSSProperties[\"color\"]>,\n    style ? : React.CSSProperties,\n    lightStyle ? : React.CSSProperties,\n    onClick ?  : (ready : AristophanesReadyProps[\"ready\"])=>void\n}\n\nexport const DefaultExpressions : StateMapI = {\n    \"ready\" : \"Ready!\",\n    \"not ready\" : \"Awaiting...\",\n    \"failed\" : \"Failed\"\n} as const\n\nexport const DefaultInformation : StateMapI = {\n    \"ready\" : \"The dependency has been loaded.\",\n    \"not ready\" : \"Trying to load the dependency.\",\n    \"failed\" : \"We could not load the dependency.\"\n} as const\n\nexport const DefaultColors : StateMapI<React.CSSProperties[\"color\"]> = {\n    \"ready\" : Colors.forestEdge,\n    \"not ready\" : Colors.waitingYellow,\n    \"failed\" : Colors.failedRed\n} as const\n\n/**\n * A Ready button.\n * @param props\n * @returns \n */\nexport const AristophanesReady : FC<AristophanesReadyProps>  = ({\n    right,\n    ready = \"not ready\",\n    label,\n    expressions,\n    information,\n    colors,\n    size,\n    style,\n    lightStyle,\n    onClick\n}) =>{\n\n    const _expressions = {\n        ...DefaultExpressions,\n        ...expressions\n    }\n\n    const _information = {\n        ...DefaultExpressions,\n        ...information\n    }\n\n    const _colors = {\n        ...DefaultColors,\n        ...colors\n    }\n\n    const handleClick = ()=>{\n        onClick && onClick(ready);\n    }\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n        <ThroughGlassAgathocles glass={isHovered} glassOpacity={.7}>\n             <GrowOnEventAchamaenid grow={isHovered}>\n                <div\n                onMouseOver={handleMouseOver}\n                onMouseOut={handleMouseOut}\n                title={_information[ready]}\n                onClick={handleClick}\n                style={{\n                    display : \"flex\",\n                    gridTemplateColumns : \"1fr 5fr\",\n                    justifyContent : \"left\",\n                    justifyItems : \"left\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    height : \"40px\",\n                    fontSize : \"15px\",\n                    width : \"auto\",\n                    cursor : \"pointer\",\n                    ...style\n                }}>\n                    {!right && <div style={{\n                        display: \"flex\",\n                        height : \"100%\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Circle \n                        color={_colors[ready]}\n                        size={\"65%\"}\n                        style={{\n                            ...lightStyle\n                        }}/>\n                    </div>}\n                    &ensp;\n                    <div style={{\n                        display : \"flex\",\n                        height : \"100%\",\n                        gridTemplateColumns : \"1fr\",\n                        gridTemplateRows : \"1fr 1fr\",\n                        verticalAlign : \"center\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <div>\n                            <span style={{\n                                color : Colors.Maintheme\n                            }}>{label}</span><br/>\n                            <span style={{\n                                color : Colors.tertiaryTextColor\n                            }}>\n                                {_expressions[ready]}\n                            </span>\n                        </div>\n                    </div>\n                    &ensp;\n                    {right && <div style={{\n                        display: \"flex\",\n                        height : \"100%\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Circle \n                        color={_colors[ready]}\n                        size={\"65%\"}\n                        style={{\n                            ...lightStyle\n                        }}/>\n                    </div>}\n                </div>\n            </GrowOnEventAchamaenid>\n        </ThroughGlassAgathocles>\n       \n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Colors} from \"../../../Theme\";\nimport {CircleFill as Circle} from \"react-bootstrap-icons\";\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\nimport { useState } from 'react';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\n\nexport type ReadyT = \"ready\" | \"not ready\" | \"failed\";\n\nexport interface StateMapI<T extends any = string> {\n    \"ready\" ? : T,\n    \"not ready\" ? : T, \n    \"failed\" ? : T\n}\n\nexport type AristophanesReadyStackProps = {\n    right ? : boolean\n    ready ? : \"ready\" | \"not ready\" | \"failed\",\n    label ? : string,\n    size ? : React.CSSProperties[\"height\"],\n    expressions ? : StateMapI,\n    information ? : StateMapI,\n    colors ? : StateMapI<React.CSSProperties[\"color\"]>,\n    style ? : React.CSSProperties,\n    lightStyle ? : React.CSSProperties,\n    onClick ?  : (ready : AristophanesReadyStackProps[\"ready\"])=>void\n}\n\nexport const DefaultExpressions : StateMapI = {\n    \"ready\" : \"Ready!\",\n    \"not ready\" : \"Awaiting...\",\n    \"failed\" : \"Failed\"\n} as const\n\nexport const DefaultInformation : StateMapI = {\n    \"ready\" : \"The dependency has been loaded.\",\n    \"not ready\" : \"Trying to load the dependency.\",\n    \"failed\" : \"We could not load the dependency.\"\n} as const\n\nexport const DefaultColors : StateMapI<React.CSSProperties[\"color\"]> = {\n    \"ready\" : Colors.forestEdge,\n    \"not ready\" : Colors.waitingYellow,\n    \"failed\" : Colors.failedRed\n} as const\n\n/**\n * A Ready button.\n * @param props\n * @returns \n */\nexport const AristophanesReadyStack : FC<AristophanesReadyStackProps>  = ({\n    right,\n    ready = \"not ready\",\n    label,\n    expressions,\n    information,\n    colors,\n    size,\n    style,\n    lightStyle,\n    onClick\n}) =>{\n\n    const _expressions = {\n        ...DefaultExpressions,\n        ...expressions\n    }\n\n    const _information = {\n        ...DefaultExpressions,\n        ...information\n    }\n\n    const _colors = {\n        ...DefaultColors,\n        ...colors\n    }\n\n    const handleClick = ()=>{\n        onClick && onClick(ready);\n    }\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n        <ThroughGlassAgathocles glass={isHovered} glassOpacity={.7}>\n             <GrowOnEventAchamaenid grow={isHovered}>\n                <div\n                onMouseOver={handleMouseOver}\n                onMouseOut={handleMouseOut}\n                title={_information[ready]}\n                onClick={handleClick}\n                style={{\n                    display : \"grid\",\n                    gridTemplateColumns : \"1fr\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    height : \"auto\",\n                    fontSize : \"15px\",\n                    width : \"auto\",\n                    cursor : \"pointer\",\n                    ...style\n                }}>\n                  \n                    <div>\n                        <Circle \n                            color={_colors[ready]}\n                            size={\"18px\"}\n                            style={{\n                                ...lightStyle\n                            }}/>\n                    </div>\n                    <div style={{\n                        display : \"flex\",\n                        height : \"100%\",\n                        gridTemplateColumns : \"1fr\",\n                        gridTemplateRows : \"1fr 1fr\",\n                        verticalAlign : \"center\",\n                        alignContent : \"center\",\n                        alignItems : \"center\",\n                        textAlign : \"center\"\n                    }}>\n                        <div>\n                            <span style={{\n                                color : Colors.Maintheme\n                            }}>{label}</span><br/>\n                            <span style={{\n                                color : Colors.tertiaryTextColor,\n                                wordWrap : \"break-word\",\n                                overflowWrap : \"anywhere\"\n                            }}>\n                                {_expressions[ready]}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </GrowOnEventAchamaenid>\n        </ThroughGlassAgathocles>\n       \n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AristophanesReady, AristophanesReadyStack, ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {ethers} from \"ethers\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Colors } from '../../Theme';\n\nexport type ConnectionStatusProps = {\n    wallet ? : ReadyT,\n    style ? : React.CSSProperties,\n    stack ? : boolean\n}\n\nexport const ConnectionStatus : FC<ConnectionStatusProps>  = ({\n    wallet,\n    style,\n    stack\n}) =>{\n\n    const [address, setAddress] = useState<string|undefined>(undefined);\n\n    useEffect(()=>{\n\n        if(wallet === \"ready\"){\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            const signer = provider.getSigner();\n            !address && signer.getAddress().then((address)=>{\n                setAddress(address);\n            })\n        }\n\n    }, [wallet])\n\n    return (\n\n        <>\n           {stack ?\n            (<AristophanesReadyStack \n                style={{\n                    ...style\n                }}\n                right label={\"Metamask\"} ready={wallet} expressions={{\n                ready : address\n            }} />) :\n            (<AristophanesReady \n                style={{\n                    ...style\n                }}\n                right label={\"Metamask\"} ready={wallet} expressions={{\n                ready : address\n            }} />)\n           }   \n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutDesktop} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\nimport {ConnectionStatus} from \"../ConnectionStatus\";\nimport { ReadyT } from '../../Components/Ready/AristophanesReady/AristophanesReady';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\";\n\nexport type HeaderDesktopProps = {\n    wallet ? : ReadyT\n}\n\nexport const HeaderDesktop : FC<HeaderDesktopProps>  = ({\n    wallet,\n}) =>{\n\n    \n\n\n    return (\n\n        <HeaderLayoutDesktop>\n            <HeaderLayoutDesktop.Brand>\n                <div \n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"left\",\n                    justifyContent : \"left\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutDesktop.Brand>\n            <HeaderLayoutDesktop.Nav>\n                <div style={{\n                    height : \"100%\",\n                    display : \"flex\",\n                    alignItems : 'center',\n                    alignContent : \"center\",\n                    flexDirection : \"row-reverse\",\n                    textAlign : \"right\"\n                }}>\n                    <ConnectionStatus wallet={wallet}/>\n                </div>\n            </HeaderLayoutDesktop.Nav>\n        </HeaderLayoutDesktop>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutMobile} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\nimport { ReadyT } from '../../Components/Ready';\nimport { ConnectionStatus } from '../ConnectionStatus';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\"\n\nexport type HeaderMobileProps = {\n    wallet : ReadyT\n}\n\nexport const HeaderMobile : FC<HeaderMobileProps>  = ({\n    wallet\n}) =>{\n    const navigate = useNavigate();\n    const goHome = ()=>{\n        navigate(HOME_PATH);\n    }\n    const goAbout = ()=>{\n        navigate(ABOUT_PATH);\n    }\n    const goDocs = ()=>{\n        window.location.href = DOCS_PATH;\n    }\n    const handleSelect = (item : string)=>{\n\n        if(item === ABOUT) {\n            goAbout();\n        } else if(item === DOCS){\n            goDocs();\n        } else {\n            goHome();\n        }\n\n    }\n    const handleLogo  = ()=>{\n        handleSelect(\"HOME\")\n    }\n    return (\n\n        <HeaderLayoutMobile>\n            <HeaderLayoutMobile.Brand>\n                <div \n                    onClick={handleLogo}\n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"center\",\n                    justifyContent : \"center\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutMobile.Brand>\n            <HeaderLayoutMobile.Nav>\n                <ConnectionStatus\n                stack\n                style={{\n                    fontSize : \"12px\",\n                    margin : \"0 auto\",\n                    width : \"150px\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\",\n                    paddingBottom : DesktopSizes.Padding.standard\n                }} wallet={wallet}/>\n            </HeaderLayoutMobile.Nav>\n        </HeaderLayoutMobile>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {MediaResponsive} from \"../../Sytems\";\nimport {HeaderDesktop, HeaderMobile} from \".\";\nimport { ReadyT } from '../../Components/Ready';\n\nexport type HeaderResponsiveProps = {\n    wallet : ReadyT\n}\n\nexport const HeaderResponsive : FC<HeaderResponsiveProps>  = ({\n    wallet\n}) =>{\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <HeaderDesktop wallet={wallet}/>\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <HeaderDesktop wallet={wallet}/>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <HeaderMobile wallet={wallet}/>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <HeaderMobile wallet={wallet}/>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {RunSteps} from \"../../Statics/Steps/RunSteps\";\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport { ethers } from 'ethers';\nimport {NotReadyToRun} from \"./NotReadyToRun\";\nimport {ReadyToRun} from \"./ReadyToRun\";\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\n\ndeclare global {\n    interface Window {\n        ethereum : ethers.providers.ExternalProvider\n    }\n}\n\nexport type RunPageProps = {\n}\n\nexport const simulateNetworkRequest =  async <T extends any>(value : T, upperBound : number = 5000) : Promise<T> =>{\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            resolve(value);\n        }, Math.random() * upperBound)\n    })\n}\n\nexport const RunPage : FC<RunPageProps>  = () =>{\n\n\n    const [stepStatus, setStepStatus] = useState<StepStatusT>({\n        wallet : \"not ready\",\n    });\n\n    const [readyToRun, setReadyToRun] = useState(false);\n    const handleAllDone = ()=>{\n        setReadyToRun(true);\n    }\n\n    const _setStepStatus = (stepStatus : StepStatusT)=>{\n        \n        setStepStatus(stepStatus);\n    }\n\n    const page = readyToRun ? \n    (<ReadyToRun stepStatus={stepStatus}/>) :\n    (<NotReadyToRun setStepStatus={_setStepStatus} stepStatus={stepStatus} handleAllDone={handleAllDone}/>);\n\n    return (\n        <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        {page}\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                       {page}\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                       {page}\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={stepStatus.wallet}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        {page}\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { LogoA } from '../../Glitter';\nimport { isDapp } from '../../Items';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderResponsive } from '../../Maps/Headers';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {ErrorNotification} from \"../../Error\";\n\nexport type ErrorPageProps = {}\n\nexport const ErrorPage : FC<ErrorPageProps>  = () =>{\n\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive wallet={\"not ready\"}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { IntegratedErrorBoundary } from '../Error/IntegratedErrorBoundary';\nimport { RunPage } from '../Pages';\nimport { ErrorPage } from '../Pages/ErrorPage';\n\nexport type MainRouterProps = {}\n\nexport const MainRouter : FC<MainRouterProps>  = () =>{\n\n    return (\n\n        <HashRouter>\n            <IntegratedErrorBoundary>\n                <Routes>\n                    <Route path=\"/\" element={<RunPage/>}/>\n                    <Route path=\"/:owner/:repo\" element={<RunPage/>}/>\n                    <Route path=\"/:owner/:repo/error\" element={<RunPage/>}/>\n                    <Route path=\"/:owner/:repo/:branch\" element={<RunPage/>}/>\n                    <Route path=\"/:owner/:repo/:/branch/error\" element={<ErrorPage/>}/>\n                    <Route path=\"/error\" element={<ErrorPage/>}/>\n                </Routes>\n            </IntegratedErrorBoundary>\n        </HashRouter>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { generateRandomDappItems } from '../Demo';\nimport { useErrorContext } from '../Error/ErrorProvider';\nimport { DappI, getDappName } from '../Items';\nimport { MainRouter } from '../Router';\nimport { getFeaturedDapps } from '../Sytems/Featured';\nimport { Colors, DesktopSizes } from '../Theme';\nimport { ColorProvider } from '../Theme/ColorProvider';\nimport {DependencyProvider} from \"../Sytems/DependencyStatus\";\nimport { RunPage } from '../Pages';\n\nexport type MainSegmentProps = {}\n\nexport const MainSegment : FC<MainSegmentProps>  = () =>{\n\n    return (<MainRouter/>)\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './App.css';\nimport \"./CSS/Main.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { MainRouter } from './Router';\nimport { MainSegment } from './Segments';\nimport {editor} from \"monaco-editor\";\nimport {Colors} from \"./Theme\"\nimport { RunPage } from './Pages';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{\n      height : \"100vh\",\n      overflow : \"scroll\"\n    }}>\n      <MainSegment/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
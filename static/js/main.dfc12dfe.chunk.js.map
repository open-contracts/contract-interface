{"version":3,"sources":["Models/OpenContract/OpenContractModelProvider.tsx","Segments/MainSegment.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DefaultOpenContractContext","openContract","undefined","dispatch","OpenContractCtx","createContext","domainReducer","state","set","OpenContractContextProvider","children","useReducer","Provider","value","MainSegment","App","className","style","height","overflow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAaaA,EAAmD,CAC5DC,kBAAeC,EACfC,SAAW,cAGFC,EAAkBC,wBAAcL,GAQhCM,EAAgB,SAACC,EAA6BC,GAA9B,OAAyFA,EAAID,IAW7GE,EAA8D,SAAC,GAA6B,IAA5BR,EAA2B,EAA3BA,aAAcS,EAAa,EAAbA,SAEvF,EAA0BC,qBACtBL,EACAN,GAFJ,mBAAOO,EAAP,KAAcJ,EAAd,KAMA,OAEI,cAACC,EAAgBQ,SAAjB,CAA0BC,MAAK,2BACxBN,GADwB,IAE3BN,aAAeA,EACfE,SAAWA,IAHf,SAKKO,KC7CAI,EAAsC,SAAtCA,IAET,OAAQ,cAAC,EAAD,UACJ,cAACA,EAAD,OCcOC,MAXf,WACE,OACE,qBAAKC,UAAU,MAAMC,MAAO,CAC1BC,OAAS,QACTC,SAAW,UAFb,SAIE,cAAC,EAAD,OCLSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dfc12dfe.chunk.js","sourcesContent":["import React, {FC, ReactElement} from 'react';\nimport { createContext } from 'react';\nimport { useContext, useReducer } from 'react';\n\nexport type OpenContractContext = {\n    openContract ? : IOpenContract,\n    dispatch : React.Dispatch<(state: OpenContractContext) => OpenContractContext>\n}\n\n/**\n * By default the domain name should be root\n * and the views should be empty.\n */\nexport const DefaultOpenContractContext : OpenContractContext = {\n    openContract : undefined,\n    dispatch : ()=>{}\n}\n\nexport const OpenContractCtx = createContext(DefaultOpenContractContext);\n\n/**\n * Reduces the state of a domain with a setter function.\n * @param state is the state of the domain before the reductino.\n * @param set is a function that sets the state of the domain.\n * @returns the new state of the domain.\n */\nexport const domainReducer = (state : OpenContractContext, set : (state : OpenContractContext)=>OpenContractContext)=>set(state);\n\nexport type OpenContractContextProps = {\n    openContract ? : IOpenContract\n}\n\n/**\n * Provides access to OpenContractContext. Handles view fetching for OpenContractContext.\n * @param param0 \n * @returns \n */\nexport const OpenContractContextProvider : FC<OpenContractContextProps>  = ({openContract, children}) =>{\n\n    const [state, dispatch] = useReducer(\n        domainReducer,\n        DefaultOpenContractContext\n    );\n\n\n    return (\n\n        <OpenContractCtx.Provider value={{\n            ...state,\n            openContract : openContract,\n            dispatch : dispatch\n        }}>\n            {children}\n        </OpenContractCtx.Provider>\n\n    )\n\n}\n\n/**\n * Gives read-only access to domain context.\n * @returns the current domain context.\n */\nexport const useOpenContractContext = () : Readonly<OpenContractContext> =>{\n    const context = useContext(OpenContractCtx);\n    if(!context) throw new Error(\"useOpenContractContext must be called from within a context provider.\");\n    return context;\n}","import React, {FC, ReactElement} from 'react';\nimport { OpenContractContextProvider } from '../Models';\nimport { MainRouter } from \"../Router\";\n\n\nexport type MainSegmentProps = {}\n\nexport const MainSegment : FC<MainSegmentProps>  = () =>{\n\n    return (<OpenContractContextProvider>\n        <MainSegment/>\n    </OpenContractContextProvider>)\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './App.css';\nimport \"./CSS/Main.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { MainRouter } from './Router';\nimport { MainSegment } from './Segments';\nimport {editor} from \"monaco-editor\";\nimport {Colors} from \"./Theme\"\nimport { RunPage } from './Pages';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{\n      height : \"100vh\",\n      overflow : \"scroll\"\n    }}>\n      <MainSegment/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["Benches/Run/RunBenchDesktop.tsx","Layouts/Header/HeaderLayoutDesktop.tsx","Layouts/Header/HeaderLayoutMobile.tsx","Theme/Colors.tsx","Theme/DesktopSizes.tsx","Layouts/Main/MainLayoutDesktop.tsx","Layouts/Main/MainLayoutMobile.tsx","Theme/ColorProvider.tsx","Glitter/Logos/LogoB.tsx","Glitter/Animations/Grow/GrowOnEventAchamaenid.tsx","Glitter/Animations/ThroughGlass/ThroughGlassAgathocles.tsx","Components/Ready/AristophanesReady/AristophanesReady.tsx","Maps/ConnectionStatus/ConnectionStatus.tsx","Maps/Headers/HeaderDesktop.tsx","Components/Navs/ArchimedesNav/ArchimedesNavNode.tsx","Components/Navs/ArchimedesNav/ArchimedesNav.tsx","Maps/Headers/HeaderMobile.tsx","Sytems/MediaResponsive/MediaResponsive.tsx","Maps/Headers/HeaderResponsive.tsx","Components/Walkthrough/Step/StepType.ts","Components/Walkthrough/Step/StepPre.tsx","Components/Walkthrough/Step/SuceededStepPost.tsx","Components/Buttons/AthenaButton/AthenaButton.tsx","Components/Walkthrough/Step/FailedStepPost.tsx","Components/Walkthrough/Step/StepPost.tsx","Components/Walkthrough/Step/Step.tsx","Statics/Steps/CrtStep.tsx","Statics/Steps/WalletStep.tsx","Statics/Steps/EnclaveStep.tsx","Statics/Steps/Steps.tsx","Statics/Steps/simulateNetworkRequest.tsx","Statics/Steps/RunSteps.tsx","Pages/Run/RunPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RunBenchDesktop","dapp","Members","HeaderLayoutDesktop","children","getComponentMembers","Brand","Nav","Account","style","height","width","display","gridTemplateColumns","justifyContent","justifyItems","generateNamedMember","HeaderLayoutMobile","Colors","Maintheme","primaryTextColor","secondaryTextColor","tertiaryTextColor","backgroundColorSecondary","logoColor","readyGreen","waitingYellow","failedRed","forestGreen","forestEdge","deepMaroon","lilac","deepPurple","deepBlue","royalBlue","DesktopSizes","contentWidth","standard","whitespacePreferred","MainLayoutDesktop","Header","Content","Footer","console","log","overflow","MainLayoutMobile","padding","DefaultColorContext","colors","dispatch","ColorContext","createContext","useColorStore","context","useContext","Error","LogoB","main","post","size","fontSize","fontColor","label","_logoColor","_fontColor","alignContent","alignItems","viewBox","xmlns","id","x","y","clipPath","transform","d","fill","fillRule","color","textAlign","lineHeight","GrowOnEventAchamaenid","grow","className","ThroughGlassAgathocles","glass","glassOpacity","opacity","DefaultExpressions","DefaultColors","AristophanesReady","ready","expressions","information","lightStyle","onClick","_expressions","_information","_colors","useState","isHovered","setHovered","onMouseOver","onMouseOut","title","cursor","gridTemplateRows","verticalAlign","ConnectionStatus","crt","wallet","enclave","HOME","HeaderDesktop","ArchimedesNavNode","itemName","selected","onSelect","hovered","onMouseEnter","onMouseLeave","textDecoration","ArchimedesNav","itemNames","initSelected","preventDefault","nodeStyle","length","undefined","setSelected","selecting","setSelecting","handleNodeSelect","Separator","nodes","reduce","agg","index","useEffect","ABOUT","DOCS","HeaderMobile","navigate","useNavigate","handleSelect","item","window","location","href","MediaResponsive","Desktop","Laptop","Tablet","Mobile","Children","toArray","minWidth","maxWidth","HeaderResponsive","StepPre","next","Title","Info","motion","div","animate","position","transition","ease","duration","SucceededStepPost","done","onAnimationComplete","scale","AthenaButton","primaryColor","secondaryColor","invert","disabled","active","loading","action","e","a","isDisabled","setDisabled","isActive","setActive","isLoading","setLoading","setE","then","invertedBackground","Color","lighten","contrast","hex","Button","variant","borderTop","borderLeft","borderBottom","borderRight","backgroundColor","Spinner","animation","FailedStepPost","StepPost","success","Step","CrtStep","WalletStep","src","EnclaveStep","AllSteps","Steps","status","which","handleDone","simulateNetworkRequest","value","upperBound","Promise","resolve","reject","setTimeout","Math","random","RunSteps","setStepStatus","stepStatus","stepIndex","setStepIndex","allDone","setAllDone","data","indexOf","HomePage","readyToRun","setReadyToRun","__isDapp__","gitUrl","functions","name","inputs","outputs","stateMutability","type","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeb83302.chunk.js","sourcesContent":["import React, {FC, ReactElement, useState} from 'react';\nimport { DappI } from '../../Items';\nimport { ApolloDappMainItem } from '../../Items/Dapp/ApolloDapp/ApolloDappMainItem';\n\nexport type RunBenchDesktopProps = {\n    dapp ? : DappI\n}\n\nexport const RunBenchDesktop : FC<RunBenchDesktopProps>  = ({\n    dapp\n}) =>{\n\n    return (\n\n        <>{\"no dapp\"}</>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutDesktopProps = {}\n\nconst HeaderLayoutDesktop : FC<HeaderLayoutDesktopProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            height : \"100%\",\n            width : \"100%\",\n            display : \"grid\",\n            gridTemplateColumns : \"1fr 1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Brand}\n            </div>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutDesktop.Brand = generateNamedMember('Brand');\nHeaderLayoutDesktop.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutDesktop.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutDesktop};","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutMobileProps = {}\n\nconst HeaderLayoutMobile : FC<HeaderLayoutMobileProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            height : \"100%\",\n            width : \"100%\",\n            display : \"grid\",\n            gridTemplateColumns : \"1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Brand}\n            </div>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutMobile.Brand = generateNamedMember('Brand');\nHeaderLayoutMobile.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutMobile.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutMobile};","export const Colors = {\n    Maintheme : \"#373737\",\n    primaryTextColor : \"#FAF9F6\",\n    secondaryTextColor : \"#515151\",\n    tertiaryTextColor : \"#979797\",\n    backgroundColorSecondary : \"#D7D7D7\",\n    logoColor : \"#D7D7D7\",\n    readyGreen : \"#11db1e\",\n    waitingYellow : \"#fceb2f\",\n    failedRed : \"#ff0000\",\n    forestGreen : \"#011210\",\n    forestEdge : \"#034b30\",\n    deepMaroon : \"#350000\",\n    lilac : \"#C8A2C8\",\n    deepPurple: \"#301934\",\n    deepBlue : \"#000022\",\n    royalBlue : \"#4169e1\"\n} as const","export const DesktopSizes = {\n    Main : {\n        contentWidth : 950\n    },\n    Padding : {\n        standard : \"10px\",\n        whitespacePreferred : \"40px\"\n    },\n    BorderRadius : {\n        standard : \"5px\"\n    }\n} as const","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutDesktopProps = {}\n\nconst MainLayoutDesktop : FC<MainLayoutDesktopProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    console.log(Header, Content);\n\n    return (\n\n        <div style={{\n            height : \"auto\",\n            width : \"100vw\",\n            display : \"grid\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                width : DesktopSizes.Main.contentWidth,\n                overflow : \"visible\"\n            }}>\n                <div style={{\n                    height : \"200px\",\n                    width : \"100%\"\n                }}>\n                    {Header}\n                </div>\n                <div style={{\n                    height : \"auto\",\n                    width : \"100%\",\n                    overflow : \"visible\"\n                }}> \n                    {Content}\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutDesktop.Header = generateNamedMember(\"Header\");\nMainLayoutDesktop.Content = generateNamedMember(\"Content\");\nMainLayoutDesktop.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutDesktop}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutMobileProps = {}\n\nconst MainLayoutMobile : FC<MainLayoutMobileProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    console.log(Header, Footer, Content);\n\n    return (\n\n        <div style={{\n            height : \"auto\",\n            width : \"100vw\",\n            padding : DesktopSizes.Padding.whitespacePreferred,\n            display : \"grid\",\n            gridTemplateColumns: \"1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                width : \"100%\",\n            }}>\n                <div style={{\n                    height : \"200px\",\n                    width : \"100%\"\n                }}>\n                    {Header}\n                </div>\n                <div style={{\n                    height : \"auto\",\n                    width : \"100%\",\n                    overflow : \"visible\"\n                }}> \n                    {Content}\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutMobile.Header = generateNamedMember('Header');\nMainLayoutMobile.Content = generateNamedMember(\"Content\");\nMainLayoutMobile.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutMobile}","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { Colors } from './Colors';\n\n\nexport interface ColorContextI {\n    colors : typeof Colors,\n    dispatch : (fn : (state : ColorContextI)=>ColorContextI)=>void\n}\n\nconst DefaultColorContext : ColorContextI = {\n    colors : Colors,\n    dispatch : ()=>{}\n}\n\n\nexport const ColorContext = createContext(DefaultColorContext);\n\nexport const ColorReducer = (\n    state : ColorContextI, \n    action : (state : ColorContextI)=>ColorContextI\n)=>{\n    return action(state);\n}\n\nexport type ColorProviderProps = typeof Colors\n\nexport const ColorProvider : FC<ColorProviderProps>  = (props) =>{\n\n    const {\n        children,\n        ...colors\n    } = props;\n\n    const [state, dispatch] = useReducer(ColorReducer, DefaultColorContext);\n\n    return (\n\n        <ColorContext.Provider value={{\n            ...state,\n            colors : colors\n        }}>\n                {props.children}\n        </ColorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useColorStore = () : ColorContextI=>{\n\n    const context = useContext(ColorContext);\n\n    if(!context){\n        throw new Error(\"useColors must be called within a ColorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport {File} from \"react-bootstrap-icons\";\nimport { useColorStore } from '../../Theme/ColorProvider';\n\nexport type LogoBProps = {\n    main? : string,\n    post? : string,\n    size? : React.CSSProperties[\"height\"],\n    fontSize ? : React.CSSProperties[\"height\"],\n    logoColor? : React.CSSProperties[\"color\"],\n    fontColor? : React.CSSProperties[\"color\"]\n    label ? : boolean\n}\n\nexport const LogoB : FC<LogoBProps>  = ({\n    main = \"OPEN\",\n    post = \"CONTRACTS\",\n    size = \"80px\",\n    fontSize = \"24px\",\n    logoColor,\n    fontColor,\n    label = true\n}) =>{\n\n    const Colors = useColorStore();\n    const _logoColor = logoColor || Colors.colors.primaryTextColor;\n    const _fontColor = fontColor || Colors.colors.tertiaryTextColor;\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <div style={{\n                height : size,\n                width : size\n            }}>\n                <svg viewBox=\"0 0 1295 1296\" xmlns=\"http://www.w3.org/2000/svg\"\n                overflow=\"hidden\">\n                    <defs>\n                        <clipPath id=\"clip0\">\n                            <rect x=\"1308\" y=\"55\" width=\"1295\" height=\"1296\" />\n                        </clipPath>\n                    </defs>\n                    <g clipPath=\"url(#clip0)\" transform=\"translate(-1308 -55)\">\n                        <path\n                            d=\"M2281.32 449.263 2551.39 449.263 2552.12 450.769C2584.88 528.295 2603 613.53 2603 703 2603 792.47 2584.88 877.705 2552.12 955.231L2550.93 957.704 2280.6 957.704 2298.15 934.214C2342.71 868.213 2368.72 788.647 2368.72 703 2368.72 617.353 2342.71 537.787 2298.15 471.786ZM1955.5 55C2156.65 55 2336.38 146.796 2455.14 290.812L2455.18 290.863 1983.28 290.863 1955.5 289.459C1727.28 289.459 1542.28 474.608 1542.28 703 1542.28 931.392 1727.28 1116.54 1955.5 1116.54L1964.14 1116.1 2454.31 1116.1 2413.35 1161.21C2296.18 1278.47 2134.3 1351 1955.5 1351 1597.9 1351 1308 1060.88 1308 703 1308 345.119 1597.9 55 1955.5 55Z\"\n                            fill={_logoColor} fillRule=\"evenodd\" />\n                    </g>\n                </svg>\n            </div>\n            &emsp;\n            {label && <div style={{\n                fontSize : fontSize,\n                color : _fontColor,\n                textAlign : \"left\",\n                lineHeight : \"1.3em\"\n            }}>\n                {main}\n                <br/>\n                {post}\n            </div>}\n        </div>\n       \n    )\n\n}","import React, {FC, ReactElement} from 'react';\n\nexport type GrowOnEventAchamaenidProps = {\n    grow ? : boolean,\n    style? : React.CSSProperties\n}\n\nexport const GrowOnEventAchamaenid : FC<GrowOnEventAchamaenidProps>  = ({\n    grow = false,\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n        className={grow ? \"grow\" : \"anti-grow\"}\n        style={{\n            ...style\n        }}>\n            {children}\n        </div>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\n\nexport type ThroughGlassAgathoclesProps = {\n    glass ? : boolean,\n    style ? : React.CSSProperties,\n    glassOpacity ? : React.CSSProperties[\"opacity\"]\n}\n\nexport const ThroughGlassAgathocles : FC<ThroughGlassAgathoclesProps>  = ({\n    glass = false,\n    glassOpacity = \".95\",\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n            style={{\n                opacity : glass ? glassOpacity : \"1.0\",\n                ...style\n            }}>\n                {children}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Colors} from \"../../../Theme\";\nimport {CircleFill as Circle} from \"react-bootstrap-icons\";\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\nimport { useState } from 'react';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\n\nexport type ReadyT = \"ready\" | \"not ready\" | \"failed\";\n\nexport interface StateMapI<T extends any = string> {\n    \"ready\" ? : T,\n    \"not ready\" ? : T, \n    \"failed\" ? : T\n}\n\nexport type AristophanesReadyProps = {\n    ready ? : \"ready\" | \"not ready\" | \"failed\",\n    label ? : string,\n    size ? : React.CSSProperties[\"height\"],\n    expressions ? : StateMapI,\n    information ? : StateMapI,\n    colors ? : StateMapI<React.CSSProperties[\"color\"]>,\n    style ? : React.CSSProperties,\n    lightStyle ? : React.CSSProperties,\n    onClick ?  : (ready : AristophanesReadyProps[\"ready\"])=>void\n}\n\nexport const DefaultExpressions : StateMapI = {\n    \"ready\" : \"Ready!\",\n    \"not ready\" : \"Awaiting...\",\n    \"failed\" : \"Failed\"\n} as const\n\nexport const DefaultInformation : StateMapI = {\n    \"ready\" : \"The dependency has been loaded.\",\n    \"not ready\" : \"Trying to load the dependency.\",\n    \"failed\" : \"We could not load the dependency.\"\n} as const\n\nexport const DefaultColors : StateMapI<React.CSSProperties[\"color\"]> = {\n    \"ready\" : Colors.readyGreen,\n    \"not ready\" : Colors.waitingYellow,\n    \"failed\" : Colors.failedRed\n} as const\n\n/**\n * A Ready button.\n * @param props\n * @returns \n */\nexport const AristophanesReady : FC<AristophanesReadyProps>  = ({\n    ready = \"not ready\",\n    label,\n    expressions,\n    information,\n    colors,\n    size,\n    style,\n    lightStyle,\n    onClick\n}) =>{\n\n    const _expressions = {\n        ...DefaultExpressions,\n        ...expressions\n    }\n\n    const _information = {\n        ...DefaultExpressions,\n        ...information\n    }\n\n    const _colors = {\n        ...DefaultColors,\n        ...colors\n    }\n\n    const handleClick = ()=>{\n        onClick && onClick(ready);\n    }\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n        <ThroughGlassAgathocles glass={isHovered} glassOpacity={.7}>\n             <GrowOnEventAchamaenid grow={isHovered}>\n                <div\n                onMouseOver={handleMouseOver}\n                onMouseOut={handleMouseOut}\n                title={_information[ready]}\n                onClick={handleClick}\n                style={{\n                    display : \"flex\",\n                    gridTemplateColumns : \"1fr 5fr\",\n                    justifyContent : \"left\",\n                    justifyItems : \"left\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    height : \"40px\",\n                    fontSize : \"15px\",\n                    width : \"auto\",\n                    cursor : \"pointer\",\n                    ...style\n                }}>\n                    <div style={{\n                        display: \"flex\",\n                        height : \"100%\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Circle \n                        color={_colors[ready]}\n                        size={\"65%\"}\n                        style={{\n                            ...lightStyle\n                        }}/>\n                    </div>\n                    &ensp;\n                    <div style={{\n                        display : \"flex\",\n                        height : \"100%\",\n                        gridTemplateColumns : \"1fr\",\n                        gridTemplateRows : \"1fr 1fr\",\n                        verticalAlign : \"center\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <div>\n                            <span style={{\n                                color : Colors.primaryTextColor\n                            }}>{label}</span><br/>\n                            <span style={{\n                                color : Colors.tertiaryTextColor\n                            }}>\n                                {_expressions[ready]}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </GrowOnEventAchamaenid>\n        </ThroughGlassAgathocles>\n       \n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AristophanesReady, ReadyT } from '../../Components/Ready/AristophanesReady/AristophanesReady';\n\nexport type ConnectionStatusProps = {\n    crt ? : ReadyT,\n    wallet ? : ReadyT,\n    enclave ? : ReadyT\n}\n\nexport const ConnectionStatus : FC<ConnectionStatusProps>  = ({\n    crt,\n    wallet,\n    enclave\n}) =>{\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            height : \"100%\",\n            alignContent : \"center\",\n            alignItems : \"center\",\n            justifyItems : \"right\",\n            justifyContent : \"right\",\n            textAlign : \"left\"\n        }}>\n            <AristophanesReady label={\"Wallet\"} ready={wallet} />\n            &emsp;\n            &emsp;\n            <AristophanesReady label={\"Root CA\"} ready={crt} />\n            &emsp;\n            &emsp;\n            <AristophanesReady label={\"Enclave\"} ready={enclave}/>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutDesktop} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\nimport {ConnectionStatus} from \"../ConnectionStatus\";\nimport { ReadyT } from '../../Components/Ready/AristophanesReady/AristophanesReady';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\";\n\nexport type HeaderDesktopProps = {\n    crt ? : ReadyT,\n    wallet ? : ReadyT,\n    enclave ? : ReadyT\n}\n\nexport const HeaderDesktop : FC<HeaderDesktopProps>  = ({\n    crt,\n    wallet,\n    enclave\n}) =>{\n\n\n    return (\n\n        <HeaderLayoutDesktop>\n            <HeaderLayoutDesktop.Brand>\n                <div \n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"left\",\n                    justifyContent : \"left\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutDesktop.Brand>\n            <HeaderLayoutDesktop.Nav>\n                <ConnectionStatus crt={crt} wallet={wallet} enclave={enclave}/>\n            </HeaderLayoutDesktop.Nav>\n        </HeaderLayoutDesktop>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { useColorStore } from '../../../Theme/ColorProvider';\n\nexport type ArchimedesNavNodeProps = {\n    itemName : string,\n    selected : boolean,\n    onSelect : (item : string)=>void,\n    size? : React.CSSProperties[\"height\"],\n    style? : React.CSSProperties,\n    key? : React.Key\n}\n\nexport const ArchimedesNavNode : FC<ArchimedesNavNodeProps>  = ({\n    itemName,\n    selected,\n    onSelect,\n    size,\n    style\n}) =>{\n\n    const [hovered, setHovered]  = useState(false);\n\n    const handleMouseEnter = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseLeave = ()=>{\n        setHovered(false);\n    }\n\n    const handleSelected = ()=>{\n        onSelect(itemName);\n    }\n\n    const Colors = useColorStore();\n\n    return (\n\n        <span \n        key={itemName}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        onClick={handleSelected}\n        style={{\n            color : selected ? Colors.colors.primaryTextColor : Colors.colors.tertiaryTextColor,\n            textDecoration : hovered ? \"underline\" : \"none\",\n            fontSize : size,\n            cursor : \"pointer\",\n            padding : DesktopSizes.Padding.standard,\n            ...style\n        }}>\n            {itemName}\n        </span>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ArchimedesNavNode } from './ArchimedesNavNode';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Separator\"];\n\nexport type ArchimedesNavProps = {\n    itemNames : string[],\n    onSelect ?: (item : string)=>void,\n    initSelected? : string,\n    preventDefault? : boolean,\n    nodeStyle? : React.CSSProperties\n}\n\nconst ArchimedesNav : FC<ArchimedesNavProps> & {\n    Separator : FC\n} = ({\n    children,\n    itemNames,\n    onSelect,\n    initSelected,\n    preventDefault = false,\n    nodeStyle\n}) =>{\n\n    const [selected, setSelected] = useState(\n        initSelected ||\n        ( itemNames.length ? itemNames[0] : undefined )\n    )\n\n    const [selecting, setSelecting] = useState<string|undefined>(undefined);\n    const handleNodeSelect = (itemName : string)=>{\n        setSelecting(itemName);\n    }\n\n    const {\n        Separator\n    } = getComponentMembers(Members, children);\n\n    const nodes = itemNames.reduce((agg, itemName, index)=>{\n        return [\n            ...agg,\n            <span key={itemName}>\n                {index < itemNames.length - 1 ? (\n                    <>\n                    <ArchimedesNavNode \n                        key={itemName}\n                        style={nodeStyle}\n                        selected={selected === itemName} \n                        itemName={itemName} \n                        onSelect={handleNodeSelect}/>\n                    {Separator||<span key={index}>&emsp;</span>}\n                </>\n                ) : (\n            \n                        <ArchimedesNavNode \n                            key={itemName}\n                            style={nodeStyle}\n                            selected={selected === itemName} \n                            itemName={itemName} \n                            onSelect={handleNodeSelect}/>\n                )}\n            </span>\n        ]\n    }, [] as React.ReactNode[])\n\n    useEffect(()=>{\n        if(selecting){\n            setSelecting(undefined);\n            !preventDefault && setSelected(selecting);\n            onSelect && onSelect(selecting)\n        }\n    })\n\n    return (\n\n        <div>\n            {nodes}\n        </div>\n\n    )\n\n}\n\nArchimedesNav.Separator = generateNamedMember(\"Separator\");\nexport { ArchimedesNav};","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutMobile} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\"\n\nexport type HeaderMobileProps = {\n    selected : string\n}\n\nexport const HeaderMobile : FC<HeaderMobileProps>  = ({\n    selected\n}) =>{\n\n    const Colors = useColorStore();\n\n    const navigate = useNavigate();\n\n    const goHome = ()=>{\n        navigate(HOME_PATH);\n    }\n\n    const goAbout = ()=>{\n        navigate(ABOUT_PATH);\n    }\n\n    const goDocs = ()=>{\n        window.location.href = DOCS_PATH;\n    }\n\n    const handleSelect = (item : string)=>{\n\n        if(item === ABOUT) {\n            goAbout();\n        } else if(item === DOCS){\n            goDocs();\n        } else {\n            goHome();\n        }\n\n    }\n\n    const handleLogo  = ()=>{\n        handleSelect(\"HOME\")\n    }\n\n    return (\n\n        <HeaderLayoutMobile>\n            <HeaderLayoutMobile.Brand>\n                <div \n                    onClick={handleLogo}\n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"center\",\n                    justifyContent : \"center\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutMobile.Brand>\n            <HeaderLayoutMobile.Nav>\n                <div style={{\n                    height : \"100%\",\n                    width : \"100%\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"center\",\n                    justifyContent : \"center\",\n                    display : \"grid\"\n                }}>\n                    <ArchimedesNav nodeStyle={{\n                        fontSize : \"20px\"\n                    }}\n                    initSelected={selected}\n                    onSelect={handleSelect}\n                    itemNames={[\n                        HOME, ABOUT, DOCS\n                    ]} />\n                </div>\n            </HeaderLayoutMobile.Nav>\n        </HeaderLayoutMobile>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport MediaQuery from \"react-responsive\";\n\nconst Members = [\"Desktop\", \"Laptop\", \"Tablet\", \"Mobile\"] as const;\n\nexport type MediaResponsiveProps = {}\n\n/**\n * Uses media queries to control component display by media type.\n * @param param0 \n * @returns a ReactNode displaying the appropriate component view by media type.\n */\nconst MediaResponsive : FC<MediaResponsiveProps> & {\n    Desktop : FC,\n    Laptop : FC,\n    Tablet : FC,\n    Mobile : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Desktop,\n        Laptop,\n        Tablet,\n        Mobile\n    } = getComponentMembers(Members, children);\n\n    console.log(Children.toArray(children), Desktop, Laptop)\n\n    return (\n\n        <>\n            <MediaQuery minWidth={1200}>\n                {Desktop}\n            </MediaQuery>   \n            <MediaQuery minWidth={992} maxWidth={1199}>\n                {Laptop}\n            </MediaQuery>\n            <MediaQuery minWidth={768} maxWidth={991}>\n                {Tablet}\n            </MediaQuery>\n            <MediaQuery maxWidth={767}>\n                {Mobile}\n            </MediaQuery>\n        </>\n\n    )\n\n}\n\nMediaResponsive.Desktop = generateNamedMember(\"Desktop\");\nMediaResponsive.Laptop = generateNamedMember(\"Laptop\");\nMediaResponsive.Tablet = generateNamedMember(\"Tablet\");\nMediaResponsive.Mobile = generateNamedMember(\"Mobile\")\n\nexport { MediaResponsive };\n\n","import React, {FC, ReactElement} from 'react';\nimport {MediaResponsive} from \"../../Sytems\";\nimport {HeaderDesktop, HeaderMobile} from \".\";\n\nexport type HeaderResponsiveProps = {\n    selected : string\n}\n\nexport const HeaderResponsive : FC<HeaderResponsiveProps>  = ({\n    selected\n}) =>{\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <HeaderDesktop/>\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <HeaderDesktop/>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <HeaderMobile selected={selected}/>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <HeaderMobile selected={selected}/>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React from \"react\";\n\nexport const Members = [\"Title\", \"Info\", \"Content\"] as const;\n\nexport type StepMemberI = typeof Members[number];\nexport type StepStylesT = {\n    [key in StepMemberI] : React.CSSProperties\n} & {\n    wrapper : React.CSSProperties\n}\n","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\n\nexport type StepPreProps = {\n    next ? : ()=>void\n}\n\nconst StepPre : FC<StepPreProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    next,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            y : [300, 0]\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : 1\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.primaryTextColor\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : [0, 0, 0, 0, 1.0]\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 1.25\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                <motion.div \n                    animate={{\n                        opacity : [0, 0, 1.0],\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 2.0\n                    }}\n                >\n                    {Content}\n                </motion.div>\n            </div>\n    )\n\n}\n\nStepPre.Title = generateNamedMember(\"Title\");\nStepPre.Info = generateNamedMember(\"Info\");\nStepPre.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPre}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {Check} from \"react-bootstrap-icons\";\n\nexport type SucceededStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const SucceededStepPost : FC<SucceededStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <motion.div \n            onAnimationComplete={()=>{\n                done && done(true);\n            }}\n            animate={{\n                opacity : [1.0, 1.0, 1.0, 0.0],\n                scale : [1.0, .75, .25, .05],\n                position : [\"relative\", \"relative\", \"relative\", \"relative\"],\n                y : [0, 0, -200, -300],\n                x : [0, 0, 200, 300]\n            }}\n            transition={{\n                ease : \"easeInOut\",\n                duration : 2.0\n            }}\n        >\n           {children}\n           <motion.div\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    width : [0, 80],\n                    color : Colors.readyGreen\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .75\n                }}\n            >\n                <Check size={60}/>\n            </motion.div>\n        </motion.div>\n\n    )\n\n}","import Color from \"color\";\nimport React, { FC, useEffect, useState } from 'react';\nimport {Button, Spinner } from \"react-bootstrap\";\n\n\n/**\n * @initialAuthor\n * @contributors\n */\n\n/**\n * @description\n */\nexport type AthenaButtonProps = {\n    label?: string,\n    primaryColor: React.CSSProperties[\"color\"],\n    secondaryColor: React.CSSProperties[\"color\"],\n    invert? : boolean,\n    disabled?: boolean,\n    active?: boolean,\n    loading?: boolean,\n    size?: \"sm\" | \"lg\" | undefined,\n    action? : (e? : React.MouseEvent)=>Promise<void>,\n    onClick? : (e : React.MouseEvent)=>void,\n    onMouseEnter? : (e : React.MouseEvent)=>void,\n    onMouseLeave? : (e : React.MouseEvent)=>void,\n    style?: React.CSSProperties\n}\n\n/**\n * @description \n */\nexport const AthenaButton : FC<AthenaButtonProps>  = ({\n    label, \n    primaryColor, \n    secondaryColor,\n    children,\n    invert=false,\n    disabled=false,\n    active=false,\n    loading=false,\n    size=undefined,\n    action=async (e? : React.MouseEvent)=>{return},\n    onClick=(e: React.MouseEvent)=>{},\n    onMouseEnter=(e: React.MouseEvent)=>{},\n    onMouseLeave=(e: React.MouseEvent)=>{},\n    style\n}) =>{\n\n    const [isDisabled, setDisabled] = useState(disabled);\n    const [isActive, setActive] = useState(active);\n    const [isLoading, setLoading] = useState(loading);\n    const [e, setE] = useState<React.MouseEvent|undefined>(undefined)\n\n    useEffect(()=>{\n        if(isLoading){\n            action(e).then(()=>{\n                setDisabled(false);\n                setLoading(false);\n                setActive(false);\n            })\n        }\n    })\n\n\n\n    const invertedBackground = Color(primaryColor).lighten(1/(10 - Color(primaryColor).contrast(Color(secondaryColor)))).hex()\n\n    const handleClick = (e : React.MouseEvent<HTMLElement>)=>{\n        onClick(e);\n        setE(e);\n        setDisabled(true);\n        setLoading(true);\n        setActive(true);\n        setHovered(false);\n    }\n\n    const [isHovered, setHovered] = useState(false); \n    const handleMouseEnter = (e : React.MouseEvent)=>{\n        setHovered(true);\n        onMouseEnter(e);\n    }\n    const handleMouseLeave = (e : React.MouseEvent)=>{\n        setHovered(false);\n        onMouseLeave(e);\n    }\n\n    return (\n\n        <Button\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            variant={`outline`}\n            disabled={isDisabled||disabled}\n            active={isActive||active}\n            size={size}\n            onClick={handleClick}\n            style={{\n                cursor: \"pointer\",\n                transition: isHovered? \"all .1s ease-in-out\" : \"\",\n                display: \"inline-block\",\n                color: isHovered? secondaryColor : !invert ? primaryColor : secondaryColor,\n                borderTop: `1px solid ${primaryColor}`,\n                borderLeft: `1px solid ${primaryColor}`,\n                borderBottom: `1px solid ${primaryColor}`,\n                borderRight: `1px solid ${primaryColor}`,\n                backgroundColor: isHovered? primaryColor : invert ? invertedBackground : secondaryColor,\n                ...style\n            }}\n        >{label||children}<span style={{display: isLoading||loading ? \"inline-block\" : \"none\"}}>&ensp;</span><Spinner\n            animation=\"border\"\n            style={{\n                display : isLoading||loading ? \"inline-block\" : \"none\", \n                height : \"15px\",\n                width: \"15px\"\n            }}\n            ></Spinner>\n        </Button>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {X} from \"react-bootstrap-icons\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type FailedStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const FailedStepPost : FC<FailedStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <div>\n           {children}\n           <motion.div\n                onAnimationComplete={()=>{\n                    done && done(false);\n                }}\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    scale : [0, 1.5, 1.1, 1.0, 1.0],\n                    color : Colors.failedRed\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .5\n                }}\n            >\n                <X size={60}/>\n            </motion.div>\n            <motion.div\n                style={{\n                    display: \"grid\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\" \n                }}\n                animate={{\n                    display : [\"none\", \"block\"],\n                    opacity : [0.0, 0.0, 0.0, 1.0],\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .75\n                }}\n            >\n                <AthenaButton \n                    size={\"lg\"}\n                    primaryColor={Colors.primaryTextColor} \n                    secondaryColor={Colors.Maintheme}>Retry</AthenaButton>\n            </motion.div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport {SucceededStepPost} from \"./SuceededStepPost\";\nimport {FailedStepPost} from \"./FailedStepPost\";\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type StepPostProps = {\n    done ? : (success : boolean)=>void,\n    success ? : boolean\n}\n\nconst StepPost : FC<StepPostProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    done,\n    success,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\",\n                justifyContent : \"center\",\n                justifyItems : \"center\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            opacity : success ? [1.0, .25, 0] : 1.0,\n                            y : success ? [0, 0, 100] : 0\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : 1\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.primaryTextColor\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : success ? [1.0, 0, 0] : 1.0\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 1\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                {success && <SucceededStepPost done={done}>\n                    {Content}\n                </SucceededStepPost>}\n                {!success && <FailedStepPost done={done}>\n                    {Content}\n                </FailedStepPost>}\n            </div>\n    )\n\n}\n\nStepPost.Title = generateNamedMember(\"Title\");\nStepPost.Info = generateNamedMember(\"Info\");\nStepPost.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPost}","import React, {FC, ReactElement} from 'react';\nimport { StepContainer } from './StepContainer';\nimport { StepPre, } from './StepPre';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport { Members } from './StepType';\nimport {StepPost} from \"./StepPost\";\nimport { ReadyT } from '../../Ready/AristophanesReady/AristophanesReady';\n\n\nexport type StepProps = {\n    style ? : React.CSSProperties,\n    ready ? : ReadyT,\n    done ? : (success : boolean)=>void\n}\n\nconst Step : FC<StepProps> & {\n    \n    Title : FC,\n    Info : FC,\n    Content : FC\n\n}  = ({\n    style,\n    children,\n    done,\n    ready = \"not ready\"\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children)\n\n    return (\n\n        <>{ready === \"not ready\" ? <StepPre>\n            <StepPre.Title>\n                {Title}\n            </StepPre.Title>\n            <StepPre.Info>\n                {Info}\n            </StepPre.Info>\n            <StepPre.Content>\n                {Content}\n            </StepPre.Content>\n        </StepPre> : ready === \"ready\" ? \n        <StepPost success={true} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost> : \n        <StepPost success={false} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost>\n        }\n        \n        </>\n\n    )\n\n}\n\nStep.Title = generateNamedMember(\"Title\");\nStep.Info = generateNamedMember(\"Info\");\nStep.Content = generateNamedMember(\"Content\");\n\nexport {Step}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type CrtStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const CrtStep : FC<CrtStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}\n        >\n            <Step.Title>\n                Step 2: Checking Root CA\n            </Step.Title>\n            <Step.Info>\n                You must have installed our Root CA to use this application.\n            </Step.Info>\n            <Step.Content>\n                <Key size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type WalletStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const WalletStep : FC<WalletStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}>\n            <Step.Title>\n                Step 1: Connecting to MetaMask\n            </Step.Title>\n            <Step.Info>\n                We need to connect to your MetaMask to run the application.\n            </Step.Info>\n            <Step.Content>\n                <img \n                    width={60}\n                    src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/1200px-MetaMask_Fox.svg.png\"}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\nimport { CpuFill } from 'react-bootstrap-icons';\nimport { useState } from 'react';\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\n\nexport type EnclaveStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const EnclaveStep : FC<EnclaveStepProps>  = ({\n    ready,\n    done \n}) =>{\n\n    return (\n\n        <Step ready={ready} done={done}>\n            <Step.Title>\n                Step 3: Connecting to an enclave\n            </Step.Title>\n            <Step.Info>\n                Any oracles that require an enclave will be executed against the one we find for you.\n            </Step.Info>\n            <Step.Content>\n                <CpuFill size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {ReadyT} from \"../../Components/Ready/AristophanesReady\";\nimport { CrtStep } from './CrtStep';\nimport {WalletStep} from \"./WalletStep\";\nimport {EnclaveStep} from \"./EnclaveStep\";\n\nexport const AllSteps = [\"wallet\", \"crt\", \"enclave\"];\n\nexport type StepStatusT = {\n    [key in typeof AllSteps[number]] : ReadyT\n}\n\nexport type StepsProps = {\n    done ? : (which : string, success : boolean)=>void\n    status ? : StepStatusT,\n    which ? : typeof AllSteps[number],\n}\n\nexport const Steps : FC<StepsProps>  = ({\n    done,\n    status = {\n        crt : \"not ready\",\n        wallet : \"not ready\",\n        enclave : \"not ready\"\n    },\n    which  = \"crt\"\n}) =>{\n\n    const handleDone = (success : boolean)=>{\n        done && done(which, success);\n    }\n\n    if(which === \"crt\"){\n\n        return (\n            <CrtStep ready={status[which]} done={handleDone}/>\n        )\n\n    }\n\n    if(which === \"wallet\"){\n        return (\n            <WalletStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    if(which === \"enclave\"){\n        return (\n            <EnclaveStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    return (\n\n        <>Step not found.</>\n\n    )\n\n}","export const simulateNetworkRequest =  async <T extends any>(value : T, upperBound : number = 5000) : Promise<T> =>{\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            resolve(value);\n        }, Math.random() * upperBound)\n    })\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {Steps, AllSteps, StepStatusT} from \"./Steps\";\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\n\nexport type RunStepsProps = {\n    done ? : ()=>void,\n    setStepStatus ? : (stepStatus : StepStatusT)=>void,\n    stepStatus : StepStatusT\n}\n\nexport const RunSteps : FC<RunStepsProps>  = ({\n    done,\n    setStepStatus,\n    stepStatus\n}) =>{\n\n    const [stepIndex, setStepIndex] = useState(0);\n    const [allDone, setAllDone] = useState(false);\n\n    const handleDone = (which : string, success : boolean)=>{\n        const index = AllSteps.indexOf(which);\n        if((index !== undefined) && (index < AllSteps.length - 1) && success){\n            setStepIndex(stepIndex + 1);\n            return;\n        }\n        if((index !== undefined) && (index > AllSteps.length - 2) && success){\n            setAllDone(true);\n        }\n    }\n\n    useEffect(()=>{\n\n        simulateNetworkRequest<StepStatusT>({\n            ...stepStatus,\n            [AllSteps[stepIndex]] : \"ready\"\n        }).then((data)=>{\n            setStepStatus && setStepStatus(data)\n        })\n\n    }, [stepStatus])\n\n    useEffect(()=>{\n        if(allDone){\n            done && done();\n        }\n    })\n\n    return (\n\n        <Steps \n        done={handleDone}\n        which={AllSteps[stepIndex]}\n        status={stepStatus}/>\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {Step} from \"../../Components/Walkthrough/Step\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {RunSteps} from \"../../Statics/Steps/RunSteps\";\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport { ethers } from 'ethers';\n\ndeclare global {\n    interface Window {\n        ethereum : ethers.providers.ExternalProvider\n    }\n}\n\nexport type HomePageProps = {}\n\nexport const simulateNetworkRequest =  async <T extends any>(value : T, upperBound : number = 5000) : Promise<T> =>{\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            resolve(value);\n        }, Math.random() * upperBound)\n    })\n}\n\nexport const HomePage : FC<HomePageProps>  = () =>{\n\n\n    const [stepStatus, setStepStatus] = useState<StepStatusT>({\n        crt : \"not ready\",\n        wallet : \"not ready\",\n        enclave : \"not ready\"\n    });\n\n    const [readyToRun, setReadyToRun] = useState(false);\n    const handleAllDone = ()=>{\n        setReadyToRun(true);\n    }\n   \n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderDesktop crt={stepStatus.crt} enclave={stepStatus.enclave} wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        {!readyToRun&&\n                            <RunSteps done={handleAllDone} setStepStatus={setStepStatus} stepStatus={stepStatus}/>\n                        }\n                        {readyToRun && \n                            <RunBenchDesktop dapp={{\n                                __isDapp__ : true,\n                                id : \"test\",\n                                gitUrl : \"https://github.com/open-contracts/reforestation-commitments\",\n                                functions : [\n                                    {\n                                        name : \"helloWorld\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"helloFriend\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"spray\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"sprayOracle\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"helloWorld\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"helloFriend\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"spray\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"sprayOracle\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"helloWorld\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"helloFriend\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"spray\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    },\n                                    {\n                                        name : \"sprayOracle\",\n                                        inputs : [],\n                                        outputs : [],\n                                        stateMutability : \"none\",\n                                        type : \"oracle\"\n                                    }\n                                ]\n                            }}/>\n                        }\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                            <Step/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n    )\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './App.css';\nimport \"./CSS/Main.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { MainRouter } from './Router';\nimport { MainSegment } from './Segments';\nimport {editor} from \"monaco-editor\";\nimport {Colors} from \"./Theme\"\nimport { HomePage } from './Pages';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
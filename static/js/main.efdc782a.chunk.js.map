{"version":3,"sources":["Error/ErrorProvider/ErrorProvider.tsx","Error/ErrorProvider/ErrorDispatch.tsx","Error/UniversalErrorBoundary/UniversalErrorBoundary.tsx","Theme/Colors.tsx","Theme/DesktopSizes.tsx","Error/ErrorNotification/CrashLogo.tsx","Error/ErrorNotification/ErrorNotification.tsx","Error/IntegratedErrorBoundary/IntegratedErrorBoundary.tsx","Layouts/Header/HeaderLayoutDesktop.tsx","Layouts/Header/HeaderLayoutMobile.tsx","Layouts/Main/MainLayoutDesktop.tsx","Layouts/Main/MainLayoutMobile.tsx","Theme/ColorProvider.tsx","Glitter/Logos/LogoB.tsx","Glitter/Animations/Grow/GrowOnEventAchamaenid.tsx","Glitter/Animations/ThroughGlass/ThroughGlassAgathocles.tsx","Components/Ready/AristophanesReady/AristophanesReady.tsx","Maps/ConnectionStatus/ConnectionStatus.tsx","Maps/Headers/HeaderDesktop.tsx","Components/Navs/ArchimedesNav/ArchimedesNavNode.tsx","Components/Navs/ArchimedesNav/ArchimedesNav.tsx","Maps/Headers/HeaderMobile.tsx","Sytems/MediaResponsive/MediaResponsive.tsx","Maps/Headers/HeaderResponsive.tsx","Components/Walkthrough/Step/StepType.ts","Components/Walkthrough/Step/StepPre.tsx","Components/Walkthrough/Step/SuceededStepPost.tsx","Components/Buttons/AthenaButton/AthenaButton.tsx","Components/Walkthrough/Step/FailedStepPost.tsx","Components/Walkthrough/Step/StepPost.tsx","Components/Walkthrough/Step/Step.tsx","Statics/Steps/CrtStep.tsx","Statics/Steps/WalletStep.tsx","Statics/Steps/EnclaveStep.tsx","Statics/Steps/Steps.tsx","Statics/Steps/simulateNetworkRequest.tsx","Statics/Steps/RunSteps.tsx","Pages/Run/NotReadyToRun.tsx","Sytems/Octokit/index.ts","Items/Dapp/Dapp.tsx","Items/Dapp/ApolloDapp/ApolloRunDappContent.tsx","Items/DappPut/Standards/DefaultHeader.tsx","Items/DappPut/DappInput/DappInputHeader.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunction.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctions.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionGridView.tsx","Items/DappPut/DappInput/DappInput.tsx","Items/DappPut/DappPutLayout.tsx","Items/DappPut/DappInteractput/DappInteractputHeader.tsx","Items/DappPut/Methods/color.ts","Items/DappPut/DappInteractput/DappInteractputContent.tsx","Items/DappPut/DappInteractput/DappInteractput.tsx","Items/DappPut/DappOutput/DappOutputHeader.tsx","Items/DappPut/DappOutput/DappOutputContent.tsx","Items/DappPut/DappOutput/DappOutput.tsx","Items/DappPut/DappErrput/DappErrputHeader.tsx","Items/DappPut/DappErrput/DappErrputContent.tsx","Items/DappPut/DappErrput/DappErrput.tsx","Items/DappPut/DappDescput/DappDescputHeader.tsx","Items/DappPut/DappDescput/DappDescputContent.tsx","Items/DappPut/DappDescput/DappDescput.tsx","Items/DappPut/DappOracleput/DappOracleputHeader.tsx","Items/DappPut/DappOracleput/OracleLink.tsx","Items/DappPut/DappOracleput/DappOracleputContent.tsx","Items/DappPut/DappOracleput/DappOracleput.tsx","Items/DappPut/DappPut/DappPut.tsx","Items/DappPut/DappResultput/DappResultputHeader.tsx","Items/DappPut/DappResultput/DappResultputContent.tsx","Items/DappPut/DappResultput/DappResultput.tsx","Components/TextInput/TextInputApollo.tsx","Items/DappFunction/DappFunctionLogRunButton.tsx","Items/DappFunction/DappFunctionSubmitState.tsx","Items/DappFunction/DappFunctionLogAthena.tsx","Items/DappFunction/DappFunctionAthena.tsx","Items/Dapp/ApolloDapp/ApolloRunDappFunctionView.tsx","Items/Dapp/ApolloDapp/ApolloRunDappMainItem.tsx","Benches/Run/RunBenchDesktop.tsx","Pages/Run/RunPageWithRepo.tsx","Pages/Run/RunPageNoRepo.tsx","Pages/Run/ReadyToRun.tsx","Pages/Run/RunPage.tsx","Pages/ErrorPage/ErrorPage.tsx","Router/MainRouter.tsx","Segments/MainSegment.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DefaultErrorContext","errorLoading","errorValidating","errorLoaded","error","undefined","dispatch","ErrorContext","createContext","ErrorReducer","state","action","ErrorProvider","initialerror","children","navigate","useNavigate","useReducer","useEffect","Provider","value","useErrorContext","context","useContext","Error","ErrorDispatch","UniversalErrorBoundary","props","this","React","Component","Colors","Maintheme","primaryTextColor","secondaryTextColor","tertiaryTextColor","quartenaryTextColor","backgroundColorSecondary","logoColor","readyGreen","waitingYellow","failedRed","greenCeramic","forestEdge","fadedRed","lilac","deepPurple","skyBlue","royalBlue","babyBlue","infoYellow","arizonaOrange","cyan","deepCyan","bloodOrange","DesktopSizes","contentWidth","standard","whitespacePreferred","CrashLogo","color","style","height","width","id","xmlns","viewBox","shapeRendering","textRendering","clipPath","transform","d","fill","fillRule","stroke","strokeWidth","rx","ry","ErrorNotification","errorText","display","gridTemplateRows","justifyContent","alignContent","margin","toUpperCase","IntegratedErrorBoundary","Members","HeaderLayoutDesktop","getComponentMembers","Brand","Nav","Account","gridTemplateColumns","justifyItems","position","generateNamedMember","HeaderLayoutMobile","MainLayoutDesktop","Header","Content","Footer","overflow","MainLayoutMobile","padding","DefaultColorContext","colors","ColorContext","useColorStore","LogoB","main","post","size","fontSize","fontColor","label","_logoColor","_fontColor","alignItems","x","y","textAlign","lineHeight","GrowOnEventAchamaenid","grow","className","ThroughGlassAgathocles","glass","glassOpacity","opacity","DefaultExpressions","DefaultColors","AristophanesReady","right","ready","expressions","information","lightStyle","onClick","_expressions","_information","_colors","useState","isHovered","setHovered","onMouseOver","onMouseOut","title","cursor","verticalAlign","ConnectionStatus","wallet","address","setAddress","signer","ethers","providers","Web3Provider","window","ethereum","getSigner","getAddress","then","HOME","HeaderDesktop","crt","enclave","ArchimedesNavNode","itemName","selected","onSelect","hovered","onMouseEnter","onMouseLeave","textDecoration","ArchimedesNav","itemNames","initSelected","preventDefault","nodeStyle","length","setSelected","selecting","setSelecting","handleNodeSelect","Separator","nodes","reduce","agg","index","ABOUT","DOCS","HeaderMobile","handleSelect","item","location","href","MediaResponsive","Desktop","Laptop","Tablet","Mobile","minWidth","maxWidth","HeaderResponsive","StepPre","next","Title","Info","motion","div","animate","transition","ease","duration","SucceededStepPost","done","onAnimationComplete","scale","AthenaButton","primaryColor","secondaryColor","invert","disabled","active","loading","e","a","isDisabled","setDisabled","isActive","setActive","isLoading","setLoading","setE","invertedBackground","Color","lighten","contrast","hex","_isHovered","Button","variant","borderTop","borderLeft","borderBottom","borderRight","backgroundColor","Spinner","animation","FailedStepPost","StepPost","success","Step","CrtStep","WalletStep","src","EnclaveStep","AllSteps","Steps","status","which","handleDone","simulateNetworkRequest","upperBound","Promise","resolve","reject","setTimeout","Math","random","RunSteps","setStepStatus","stepStatus","stepIndex","setStepIndex","allDone","setAllDone","data","indexOf","NotReadyToRun","handleAllDone","createPullRequest","require","Octokit","plugin","auth","process","REACT_APP_GITHUB_TOKEN","getFileText","args","to","fetch","owner","repo","path","text","parseGitUrl","url","split","README","parseName","readme","lines","replace","trim","getDappName","dapp","onGet","gitUrl","err","name","getDappInterface","JSON","parse","dappInterface","getOpenContractsInterface","ocInterface","getDappContract","OpenContracts","opencontract","openContractsInterface","parseContracts","ApolloRunDappContent","grid","setGrid","Single","Grid","console","log","zIndex","top","borderBottomRightRadius","borderBottomLeftRadius","background","DefaultHeader","dappPut","Pre","Post","description","DappInputHeader","dappInput","type","ApolloDappFunction","func","inputs","map","input","wordWrap","overflowX","overflowY","requiresOracle","ApolloDappFunctions","setWhich","onFunctionClick","funcs","contract","contractFunctions","borderRadius","breakpointCols","ApolloRunDappFunctionGridView","DappInput","setInput","DappPutLayout","overflowWrap","paddingTop","paddingBottom","paddingLeft","paddingRight","DappInteractputHeader","dappInteractput","lightenStandard","darkenStandard","darken","DappInteractputContent","DappInteractput","border","DappOutputHeader","dappOutput","DappOutputContent","navigator","clipboard","writeText","DappOutput","DappErrputHeader","dappErrput","DappErrputContent","DappErrput","DappDescputHeader","dappDescput","DappDescputContent","DappDescput","DappOracleputHeader","dappOracleput","OracleLink","link","DappOracleputContent","load","setLoad","DappOracleput","DappPut","put","setPut","putType","DappResultputHeader","dappResultput","DappResultputContent","setResultput","DappResultput","TextInputApollo","onTextInput","Form","Control","onKeyDown","char","key","target","createResult","contractFunction","result","DappFunctionLogRunButton","puts","handleCall","borderTopLeftRadius","borderTopRightRadius","DappFunctionSubmitState","call","oracleLoaded","createOracleData","setFunc","setOracleData","oracleData","aggregateContractFunctionPuts","createInputs","errors","createErrors","xpras","xpra","createXpras","prints","createOutputs","getContractFunctionInputs","filter","DappFunctionLogAthena","setDappFunction","logState","addOutput","message","printHandler","addError","handleError","errorHandler","addOracleData","addResult","githubOracleDownloader","oracleFolder","catch","toString","addInteractput","targetUrl","sessionUrl","xpraHandler","xpraExit","DappFunctionAthena","ApolloRunDappFunctionView","ApolloRunDappMainItemInternals","dappItem","setDappItem","selectedFunc","newContractFunctions","oldContractFunction","ApolloRunDappMainItem","updateDapp","forceLoad","dappState","setDappState","nameLoad","setNameLoad","contractLoad","setContractLoad","contractLoaded","setContracLoaded","RunBenchDesktop","RunPageWithRepo","__isDapp__","RunPageNoRepo","setText","handleSubmit","placeholder","ReadyToRun","useParams","RunPage","readyToRun","setReadyToRun","ErrorPage","MainRouter","element","MainSegment","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efdc782a.chunk.js","sourcesContent":["import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nexport interface ErrorContextI {\n    errorLoading : boolean,\n    errorValidating : boolean,\n    errorLoaded : boolean,\n    error : undefined | Error,\n    dispatch : (fn : (state : ErrorContextI)=>ErrorContextI)=>void\n}\n\nconst DefaultErrorContext : ErrorContextI = {\n    errorLoading : false,\n    errorValidating : false,\n    errorLoaded : false,\n    error : undefined,\n    dispatch : ()=>{}\n}\n\n\nexport const ErrorContext = createContext(DefaultErrorContext);\n\nexport const ErrorReducer = (\n    state : ErrorContextI, \n    action : (state : ErrorContextI)=>ErrorContextI\n)=>{\n    return action(state);\n}\n\nexport type ErrorProviderProps = {\n    initialerror? : {\n        [key : string] : any\n    } \n}\n\nexport const ErrorProvider : FC<ErrorProviderProps>  = ({\n    initialerror,\n    children\n}) =>{\n\n    const navigate = useNavigate();\n\n    const [state, dispatch] = useReducer(ErrorReducer, DefaultErrorContext);\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && !state.errorValidating){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    dispatch : dispatch,\n                    errorValidating : true,\n                }\n            })\n\n        }\n\n    })\n\n    useEffect(()=>{\n\n        if(!state.errorLoaded && !state.errorLoading && state.errorValidating && state.dispatch){\n\n            dispatch(()=>{\n                return {\n                    ...state,\n                    errorValidating : false,\n                    errorLoaded : true\n                }\n            })\n\n\n        } \n    })\n\n    useEffect(()=>{\n\n        if(state.error){\n            navigate(\"#/error\");\n            dispatch((state)=>{\n                return {\n                    ...state,\n                    error : undefined\n                }\n            })\n        }\n\n    })\n\n    return (\n\n        <ErrorContext.Provider value={{\n            ...state,\n            dispatch : dispatch\n        }}>\n                {children}\n        </ErrorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useErrorContext = () : ErrorContextI=>{\n\n    const context = useContext(ErrorContext);\n\n    if(!context){\n        throw new Error(\"useerror must be called within a ErrorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useErrorContext } from './ErrorProvider';\n\nexport type ErrorDispatchProps = {\n    error : Error\n}\n\nexport const ErrorDispatch : FC<ErrorDispatchProps>  = ({\n    error\n}) =>{\n\n    const {\n        dispatch \n    } = useErrorContext();\n\n    useEffect(()=>{\n        dispatch((state)=>{\n            return {\n                ...state,\n                error : error\n            }\n        })\n    })\n\n    return (\n\n        <>\n        \n\n        </>\n\n    )\n\n}","import React, { ErrorInfo } from \"react\";\nimport {ErrorDispatch, useErrorContext} from \"../ErrorProvider\";\n\ntype UniversalErrorBoundaryProps = {\n\n}\n\ntype UniversalErrorBoundaryStateI = {\n    error : Error | undefined\n}\n\nexport class UniversalErrorBoundary extends React.Component<UniversalErrorBoundaryProps, UniversalErrorBoundaryStateI> {\n    state : UniversalErrorBoundaryStateI = {\n        error : undefined\n    }\n\n    constructor(props : UniversalErrorBoundaryProps) {\n      super(props);\n      this.state = { error: undefined };\n    }\n  \n    static getDerivedStateFromError(error : Error) {\n      // Update state so the next render will show the fallback UI.\n      return { error: error };\n    }\n  \n    render() {\n      if (this.state.error) {\n\n        return <ErrorDispatch error={this.state.error}/>;\n      }\n  \n      return this.props.children; \n    }\n  }","export const Colors = {\n    Maintheme : \"#373737\",\n    primaryTextColor : \"#FAF9F6\",\n    secondaryTextColor : \"#515151\",\n    tertiaryTextColor : \"#979797\",\n    quartenaryTextColor : \"#f1f1f1\",\n    backgroundColorSecondary : \"#D7D7D7\",\n    logoColor : \"#D7D7D7\",\n    readyGreen : \"#11db1e\",\n    waitingYellow : \"#fceb2f\",\n    failedRed : \"#ff0000\",\n    greenCeramic : \"#addcc9\",\n    forestEdge : \"#06955f\",\n    fadedRed : \"#f7a8a6\",\n    lilac : \"#C8A2C8\",\n    deepPurple: \"#d2a6cc\",\n    skyBlue : \"#bdd7ee\",\n    royalBlue : \"#4169e1\",\n    babyBlue : \"#4499ab\",\n    infoYellow : \"#faf264\",\n    arizonaOrange : \"#fdd2b5\",\n    cyan : \"cyan\",\n    deepCyan : \"#008584\",\n    bloodOrange : \"#cc8866\"\n} as const","export const DesktopSizes = {\n    Main : {\n        contentWidth : 950\n    },\n    Padding : {\n        standard : \"10px\",\n        whitespacePreferred : \"40px\"\n    },\n    BorderRadius : {\n        standard : \"5px\"\n    }\n} as const","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\n\nexport type CrashLogoProps = {\n    color? : React.CSSProperties[\"color\"],\n    style ? : React.CSSProperties\n}\n\nexport const CrashLogo : FC<CrashLogoProps>  = ({\n    color = Colors.Maintheme,style\n}) =>{\n\n    return (\n\n        <div style={{\n            height : \"200px\",\n            width : \"200px\",\n            ...style\n        }}>\n            <svg id=\"e7l4ir2eLhD1\" xmlns=\"http://www.w3.org/2000/svg\" \n                viewBox=\"0 0 1295 1296\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\">\n                <g id=\"e7l4ir2eLhD2\" clipPath=\"url(#e7l4ir2eLhD5)\">\n                    <g id=\"e7l4ir2eLhD3\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <path id=\"e7l4ir2eLhD4\"\n                            d=\"M2281.32,449.263L2551.39,449.263L2552.12,450.769C2584.88,528.295,2603,613.53,2603,703C2603,792.47,2584.88,877.705,2552.12,955.231L2550.93,957.704L2280.6,957.704L2298.15,934.214C2342.71,868.213,2368.72,788.647,2368.72,703C2368.72,617.353,2342.71,537.787,2298.15,471.786ZM1955.5,55C2156.65,55,2336.38,146.796,2455.14,290.812L2455.18,290.863L1983.28,290.863L1955.5,289.459C1727.28,289.459,1542.28,474.608,1542.28,703C1542.28,931.392,1727.28,1116.54,1955.5,1116.54L1964.14,1116.1L2454.31,1116.1L2413.35,1161.21C2296.18,1278.47,2134.3,1351,1955.5,1351C1597.9,1351,1308,1060.88,1308,703C1308,345.119,1597.9,55,1955.5,55Z\"\n                            transform=\"matrix(0.103391 -0.251703 0.251703 0.103391 1297.463604 955.789861)\"\n                            fill={color} fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" />\n                    </g>\n                    <clipPath id=\"e7l4ir2eLhD5\" transform=\"matrix(1 0 0 1 -1308 -55)\">\n                        <rect id=\"e7l4ir2eLhD6\" width=\"1295\" height=\"1296\" rx=\"0\" ry=\"0\" transform=\"matrix(1 0 0 1 1308 55)\"\n                            fill={color} stroke=\"none\" strokeWidth=\"1\" />\n                    </clipPath>\n                </g>\n                <path id=\"e7l4ir2eLhD7\"\n                    d=\"M811.27241,1085.63037L755.48824,1058.06402L880.4497,805.18796C880.42923,804.69885,880.41891,804.20759,880.41891,803.71433C880.41891,797.8312,881.88713,792.2333,884.53541,787.16032L770.96006,668.53597L631.91347,909.37173L576.15756,877.18104L724.58424,620.0985L691.31772,585.35311L550.79195,828.75088L495.03604,796.56019L644.94189,536.91564L639.59344,531.32943L584.21684,514.54791L599.70208,463.44887L651.53212,479.15564C655.22556,478.48418,660.01241,479.17178,664.73022,481.33136C671.28682,484.33265,675.77869,489.29288,676.39603,493.6522L933.50579,762.19179C959.69536,763.51273,980.44439,781.59804,980.44439,803.71435C980.44439,811.51833,977.86091,818.82042,973.36652,825.06115L1011.26733,1101.2539L949.62144,1109.71331L916.96606,871.74531L811.27241,1085.63037Z\"\n                    fill={color} stroke=\"none\" strokeWidth=\"0\" />\n            </svg>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../Theme';\nimport { CrashLogo } from './CrashLogo';\n\nexport type ErrorNotificationProps = {\n    errorText? : string,\n    style? : React.CSSProperties\n}\n\nexport const ErrorNotification : FC<ErrorNotificationProps>  = ({\n    errorText = \"Sorry, our site encountered an error. Please try refreshing the page.\", \n    style\n}) =>{\n\n    return (\n\n        <div style={{\n            display : \"grid\",\n            gridTemplateRows : \"5fr 1fr\",\n            width : \"100%\",\n            ...style\n        }}>\n            <div style={{\n                width : \"100%\",\n                justifyContent : \"center\",\n                alignContent : \"center\"\n            }}>\n                <CrashLogo style={{\n                    width : \"300px\",\n                    height : \"300px\",\n                    margin : \"auto\",\n                }}/>\n            </div>\n            <div style={{\n                color : Colors.primaryTextColor\n            }}>\n                <h6>{errorText.toUpperCase()}</h6>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ErrorProvider } from '../ErrorProvider';\nimport { UniversalErrorBoundary } from '..';\n\nexport type IntegratedErrorBoundaryProps = {}\n\nexport const IntegratedErrorBoundary : FC<IntegratedErrorBoundaryProps>  = ({\n    children\n}) =>{\n\n    return (\n\n        <ErrorProvider>\n            <UniversalErrorBoundary>\n                {children}\n            </UniversalErrorBoundary>\n        </ErrorProvider>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutDesktopProps = {}\n\nconst HeaderLayoutDesktop : FC<HeaderLayoutDesktopProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            height : \"100%\",\n            width : \"100%\",\n            display : \"grid\",\n            gridTemplateColumns : \"1fr 1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\",\n            position : \"sticky\"\n        }}>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Brand}\n            </div>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutDesktop.Brand = generateNamedMember('Brand');\nHeaderLayoutDesktop.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutDesktop.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutDesktop};","import React, {FC, ReactElement} from 'react';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Brand\", \"Nav\", \"Account\"] as const;\n\nexport type HeaderLayoutMobileProps = {}\n\nconst HeaderLayoutMobile : FC<HeaderLayoutMobileProps> & {\n    Brand : FC,\n    Nav : FC,\n    Account : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Brand,\n        Nav,\n        Account\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            height : \"100%\",\n            width : \"100%\",\n            display : \"grid\",\n            gridTemplateColumns : \"1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Brand}\n            </div>\n            <div style={{\n                height : \"100%\",\n                width : \"100%\"\n            }}>\n                {Nav}\n            </div>\n        </div>\n\n    )\n\n}\n\nHeaderLayoutMobile.Brand = generateNamedMember('Brand');\nHeaderLayoutMobile.Nav = generateNamedMember(\"Nav\");\nHeaderLayoutMobile.Account = generateNamedMember(\"Account\");\n\nexport {HeaderLayoutMobile};","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutDesktopProps = {}\n\nconst MainLayoutDesktop : FC<MainLayoutDesktopProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            height : \"auto\",\n            width : \"100vw\",\n            display : \"grid\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                width : DesktopSizes.Main.contentWidth,\n                overflow : \"visible\"\n            }}>\n                <div style={{\n                    height : \"200px\",\n                    width : \"100%\"\n                }}>\n                    {Header}\n                </div>\n                <div style={{\n                    height : \"auto\",\n                    width : \"100%\",\n                    overflow : \"auto\"\n                }}> \n                    {Content}\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutDesktop.Header = generateNamedMember(\"Header\");\nMainLayoutDesktop.Content = generateNamedMember(\"Content\");\nMainLayoutDesktop.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutDesktop}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../Theme';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Header\", \"Content\", \"Footer\"]\n\nexport type MainLayoutMobileProps = {}\n\nconst MainLayoutMobile : FC<MainLayoutMobileProps>  & {\n    Header : FC,\n    Content : FC, \n    Footer : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Header,\n        Content,\n        Footer\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <div style={{\n            height : \"auto\",\n            width : \"100vw\",\n            padding : DesktopSizes.Padding.whitespacePreferred,\n            display : \"grid\",\n            gridTemplateColumns: \"1fr\",\n            justifyContent : \"center\",\n            justifyItems : \"center\"\n        }}>\n            <div style={{\n                width : \"100%\",\n            }}>\n                <div style={{\n                    height : \"200px\",\n                    width : \"100%\"\n                }}>\n                    {Header}\n                </div>\n                <div style={{\n                    height : \"auto\",\n                    width : \"100%\",\n                    overflow : \"visible\"\n                }}> \n                    {Content}\n                </div>\n            </div>\n        </div>\n\n    )\n\n}\n\nMainLayoutMobile.Header = generateNamedMember('Header');\nMainLayoutMobile.Content = generateNamedMember(\"Content\");\nMainLayoutMobile.Footer = generateNamedMember(\"Footer\");\n\nexport {MainLayoutMobile}","import React, {FC, ReactElement, createContext, useReducer, useEffect, useContext} from 'react';\nimport { Colors } from './Colors';\n\n\nexport interface ColorContextI {\n    colors : typeof Colors,\n    dispatch : (fn : (state : ColorContextI)=>ColorContextI)=>void\n}\n\nconst DefaultColorContext : ColorContextI = {\n    colors : Colors,\n    dispatch : ()=>{}\n}\n\n\nexport const ColorContext = createContext(DefaultColorContext);\n\nexport const ColorReducer = (\n    state : ColorContextI, \n    action : (state : ColorContextI)=>ColorContextI\n)=>{\n    return action(state);\n}\n\nexport type ColorProviderProps = typeof Colors\n\nexport const ColorProvider : FC<ColorProviderProps>  = (props) =>{\n\n    const {\n        children,\n        ...colors\n    } = props;\n\n    const [state, dispatch] = useReducer(ColorReducer, DefaultColorContext);\n\n    return (\n\n        <ColorContext.Provider value={{\n            ...state,\n            colors : colors\n        }}>\n                {props.children}\n        </ColorContext.Provider>\n\n    )\n\n}\n\n\n\n\nexport const useColorStore = () : ColorContextI=>{\n\n    const context = useContext(ColorContext);\n\n    if(!context){\n        throw new Error(\"useColors must be called within a ColorProvider.\");\n    }\n\n    return context;\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport {File} from \"react-bootstrap-icons\";\nimport { useColorStore } from '../../Theme/ColorProvider';\n\nexport type LogoBProps = {\n    main? : string,\n    post? : string,\n    size? : React.CSSProperties[\"height\"],\n    fontSize ? : React.CSSProperties[\"height\"],\n    logoColor? : React.CSSProperties[\"color\"],\n    fontColor? : React.CSSProperties[\"color\"]\n    label ? : boolean\n}\n\nexport const LogoB : FC<LogoBProps>  = ({\n    main = \"OPEN\",\n    post = \"CONTRACTS\",\n    size = \"80px\",\n    fontSize = \"24px\",\n    logoColor,\n    fontColor,\n    label = true\n}) =>{\n\n    const Colors = useColorStore();\n    const _logoColor = logoColor || Colors.colors.Maintheme;\n    const _fontColor = fontColor || Colors.colors.tertiaryTextColor;\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n            <div style={{\n                height : size,\n                width : size\n            }}>\n                <svg viewBox=\"0 0 1295 1296\" xmlns=\"http://www.w3.org/2000/svg\"\n                overflow=\"hidden\">\n                    <defs>\n                        <clipPath id=\"clip0\">\n                            <rect x=\"1308\" y=\"55\" width=\"1295\" height=\"1296\" />\n                        </clipPath>\n                    </defs>\n                    <g clipPath=\"url(#clip0)\" transform=\"translate(-1308 -55)\">\n                        <path\n                            d=\"M2281.32 449.263 2551.39 449.263 2552.12 450.769C2584.88 528.295 2603 613.53 2603 703 2603 792.47 2584.88 877.705 2552.12 955.231L2550.93 957.704 2280.6 957.704 2298.15 934.214C2342.71 868.213 2368.72 788.647 2368.72 703 2368.72 617.353 2342.71 537.787 2298.15 471.786ZM1955.5 55C2156.65 55 2336.38 146.796 2455.14 290.812L2455.18 290.863 1983.28 290.863 1955.5 289.459C1727.28 289.459 1542.28 474.608 1542.28 703 1542.28 931.392 1727.28 1116.54 1955.5 1116.54L1964.14 1116.1 2454.31 1116.1 2413.35 1161.21C2296.18 1278.47 2134.3 1351 1955.5 1351 1597.9 1351 1308 1060.88 1308 703 1308 345.119 1597.9 55 1955.5 55Z\"\n                            fill={_logoColor} fillRule=\"evenodd\" />\n                    </g>\n                </svg>\n            </div>\n            &emsp;\n            {label && <div style={{\n                fontSize : fontSize,\n                color : _fontColor,\n                textAlign : \"left\",\n                lineHeight : \"1.3em\"\n            }}>\n                {main}\n                <br/>\n                {post}\n            </div>}\n        </div>\n       \n    )\n\n}","import React, {FC, ReactElement} from 'react';\n\nexport type GrowOnEventAchamaenidProps = {\n    grow ? : boolean,\n    style? : React.CSSProperties\n}\n\nexport const GrowOnEventAchamaenid : FC<GrowOnEventAchamaenidProps>  = ({\n    grow = false,\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n        className={grow ? \"grow\" : \"anti-grow\"}\n        style={{\n            ...style\n        }}>\n            {children}\n        </div>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\n\nexport type ThroughGlassAgathoclesProps = {\n    glass ? : boolean,\n    style ? : React.CSSProperties,\n    glassOpacity ? : React.CSSProperties[\"opacity\"]\n}\n\nexport const ThroughGlassAgathocles : FC<ThroughGlassAgathoclesProps>  = ({\n    glass = false,\n    glassOpacity = \".95\",\n    style,\n    children\n}) =>{\n\n    return (\n\n        <div \n            style={{\n                opacity : glass ? glassOpacity : \"1.0\",\n                ...style\n            }}>\n                {children}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Colors} from \"../../../Theme\";\nimport {CircleFill as Circle} from \"react-bootstrap-icons\";\nimport { GrowOnEventAchamaenid } from '../../../Glitter/Animations';\nimport { useState } from 'react';\nimport { ThroughGlassAgathocles } from '../../../Glitter/Animations/ThroughGlass/ThroughGlassAgathocles';\n\nexport type ReadyT = \"ready\" | \"not ready\" | \"failed\";\n\nexport interface StateMapI<T extends any = string> {\n    \"ready\" ? : T,\n    \"not ready\" ? : T, \n    \"failed\" ? : T\n}\n\nexport type AristophanesReadyProps = {\n    right ? : boolean\n    ready ? : \"ready\" | \"not ready\" | \"failed\",\n    label ? : string,\n    size ? : React.CSSProperties[\"height\"],\n    expressions ? : StateMapI,\n    information ? : StateMapI,\n    colors ? : StateMapI<React.CSSProperties[\"color\"]>,\n    style ? : React.CSSProperties,\n    lightStyle ? : React.CSSProperties,\n    onClick ?  : (ready : AristophanesReadyProps[\"ready\"])=>void\n}\n\nexport const DefaultExpressions : StateMapI = {\n    \"ready\" : \"Ready!\",\n    \"not ready\" : \"Awaiting...\",\n    \"failed\" : \"Failed\"\n} as const\n\nexport const DefaultInformation : StateMapI = {\n    \"ready\" : \"The dependency has been loaded.\",\n    \"not ready\" : \"Trying to load the dependency.\",\n    \"failed\" : \"We could not load the dependency.\"\n} as const\n\nexport const DefaultColors : StateMapI<React.CSSProperties[\"color\"]> = {\n    \"ready\" : Colors.readyGreen,\n    \"not ready\" : Colors.waitingYellow,\n    \"failed\" : Colors.failedRed\n} as const\n\n/**\n * A Ready button.\n * @param props\n * @returns \n */\nexport const AristophanesReady : FC<AristophanesReadyProps>  = ({\n    right,\n    ready = \"not ready\",\n    label,\n    expressions,\n    information,\n    colors,\n    size,\n    style,\n    lightStyle,\n    onClick\n}) =>{\n\n    const _expressions = {\n        ...DefaultExpressions,\n        ...expressions\n    }\n\n    const _information = {\n        ...DefaultExpressions,\n        ...information\n    }\n\n    const _colors = {\n        ...DefaultColors,\n        ...colors\n    }\n\n    const handleClick = ()=>{\n        onClick && onClick(ready);\n    }\n\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n\n        <ThroughGlassAgathocles glass={isHovered} glassOpacity={.7}>\n             <GrowOnEventAchamaenid grow={isHovered}>\n                <div\n                onMouseOver={handleMouseOver}\n                onMouseOut={handleMouseOut}\n                title={_information[ready]}\n                onClick={handleClick}\n                style={{\n                    display : \"flex\",\n                    gridTemplateColumns : \"1fr 5fr\",\n                    justifyContent : \"left\",\n                    justifyItems : \"left\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    height : \"40px\",\n                    fontSize : \"15px\",\n                    width : \"auto\",\n                    cursor : \"pointer\",\n                    ...style\n                }}>\n                    {!right && <div style={{\n                        display: \"flex\",\n                        height : \"100%\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Circle \n                        color={_colors[ready]}\n                        size={\"65%\"}\n                        style={{\n                            ...lightStyle\n                        }}/>\n                    </div>}\n                    &ensp;\n                    <div style={{\n                        display : \"flex\",\n                        height : \"100%\",\n                        gridTemplateColumns : \"1fr\",\n                        gridTemplateRows : \"1fr 1fr\",\n                        verticalAlign : \"center\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <div>\n                            <span style={{\n                                color : Colors.Maintheme\n                            }}>{label}</span><br/>\n                            <span style={{\n                                color : Colors.tertiaryTextColor\n                            }}>\n                                {_expressions[ready]}\n                            </span>\n                        </div>\n                    </div>\n                    &ensp;\n                    {right && <div style={{\n                        display: \"flex\",\n                        height : \"100%\",\n                        alignContent : \"center\",\n                        alignItems : \"center\"\n                    }}>\n                        <Circle \n                        color={_colors[ready]}\n                        size={\"65%\"}\n                        style={{\n                            ...lightStyle\n                        }}/>\n                    </div>}\n                </div>\n            </GrowOnEventAchamaenid>\n        </ThroughGlassAgathocles>\n       \n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AristophanesReady, ReadyT } from '../../Components/Ready/AristophanesReady/AristophanesReady';\nimport {ethers} from \"ethers\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Colors } from '../../Theme';\n\nexport type ConnectionStatusProps = {\n    wallet ? : ReadyT,\n}\n\nexport const ConnectionStatus : FC<ConnectionStatusProps>  = ({\n    wallet,\n}) =>{\n\n    const [address, setAddress] = useState<string|undefined>(undefined);\n\n    useEffect(()=>{\n\n        if(wallet === \"ready\"){\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            const signer = provider.getSigner();\n            !address && signer.getAddress().then((address)=>{\n                setAddress(address);\n            })\n        }\n\n    }, [wallet])\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            height : \"100%\",\n            alignContent : \"center\",\n            alignItems : \"center\",\n            justifyItems : \"right\",\n            justifyContent : \"right\",\n            textAlign : \"right\"\n        }}>\n\n            <AristophanesReady right label={\"Metamask\"} ready={wallet} expressions={{\n                ready : address\n            }} />\n              \n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutDesktop} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\nimport {ConnectionStatus} from \"../ConnectionStatus\";\nimport { ReadyT } from '../../Components/Ready/AristophanesReady/AristophanesReady';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\";\n\nexport type HeaderDesktopProps = {\n    crt ? : ReadyT,\n    wallet ? : ReadyT,\n    enclave ? : ReadyT\n}\n\nexport const HeaderDesktop : FC<HeaderDesktopProps>  = ({\n    crt,\n    wallet,\n    enclave\n}) =>{\n\n    \n\n\n    return (\n\n        <HeaderLayoutDesktop>\n            <HeaderLayoutDesktop.Brand>\n                <div \n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"left\",\n                    justifyContent : \"left\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutDesktop.Brand>\n            <HeaderLayoutDesktop.Nav>\n                <ConnectionStatus wallet={wallet}/>\n            </HeaderLayoutDesktop.Nav>\n        </HeaderLayoutDesktop>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { useColorStore } from '../../../Theme/ColorProvider';\n\nexport type ArchimedesNavNodeProps = {\n    itemName : string,\n    selected : boolean,\n    onSelect : (item : string)=>void,\n    size? : React.CSSProperties[\"height\"],\n    style? : React.CSSProperties,\n    key? : React.Key\n}\n\nexport const ArchimedesNavNode : FC<ArchimedesNavNodeProps>  = ({\n    itemName,\n    selected,\n    onSelect,\n    size,\n    style\n}) =>{\n\n    const [hovered, setHovered]  = useState(false);\n\n    const handleMouseEnter = ()=>{\n        setHovered(true);\n    }\n\n    const handleMouseLeave = ()=>{\n        setHovered(false);\n    }\n\n    const handleSelected = ()=>{\n        onSelect(itemName);\n    }\n\n    const Colors = useColorStore();\n\n    return (\n\n        <span \n        key={itemName}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        onClick={handleSelected}\n        style={{\n            color : selected ? Colors.colors.primaryTextColor : Colors.colors.tertiaryTextColor,\n            textDecoration : hovered ? \"underline\" : \"none\",\n            fontSize : size,\n            cursor : \"pointer\",\n            padding : DesktopSizes.Padding.standard,\n            ...style\n        }}>\n            {itemName}\n        </span>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ArchimedesNavNode } from './ArchimedesNavNode';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Separator\"];\n\nexport type ArchimedesNavProps = {\n    itemNames : string[],\n    onSelect ?: (item : string)=>void,\n    initSelected? : string,\n    preventDefault? : boolean,\n    nodeStyle? : React.CSSProperties\n}\n\nconst ArchimedesNav : FC<ArchimedesNavProps> & {\n    Separator : FC\n} = ({\n    children,\n    itemNames,\n    onSelect,\n    initSelected,\n    preventDefault = false,\n    nodeStyle\n}) =>{\n\n    const [selected, setSelected] = useState(\n        initSelected ||\n        ( itemNames.length ? itemNames[0] : undefined )\n    )\n\n    const [selecting, setSelecting] = useState<string|undefined>(undefined);\n    const handleNodeSelect = (itemName : string)=>{\n        setSelecting(itemName);\n    }\n\n    const {\n        Separator\n    } = getComponentMembers(Members, children);\n\n    const nodes = itemNames.reduce((agg, itemName, index)=>{\n        return [\n            ...agg,\n            <span key={itemName}>\n                {index < itemNames.length - 1 ? (\n                    <>\n                    <ArchimedesNavNode \n                        key={itemName}\n                        style={nodeStyle}\n                        selected={selected === itemName} \n                        itemName={itemName} \n                        onSelect={handleNodeSelect}/>\n                    {Separator||<span key={index}>&emsp;</span>}\n                </>\n                ) : (\n            \n                        <ArchimedesNavNode \n                            key={itemName}\n                            style={nodeStyle}\n                            selected={selected === itemName} \n                            itemName={itemName} \n                            onSelect={handleNodeSelect}/>\n                )}\n            </span>\n        ]\n    }, [] as React.ReactNode[])\n\n    useEffect(()=>{\n        if(selecting){\n            setSelecting(undefined);\n            !preventDefault && setSelected(selecting);\n            onSelect && onSelect(selecting)\n        }\n    })\n\n    return (\n\n        <div>\n            {nodes}\n        </div>\n\n    )\n\n}\n\nArchimedesNav.Separator = generateNamedMember(\"Separator\");\nexport { ArchimedesNav};","import React, {FC, ReactElement} from 'react';\nimport { LogoB } from '../../Glitter';\nimport {HeaderLayoutMobile} from \"../../Layouts\";\nimport { ArchimedesNav } from '../../Components/Navs';\nimport { AbleAccountToggle } from '../../Components/AccountToggles';\nimport { PersonFill } from 'react-bootstrap-icons';\nimport { Colors } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { useNavigate } from 'react-router-dom';\n\nexport const HOME = \"EXPLORE\"\nexport const HOME_PATH = \"/\"\nexport const ABOUT = \"ABOUT\";\nexport const ABOUT_PATH = \"/about\"\nexport const DOCS = \"DOCS\";\nexport const DOCS_PATH = \"https://open-contracts.readthedocs.io\"\n\nexport type HeaderMobileProps = {\n    selected : string\n}\n\nexport const HeaderMobile : FC<HeaderMobileProps>  = ({\n    selected\n}) =>{\n\n    const Colors = useColorStore();\n\n    const navigate = useNavigate();\n\n    const goHome = ()=>{\n        navigate(HOME_PATH);\n    }\n\n    const goAbout = ()=>{\n        navigate(ABOUT_PATH);\n    }\n\n    const goDocs = ()=>{\n        window.location.href = DOCS_PATH;\n    }\n\n    const handleSelect = (item : string)=>{\n\n        if(item === ABOUT) {\n            goAbout();\n        } else if(item === DOCS){\n            goDocs();\n        } else {\n            goHome();\n        }\n\n    }\n\n    const handleLogo  = ()=>{\n        handleSelect(\"HOME\")\n    }\n\n    return (\n\n        <HeaderLayoutMobile>\n            <HeaderLayoutMobile.Brand>\n                <div \n                    onClick={handleLogo}\n                    style={{\n                    cursor : \"pointer\",\n                    height : \"100%\",\n                    display : \"grid\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"center\",\n                    justifyContent : \"center\",\n                }}>\n                    <LogoB size={\"50px\"} />\n                </div>\n            </HeaderLayoutMobile.Brand>\n            <HeaderLayoutMobile.Nav>\n                <div style={{\n                    height : \"100%\",\n                    width : \"100%\",\n                    alignItems : \"center\",\n                    alignContent : 'center',\n                    justifyItems : \"center\",\n                    justifyContent : \"center\",\n                    display : \"grid\"\n                }}>\n                    <ArchimedesNav nodeStyle={{\n                        fontSize : \"20px\"\n                    }}\n                    initSelected={selected}\n                    onSelect={handleSelect}\n                    itemNames={[\n                        HOME, ABOUT, DOCS\n                    ]} />\n                </div>\n            </HeaderLayoutMobile.Nav>\n        </HeaderLayoutMobile>\n\n    )\n\n}","import React, {Children, FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport MediaQuery from \"react-responsive\";\n\nconst Members = [\"Desktop\", \"Laptop\", \"Tablet\", \"Mobile\"] as const;\n\nexport type MediaResponsiveProps = {}\n\n/**\n * Uses media queries to control component display by media type.\n * @param param0 \n * @returns a ReactNode displaying the appropriate component view by media type.\n */\nconst MediaResponsive : FC<MediaResponsiveProps> & {\n    Desktop : FC,\n    Laptop : FC,\n    Tablet : FC,\n    Mobile : FC\n} = ({\n    children\n}) =>{\n\n    const {\n        Desktop,\n        Laptop,\n        Tablet,\n        Mobile\n    } = getComponentMembers(Members, children);\n\n    \n\n    return (\n\n        <>\n            <MediaQuery minWidth={1200}>\n                {Desktop}\n            </MediaQuery>   \n            <MediaQuery minWidth={992} maxWidth={1199}>\n                {Laptop}\n            </MediaQuery>\n            <MediaQuery minWidth={768} maxWidth={991}>\n                {Tablet}\n            </MediaQuery>\n            <MediaQuery maxWidth={767}>\n                {Mobile}\n            </MediaQuery>\n        </>\n\n    )\n\n}\n\nMediaResponsive.Desktop = generateNamedMember(\"Desktop\");\nMediaResponsive.Laptop = generateNamedMember(\"Laptop\");\nMediaResponsive.Tablet = generateNamedMember(\"Tablet\");\nMediaResponsive.Mobile = generateNamedMember(\"Mobile\")\n\nexport { MediaResponsive };\n\n","import React, {FC, ReactElement} from 'react';\nimport {MediaResponsive} from \"../../Sytems\";\nimport {HeaderDesktop, HeaderMobile} from \".\";\n\nexport type HeaderResponsiveProps = {\n    selected : string\n}\n\nexport const HeaderResponsive : FC<HeaderResponsiveProps>  = ({\n    selected\n}) =>{\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <HeaderDesktop/>\n           </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <HeaderDesktop/>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <HeaderMobile selected={selected}/>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <HeaderMobile selected={selected}/>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n\n    )\n\n}","import React from \"react\";\n\nexport const Members = [\"Title\", \"Info\", \"Content\"] as const;\n\nexport type StepMemberI = typeof Members[number];\nexport type StepStylesT = {\n    [key in StepMemberI] : React.CSSProperties\n} & {\n    wrapper : React.CSSProperties\n}\n","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\n\nexport type StepPreProps = {\n    next ? : ()=>void\n}\n\nconst StepPre : FC<StepPreProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    next,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            y : [300, 0]\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : 1\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.Maintheme\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : [0, 0, 0, 0, 1.0]\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 1.25\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                <motion.div \n                    animate={{\n                        opacity : [0, 0, 1.0],\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 2.0\n                    }}\n                >\n                    {Content}\n                </motion.div>\n            </div>\n    )\n\n}\n\nStepPre.Title = generateNamedMember(\"Title\");\nStepPre.Info = generateNamedMember(\"Info\");\nStepPre.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPre}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {Check} from \"react-bootstrap-icons\";\n\nexport type SucceededStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const SucceededStepPost : FC<SucceededStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <motion.div \n            onAnimationComplete={()=>{\n                done && done(true);\n            }}\n            animate={{\n                opacity : [1.0, 1.0, 1.0, 0.0],\n                scale : [1.0, .75, .25, .05],\n                position : [\"relative\", \"relative\", \"relative\", \"relative\"],\n                y : [0, 0, -200, -300],\n                x : [0, 0, 200, 300]\n            }}\n            transition={{\n                ease : \"easeInOut\",\n                duration : 2.0\n            }}\n        >\n           {children}\n           <motion.div\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    width : [0, 80],\n                    color : Colors.readyGreen\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .75\n                }}\n            >\n                <Check size={60}/>\n            </motion.div>\n        </motion.div>\n\n    )\n\n}","import Color from \"color\";\nimport React, { FC, useEffect, useState } from 'react';\nimport {Button, Spinner } from \"react-bootstrap\";\n\n\n/**\n * @initialAuthor\n * @contributors\n */\n\n/**\n * @description\n */\nexport type AthenaButtonProps = {\n    label?: string,\n    primaryColor: React.CSSProperties[\"color\"],\n    secondaryColor: React.CSSProperties[\"color\"],\n    invert? : boolean,\n    disabled?: boolean,\n    active?: boolean,\n    hovered? : boolean,\n    loading?: boolean,\n    size?: \"sm\" | \"lg\" | undefined,\n    action? : (e? : React.MouseEvent)=>Promise<void>,\n    onClick? : (e : React.MouseEvent)=>void,\n    onMouseEnter? : (e : React.MouseEvent)=>void,\n    onMouseLeave? : (e : React.MouseEvent)=>void,\n    style?: React.CSSProperties\n}\n\n/**\n * @description \n */\nexport const AthenaButton : FC<AthenaButtonProps>  = ({\n    label, \n    primaryColor, \n    secondaryColor,\n    children,\n    invert=false,\n    disabled=false,\n    active=false,\n    loading=false,\n    size=undefined,\n    hovered,\n    action=async (e? : React.MouseEvent)=>{return},\n    onClick=(e: React.MouseEvent)=>{},\n    onMouseEnter=(e: React.MouseEvent)=>{},\n    onMouseLeave=(e: React.MouseEvent)=>{},\n    style\n}) =>{\n\n    const [isDisabled, setDisabled] = useState(disabled);\n    const [isActive, setActive] = useState(active);\n    const [isLoading, setLoading] = useState(loading);\n    const [e, setE] = useState<React.MouseEvent|undefined>(undefined)\n\n    useEffect(()=>{\n        if(isLoading){\n            action(e).then(()=>{\n                setDisabled(false);\n                setLoading(false);\n                setActive(false);\n            })\n        }\n    })\n\n\n\n    const invertedBackground = Color(primaryColor).lighten(1/(10 - Color(primaryColor).contrast(Color(secondaryColor)))).hex()\n\n    const handleClick = (e : React.MouseEvent<HTMLElement>)=>{\n        onClick(e);\n        setE(e);\n        setDisabled(true);\n        setLoading(true);\n        setActive(true);\n        setHovered(false);\n    }\n\n    const [isHovered, setHovered] = useState(false); \n    const handleMouseEnter = (e : React.MouseEvent)=>{\n        setHovered(true);\n        onMouseEnter(e);\n    }\n    const handleMouseLeave = (e : React.MouseEvent)=>{\n        setHovered(false);\n        onMouseLeave(e);\n    }\n\n    const _isHovered = isHovered || hovered;\n\n    return (\n\n        <Button\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            variant={`outline`}\n            disabled={isDisabled||disabled}\n            active={isActive||active}\n            size={size}\n            onClick={handleClick}\n            style={{\n                cursor: \"pointer\",\n                transition: _isHovered? \"all .1s ease-in-out\" : \"\",\n                display: \"inline-block\",\n                color: _isHovered? secondaryColor : !invert ? primaryColor : secondaryColor,\n                borderTop: `1px solid ${primaryColor}`,\n                borderLeft: `1px solid ${primaryColor}`,\n                borderBottom: `1px solid ${primaryColor}`,\n                borderRight: `1px solid ${primaryColor}`,\n                backgroundColor: _isHovered? primaryColor : invert ? invertedBackground : secondaryColor,\n                ...style\n            }}\n        >{label||children}<span style={{display: isLoading||loading ? \"inline-block\" : \"none\"}}>&ensp;</span><Spinner\n            animation=\"border\"\n            style={{\n                display : isLoading||loading ? \"inline-block\" : \"none\", \n                height : \"15px\",\n                width: \"15px\"\n            }}\n            ></Spinner>\n        </Button>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {motion} from \"framer-motion\";\nimport {Colors} from \"../../../Theme\";\nimport {X} from \"react-bootstrap-icons\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type FailedStepPostProps = {\n    done ? : (success : boolean)=>void\n    style ? : React.CSSProperties\n}\n\nexport const FailedStepPost : FC<FailedStepPostProps>  = ({\n    style,\n    children,\n    done\n}) =>{\n\n    return (\n\n        <div>\n           {children}\n           <motion.div\n                onAnimationComplete={()=>{\n                    done && done(false);\n                }}\n                style={{\n                    overflow : \"hidden\",\n                }}\n                animate = {{\n                    scale : [0, 1.5, 1.1, 1.0, 1.0],\n                    color : Colors.failedRed\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .5\n                }}\n            >\n                <X size={60}/>\n            </motion.div>\n            <motion.div\n                style={{\n                    display: \"grid\",\n                    justifyContent : \"center\",\n                    justifyItems : \"center\" \n                }}\n                animate={{\n                    display : [\"none\", \"block\"],\n                    opacity : [0.0, 0.0, 0.0, 1.0],\n                }}\n                transition={{\n                    ease : \"easeInOut\",\n                    duration : .75\n                }}\n            >\n                <AthenaButton \n                    size={\"lg\"}\n                    primaryColor={Colors.Maintheme} \n                    secondaryColor={Colors.primaryTextColor}>Retry</AthenaButton>\n            </motion.div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { StepStage } from './StepStage';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport {SucceededStepPost} from \"./SuceededStepPost\";\nimport {FailedStepPost} from \"./FailedStepPost\";\n\nimport { Members } from './StepType';\nimport { Colors } from '../../../Theme';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport {motion} from \"framer-motion\";\nimport { AthenaButton } from '../../Buttons';\n\nexport type StepPostProps = {\n    done ? : (success : boolean)=>void,\n    success ? : boolean\n}\n\nconst StepPost : FC<StepPostProps> & {\n    \n        Title : FC,\n        Info : FC,\n        Content : FC\n    \n}  = ({\n    done,\n    success,\n    children\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n            <div style={{\n                display : \"grid\",\n                gridTemplateColumns : \"1fr\",\n                gridTemplateRows : \"1fr 1fr 4fr\",\n                justifyContent : \"center\",\n                justifyItems : \"center\"\n            }}>\n                <motion.div\n                        animate={{\n                            position : \"relative\",\n                            height : \"100%\",\n                            width : \"100%\",\n                            opacity : success ? [1.0, .25, 0] : 1.0,\n                            y : success ? [0, 0, 100] : 0\n                        }}\n                        transition={{\n                            ease : \"easeInOut\",\n                            duration : 1\n                        }}\n                    >\n                        <h1 style={{\n                            color : Colors.Maintheme\n                        }}>{Title}</h1>\n                </motion.div>\n                <motion.div\n                    animate={{\n                        opacity : success ? [1.0, 0, 0] : 1.0\n                    }}\n                    transition={{\n                        ease : \"easeInOut\",\n                        duration : 1\n                    }}\n                >\n                    <p style={{\n                        color : Colors.primaryTextColor\n                    }}>{Info}</p>\n                </motion.div>\n                {success && <SucceededStepPost done={done}>\n                    {Content}\n                </SucceededStepPost>}\n                {!success && <FailedStepPost done={done}>\n                    {Content}\n                </FailedStepPost>}\n            </div>\n    )\n\n}\n\nStepPost.Title = generateNamedMember(\"Title\");\nStepPost.Info = generateNamedMember(\"Info\");\nStepPost.Content = generateNamedMember(\"Content\");\n\n\nexport {StepPost}","import React, {FC, ReactElement} from 'react';\nimport { StepContainer } from './StepContainer';\nimport { StepPre, } from './StepPre';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\nimport { Members } from './StepType';\nimport {StepPost} from \"./StepPost\";\nimport { ReadyT } from '../../Ready/AristophanesReady/AristophanesReady';\n\n\nexport type StepProps = {\n    style ? : React.CSSProperties,\n    ready ? : ReadyT,\n    done ? : (success : boolean)=>void\n}\n\nconst Step : FC<StepProps> & {\n    \n    Title : FC,\n    Info : FC,\n    Content : FC\n\n}  = ({\n    style,\n    children,\n    done,\n    ready = \"not ready\"\n}) =>{\n\n    const {\n        Title,\n        Info,\n        Content\n    } = getComponentMembers(Members, children)\n\n    return (\n\n        <>{ready === \"not ready\" ? <StepPre>\n            <StepPre.Title>\n                {Title}\n            </StepPre.Title>\n            <StepPre.Info>\n                {Info}\n            </StepPre.Info>\n            <StepPre.Content>\n                {Content}\n            </StepPre.Content>\n        </StepPre> : ready === \"ready\" ? \n        <StepPost success={true} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost> : \n        <StepPost success={false} done={done}>\n            <StepPost.Title>\n                {Title}\n            </StepPost.Title>\n            <StepPost.Info>\n                {Info}\n            </StepPost.Info>\n            <StepPost.Content>\n                {Content}\n            </StepPost.Content>\n        </StepPost>\n        }\n        \n        </>\n\n    )\n\n}\n\nStep.Title = generateNamedMember(\"Title\");\nStep.Info = generateNamedMember(\"Info\");\nStep.Content = generateNamedMember(\"Content\");\n\nexport {Step}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type CrtStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const CrtStep : FC<CrtStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}\n        >\n            <Step.Title>\n                Step 2: Checking Root CA\n            </Step.Title>\n            <Step.Info>\n                You must have installed our Root CA to use this application.\n            </Step.Info>\n            <Step.Content>\n                <Key size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\n\nexport type WalletStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const WalletStep : FC<WalletStepProps>  = ({\n    ready,\n    done\n}) =>{\n\n    return (\n\n        <Step\n        done={done}\n        ready={ready}>\n            <Step.Title>\n               Connecting to MetaMask\n            </Step.Title>\n            <Step.Info>\n                We need to connect to your MetaMask to run the application.\n            </Step.Info>\n            <Step.Content>\n                <img \n                    width={60}\n                    src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/MetaMask_Fox.svg/1200px-MetaMask_Fox.svg.png\"}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect} from 'react';\nimport { ReadyT } from '../../Components/Ready/AristophanesReady';\nimport {Step} from \"../../Components/Walkthrough\";\nimport {Key} from \"react-bootstrap-icons\";\nimport { Colors } from '../../Theme';\nimport { CpuFill } from 'react-bootstrap-icons';\nimport { useState } from 'react';\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\n\nexport type EnclaveStepProps = {\n    ready ? : ReadyT,\n    done ? (success : boolean) : void\n}\n\nexport const EnclaveStep : FC<EnclaveStepProps>  = ({\n    ready,\n    done \n}) =>{\n\n    return (\n\n        <Step ready={ready} done={done}>\n            <Step.Title>\n                Step 3: Connecting to an enclave\n            </Step.Title>\n            <Step.Info>\n                Any oracles that require an enclave will be executed against the one we find for you.\n            </Step.Info>\n            <Step.Content>\n                <CpuFill size={60} color={Colors.primaryTextColor}/>\n            </Step.Content>\n        </Step>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {ReadyT} from \"../../Components/Ready/AristophanesReady\";\nimport { CrtStep } from './CrtStep';\nimport {WalletStep} from \"./WalletStep\";\nimport {EnclaveStep} from \"./EnclaveStep\";\n\nexport const AllSteps = [\"wallet\"];\n\nexport type StepStatusT = {\n    [key in typeof AllSteps[number]] : ReadyT\n}\n\nexport type StepsProps = {\n    done ? : (which : string, success : boolean)=>void\n    status ? : StepStatusT,\n    which ? : typeof AllSteps[number],\n}\n\nexport const Steps : FC<StepsProps>  = ({\n    done,\n    status = {\n        crt : \"not ready\",\n        wallet : \"not ready\",\n        enclave : \"not ready\"\n    },\n    which  = \"crt\"\n}) =>{\n\n    const handleDone = (success : boolean)=>{\n        done && done(which, success);\n    }\n\n    if(which === \"crt\"){\n\n        return (\n            <CrtStep ready={status[which]} done={handleDone}/>\n        )\n\n    }\n\n    if(which === \"wallet\"){\n        return (\n            <WalletStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    if(which === \"enclave\"){\n        return (\n            <EnclaveStep ready={status[which]} done={handleDone}/>\n        )\n    }\n\n    return (\n\n        <>Step not found.</>\n\n    )\n\n}","export const simulateNetworkRequest =  async <T extends any>(value : T, upperBound : number = 5000) : Promise<T> =>{\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            resolve(value);\n        }, Math.random() * upperBound)\n    })\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport {Steps, AllSteps, StepStatusT} from \"./Steps\";\nimport { simulateNetworkRequest } from './simulateNetworkRequest';\n\nexport type RunStepsProps = {\n    done ? : ()=>void,\n    setStepStatus ? : (stepStatus : StepStatusT)=>void,\n    stepStatus : StepStatusT\n}\n\nexport const RunSteps : FC<RunStepsProps>  = ({\n    done,\n    setStepStatus,\n    stepStatus\n}) =>{\n\n    const [stepIndex, setStepIndex] = useState(0);\n    const [allDone, setAllDone] = useState(false);\n\n    const handleDone = (which : string, success : boolean)=>{\n        const index = AllSteps.indexOf(which);\n        if((index !== undefined) && (index < AllSteps.length - 1) && success){\n            setStepIndex(stepIndex + 1);\n            return;\n        }\n        if((index !== undefined) && (index > AllSteps.length - 2) && success){\n            setAllDone(true);\n        }\n    }\n\n    useEffect(()=>{\n\n        simulateNetworkRequest<StepStatusT>({\n            ...stepStatus,\n            [AllSteps[stepIndex]] : \"ready\"\n        }).then((data)=>{\n            setStepStatus && setStepStatus(data)\n        })\n\n    }, [stepStatus])\n\n    useEffect(()=>{\n        if(allDone){\n            done && done();\n        }\n    })\n\n    return (\n\n        <Steps \n        done={handleDone}\n        which={AllSteps[stepIndex]}\n        status={stepStatus}/>\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {Step} from \"../../Components/Walkthrough/Step\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {RunSteps} from \"../../Statics/Steps/RunSteps\";\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport { ethers } from 'ethers';\n\ndeclare global {\n    interface Window {\n        ethereum : ethers.providers.ExternalProvider\n    }\n}\n\nexport type NotReadyToRunProps = {\n\n    handleAllDone : ()=>void,\n    stepStatus : StepStatusT,\n    setStepStatus : (stepStatus : StepStatusT)=>void\n\n}\n\nexport const NotReadyToRun : FC<NotReadyToRunProps>  = ({\n    handleAllDone,\n    stepStatus,\n    setStepStatus\n}) =>{\n   \n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderDesktop crt={stepStatus.crt} enclave={stepStatus.enclave} wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <RunSteps done={handleAllDone} setStepStatus={setStepStatus} stepStatus={stepStatus}/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderDesktop crt={stepStatus.crt} enclave={stepStatus.enclave} wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <RunSteps done={handleAllDone} setStepStatus={setStepStatus} stepStatus={stepStatus}/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <RunSteps done={handleAllDone} setStepStatus={setStepStatus} stepStatus={stepStatus}/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <RunSteps done={handleAllDone} setStepStatus={setStepStatus} stepStatus={stepStatus}/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n       \n    )\n\n}","import { Octokit } from \"@octokit/rest\";\nimport to from \"await-to-js\";\nimport {fromByteArray} from \"base64-js\";\nconst { createPullRequest } = require(\"octokit-plugin-create-pull-request\");\n\nexport const MyOctokit = Octokit.plugin(createPullRequest);\nexport const octokit = new MyOctokit({\n    auth : process.env.REACT_APP_GITHUB_TOKEN\n});\n\nexport const getSha = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    const { data: { sha } } = await octokit.request(`GET /repos/${args.owner}/${args.repo}/contents/${args.path}`);\n\n    return sha\n}\n\nexport const getFileBlob = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n})=>{\n    \n    return await octokit.rest.git.getBlob({\n        owner : args.owner,\n        repo : args.repo,\n        file_sha : await getSha({\n            owner : args.owner,\n            repo : args.repo,\n            path : args.path\n        })\n    })\n\n}\n\n/**\n * https://stackoverflow.com/questions/30106476/using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\n * @param str \n * @returns \n */\nfunction b64DecodeUnicode(str : string) {\n    return decodeURIComponent(Array.prototype.map.call(atob(str), function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n    }).join(''))\n}\n\nexport const getFileText = async (args : {\n    owner : string,\n    repo : string,\n    path : string\n}) : Promise<string>=> {\n\n    const [error, text] = await to(\n        (await fetch(`https://raw.githubusercontent.com/${args.owner}/${args.repo}/main/${args.path}`)).text()\n    )\n\n    if(error){\n        throw error;\n    }\n\n    return text as string;\n\n}","import { getFileBlob, getFileText, getSha, octokit } from \"../../Sytems/Octokit\";\nimport {to} from \"await-to-js\";\n\nexport interface DappDataI {\n    name : string,\n    readme : string,\n    oracle : string,\n    appTile : string,\n    contract : OpenContractI,\n    openContractsInterface : OpenContractsInterfaceI,\n    dappInterface : OpenContractInterfaceI\n}\n\nexport interface DappI extends Partial<DappDataI>{\n    __isDapp__ : true\n    id : string\n    gitUrl : string\n}\n\nexport const isDapp = (obj : any) : obj is DappI => {\n\n    return obj.__isDapp__;\n\n}\n\nexport const parseGitUrl = (url : string) : {\n    owner : string |undefined,\n    repo : string | undefined\n}=>{\n\n\n    const split = url.split(\"/\");\n\n\n    return {\n        owner : split[split.length -2],\n        repo : split[split.length - 1]\n    }\n    \n\n}\n\nconst README = 'README.md';\n\nexport const parseName = (readme : string)=>{\n\n    const lines = readme.split(\"\\n\");\n    return lines.length ? \n                    lines[0].replace(/(\\W|\\s)/, \"\").trim()\n                    : \"Unnamed\"\n\n\n}\n\nexport const getDappName = async (dapp : DappI, onGet ? : (name : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    \n\n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n    const name = parseName(readme||\"\");\n\n    onGet && onGet(name);\n\n    return name;\n\n}\n\nexport const isDescriptionLine = (line : string)=>{\n\n    return (\n        line.length < 1 ||\n        line[0] !== \"#\"\n    )\n\n}\n\nexport const getDescriptionLines = (readme : string) : [number, number]=>{\n\n    const lines = readme.split(\"\\n\");\n\n    if(lines.length < 2){\n        return [-1, -1];\n    }\n\n    if(!isDescriptionLine(lines[1])){\n        return [-1, -1];\n    }\n\n    let i = 1;\n    while(i < lines.length && isDescriptionLine(lines[i])) ++i;\n\n    return [1, i];\n\n}\n\nexport const parseDescription = (readme : string) : string=>{\n\n    const descriptionLines = getDescriptionLines(readme);\n\n    return readme.split(\"\\n\").slice(descriptionLines[0], descriptionLines[1] + 1).join(\"\\n\");\n\n}\n\nexport const getDescription = async (dapp : DappI, onGet ? : (description : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, readme] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    })) : [undefined, \"\"]\n    \n    if(err) throw err;\n\n\n    const description = parseDescription(readme||\"\");\n\n\n    onGet && onGet(description);\n\n    return description;\n\n}\n\nexport const SOLIDITY = \"contract.sol\";\n\nexport const getDappSolidityContract = async (dapp : DappI, onGet ? : (contract : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const [err, contract] = owner && repo ? await to(getFileText({\n        owner : owner,\n        repo : repo,\n        path : SOLIDITY\n    })) : [undefined, \"\"];\n\n    if(err) throw err;\n\n    onGet && onGet(contract||\"\");\n\n    return contract||\"\";\n\n}\n\nexport const ORACLE = \"oracle.py\";\n\nexport const getDappOracle = async (dapp : DappI, onGet ? : (oracle : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const oracle = owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : ORACLE\n    }) : \"\";\n\n    onGet && onGet(oracle);\n\n    return oracle;\n\n}\n\nexport const APPTILE = \"tile\";\n\nexport const imageUriFromRepoAndOwner = (args : {\n    owner : string,\n    repo : string,\n    type : string\n})=>{\n\n    return `https://raw.githubusercontent.com/${args.owner}/${args.repo}/main/${APPTILE}.${args.type}`\n\n}\n\nexport const getDappImageUri = async (dapp : DappI, onGet ? : (imageUri : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    let uri =  \"\";\n    try {\n\n        const ext = \"png\";\n\n        await getFileBlob({\n            owner : owner||\"\",\n            repo : repo||\"\",\n            path : `${APPTILE}.${ext}`\n        })\n\n        uri = owner && repo ? imageUriFromRepoAndOwner({\n            owner : owner,\n            repo : repo,\n            type : ext\n        })  : \"\"\n\n    \n\n    } catch(e){\n\n        try {\n\n            const ext = \"jpg\"\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n\n        } catch(e){\n\n            const ext = \"jpg\"\n\n\n            await getFileBlob({\n                owner : owner||\"\",\n                repo : repo||\"\",\n                path : `${APPTILE}.${ext}`\n            })\n\n            uri = owner && repo ? imageUriFromRepoAndOwner({\n                owner : owner,\n                repo : repo,\n                type : ext\n            })  : \"\"\n        }\n\n    } \n\n    onGet && onGet(uri);\n\n    return uri;\n\n}\n\nexport const getDappReadMe = async (dapp : DappI, onGet ? : (readme : string)=>void) : Promise<string>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n    \n    const readme = decodeURI(owner && repo ? await getFileText({\n        owner : owner,\n        repo : repo,\n        path : README\n    }) : \"\");\n\n    onGet && onGet(readme);\n\n    return readme;\n\n}\n\nexport const jsonInterfacePath = \"interface.json\";\nexport const getDappInterface = async (\n    dapp : DappI,\n    onGet ? : (dappInterface : OpenContractInterfaceI)=>void\n) : Promise<OpenContractInterfaceI>=>{\n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    const dappInterface = (owner && repo) ? JSON.parse(\n        await getFileText({\n            owner : owner,\n            repo : repo,\n            path : jsonInterfacePath\n        })\n    ) : undefined\n\n    if(!dappInterface){\n        throw new Error(\"Failed to find a Dapp Interface.\");\n    }\n\n    onGet && onGet(dappInterface);\n\n    return dappInterface;\n\n}\n\nexport const ocInterfacePath = \"/protocol/opencontracts_interface.json\"\nexport const getOpenContractsInterface = async (\n    onGet ? : (dappInterface : OpenContractsInterfaceI)=>void\n) : Promise<OpenContractsInterfaceI>=>{\n\n    \n\n    const ocInterface = JSON.parse(await (await fetch(ocInterfacePath)).text())\n\n    if(!ocInterface){\n        throw new Error(\"Failed to find the Open Contracts interface for this site.\");\n    }\n\n    onGet && onGet(ocInterface);\n\n    return ocInterface;\n\n}\n\nexport const getDappContract = async (\n    dapp : DappI,\n    onGet ? : (contract : OpenContractI)=>void\n) : Promise<OpenContractI>=>{\n\n    const opencontract = await window.OpenContracts();\n    const dappInterface = dapp.dappInterface|| await getDappInterface(dapp);\n    const openContractsInterface = dapp.openContractsInterface || await getOpenContractsInterface();\n\n    opencontract.parseContracts(openContractsInterface, dappInterface);\n\n    onGet && onGet(opencontract);\n\n    return opencontract;\n\n}\n\nexport const getDappInfo = async (\n    dapp : DappI\n)=>{\n\n    \n\n    const {\n        owner,\n        repo \n    } = parseGitUrl(dapp.gitUrl);\n\n    return owner && repo && await octokit.rest.repos.get({\n        owner : owner,\n        repo : repo\n    });\n\n}\n","import React, {FC, ReactElement, useState} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport {AthenaButton} from \"../../../Components/Buttons\";\nimport {Colors} from \"../../../Theme\";\nimport {Grid3x3GapFill} from \"react-bootstrap-icons\";\n\nconst Members = [\"Single\", \"Grid\"]\n\n\nexport type ApolloRunDappContentProps = {\n    grid ? : boolean,\n    setGrid ? : (grid : boolean)=>void\n}\n\nconst ApolloRunDappContent : FC<ApolloRunDappContentProps> & {\n    Single : FC,\n    Grid : FC\n}  = ({\n    children,\n    grid,\n    setGrid\n}) =>{\n\n    const {\n        Single,\n        Grid\n    } = getComponentMembers(Members, children);\n\n    const handleGrid = ()=>{\n        setGrid && setGrid(true);\n    }\n    const handleSingle = ()=>{\n        setGrid && setGrid(false);\n    }\n\n    console.log(grid);\n\n    return (\n\n        <div>\n            <div style={{\n                display : \"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                borderBottom : `1px solid ${Colors.Maintheme}`,\n                position : \"relative\"\n            }}>\n                <AthenaButton\n                    onClick={handleGrid}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={Colors.quartenaryTextColor}\n                    style={{\n                        zIndex : 100,\n                        position : \"relative\",\n                        top : grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop : grid ? `1px solid ${Colors.Maintheme}` : \"none\",\n                        borderLeft : grid ? `1px solid ${Colors.Maintheme}` : \"none\",\n                        borderBottom : grid ? `1px solid ${Colors.quartenaryTextColor}` : \"none\",\n                        borderRight : grid ? `1px solid ${Colors.Maintheme}` : \"none\"\n                    }}\n                >\n                    <Grid3x3GapFill/>\n                </AthenaButton>\n                <AthenaButton\n                    onClick={handleSingle}\n                    primaryColor={Colors.Maintheme}\n                    secondaryColor={Colors.quartenaryTextColor}\n                    style={{\n                        zIndex : 100,\n                        position : \"relative\",\n                        top : !grid ? \"1px\" : 0,\n                        borderBottomRightRadius : \"0px\",\n                        borderBottomLeftRadius : \"0px\",\n                        borderTop : !grid ? `1px solid ${Colors.Maintheme}` : \"none\",\n                        borderLeft : !grid ? `1px solid ${Colors.Maintheme}` : \"none\",\n                        borderBottom : !grid ? `1px solid ${Colors.quartenaryTextColor}` : \"none\",\n                        borderRight : !grid ? `1px solid ${Colors.Maintheme}` : \"none\"\n                    }}\n                >\n                    <b>ƒ<sub>x</sub></b>\n                </AthenaButton>\n            </div>\n            <div style={{\n                background : Colors.quartenaryTextColor\n            }}>\n                {grid ? Grid : Single}\n            </div>\n        </div>\n\n    )\n\n}\n\nApolloRunDappContent.Grid = generateNamedMember(\"Grid\");\nApolloRunDappContent.Single = generateNamedMember(\"Single\");\n\nexport {ApolloRunDappContent}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappPutI } from '../DappPutType';\nimport { generateNamedMember, getComponentMembers } from 'rgfm';\n\nconst Members = [\"Pre\", \"Post\"];\n\nexport type DefaultHeaderProps = {\n    dappPut : DappPutI,\n    style ? : React.CSSProperties\n}\n\nconst DefaultHeader : FC<DefaultHeaderProps> & {\n    Pre : FC,\n    Post : FC\n}  = ({\n    dappPut,\n    children,\n    style\n}) =>{\n\n    const {\n        Pre,\n        Post\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div>\n            <div style={{\n                display :\"flex\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                fontSize : \"18px\",\n                color : Colors.primaryTextColor,\n                ...style\n            }}><b>{Pre}&emsp;</b>{dappPut.name}{Post}</div>\n            {dappPut.description && <><br/>\n            <p style={{\n                color : Colors.secondaryTextColor\n            }}>\n            {dappPut.description}\n            </p></>}\n        </div>\n\n    )\n\n}\n\nDefaultHeader.Pre = generateNamedMember(\"Pre\");\nDefaultHeader.Post = generateNamedMember(\"Post\");\n\nexport {DefaultHeader}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappInputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappInputHeaderProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n}\n\nexport const DappInputHeader : FC<DappInputHeaderProps>  = ({\n    dappInput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappInput} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Pre>\n                𝑥\n            </DefaultHeader.Pre>\n            <DefaultHeader.Post>\n                &emsp;<i style={{\n                    color : Colors.secondaryTextColor\n                }}>{dappInput.type}</i>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {DappI} from \"../Dapp\";\nimport {AthenaButton} from \"../../../Components/Buttons/AthenaButton\";\nimport {Colors, DesktopSizes} from \"../../../Theme\";\nimport { DappInputHeader } from '../../DappPut/DappInput/DappInputHeader';\nimport { DappInputI } from '../../DappPut/DappPutType';\nimport { InfoCircle } from 'react-bootstrap-icons';\n\nexport type ApolloDappFunctionProps = {\n    dapp : DappI,\n    func : OpenContractFunctionI,\n    selected : boolean,\n    onClick ? : (\n        e : React.MouseEvent,\n        name : string\n    )=>void,\n    style ? : React.CSSProperties\n}\n\nexport const ApolloDappFunction : FC<ApolloDappFunctionProps>  = ({\n    dapp,\n    func,\n    selected,\n    onClick,\n    style \n}) =>{\n\n    const handleClick = (e : React.MouseEvent)=>{\n        onClick && onClick(e, func.name);\n    }\n\n    const inputs = func.inputs.map((input)=>{\n        return (<DappInputHeader dappInput={input as DappInputI} style={{\n            width : \"50px\",\n            fontSize : \"16px\"\n        }}/>)\n    })\n\n    return (\n\n    \n            <AthenaButton \n            onClick={handleClick}\n                style={{\n                    wordWrap : \"normal\",\n                    width : \"auto\",\n                    fontSize : \"18px\",\n                    ...style\n                }}\n            \n                primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                       <div style={{\n                           overflowX : \"scroll\",\n                           overflowY : \"scroll\",\n                           padding : DesktopSizes.Padding.standard\n                       }}>\n                            <div style={{\n                                display : \"flex\",\n                                justifyContent : \"left\",\n                                alignContent : \"center\",\n                                alignItems : \"center\",\n                            }}>\n                                <div>\n                                    <b>ƒ<sub>x</sub></b>&emsp;\n                                </div>\n                                <hr style={{\n                                    color : Colors.Maintheme\n                                }}/>\n                                <div>\n                                    {func.name}\n                                </div>\n                            </div>  \n                            <div>\n                                {inputs}\n                            </div>\n                            <div style={{\n                                textAlign : \"left\"\n                            }}>\n                                {func.requiresOracle && <i style={{\n                                    color : Colors.deepCyan,\n                                    fontSize : \"16px\",\n                                    textAlign : \"left\"\n                                }}>\n                                    Oracle required.  \n                                </i>}\n                            </div>\n                       </div>\n            </AthenaButton>\n\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CollectionFill } from 'react-bootstrap-icons';\nimport { DappI } from '../Dapp';\nimport {ApolloDappFunction} from \"./ApolloRunDappFunction\";\nimport {LeftRightScrollAdorno} from \"../../../Components/Scroll/LeftRightScroll\";\nimport { DesktopSizes } from '../../../Theme';\nimport Masonry from \"react-masonry-css\";\n\nexport type ApolloDappFunctionsProps = {\n    dapp : DappI,\n    which ? : string,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloDappFunctions : FC<ApolloDappFunctionsProps>  = ({\n    dapp,\n    which,\n    setWhich\n}) =>{\n\n    const onFunctionClick = (e : React.MouseEvent, name : string)=>{\n        setWhich && setWhich(name);\n    }\n\n\n    const funcs = dapp.contract && dapp.contract ? dapp.contract.contractFunctions.map((func)=>{\n\n\n        return (\n            <div style={{\n                padding : DesktopSizes.Padding.standard\n            }}>\n                <ApolloDappFunction \n                    style={{\n                        width : \"100%\",\n                        height : \"auto\",\n                        borderRadius : DesktopSizes.BorderRadius.standard\n                    }}\n                    onClick={onFunctionClick}\n                    selected={func.name === which} \n                    dapp={dapp} \n                    func={func}/>\n            </div>\n        )\n    }) : <></>\n\n    return (\n\n        <Masonry \n            className={\"masonry\"}\n            breakpointCols={3}>\n            {funcs}\n        </Masonry>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappI } from '../Dapp';\nimport { ApolloDappFunctions } from './ApolloRunDappFunctions';\n\n\nexport type ApolloRunDappFunctionGridViewProps = {\n    which ? : string,\n    dapp : DappI,\n    setWhich ? : (which : string)=>void\n}\n\nexport const ApolloRunDappFunctionGridView : FC<ApolloRunDappFunctionGridViewProps>  = ({\n    which,\n    setWhich,\n    dapp\n}) =>{\n\n    return (\n\n        <ApolloDappFunctions which={which} setWhich={setWhich} dapp={dapp} />\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInputHeader } from './DappInputHeader';\nimport { DappInputContent } from './DappInputContent';\nimport { darkenStandard } from '../Methods';\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties\n    dappInput : DappInputI,\n    setInput ? : (input : DappInputI)=>void,\n}\n\nexport const DappInput : FC<DappPutInputProps>  = ({\n    dappInput,\n    style,\n    setInput\n}) =>{\n\n    return (\n\n        <></>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {generateNamedMember, getComponentMembers} from \"rgfm\";\nimport { DesktopSizes } from '../../Theme';\n\nconst Members = [\"Content\", \"Header\"];\n\nexport type DappPutInputProps = {\n    style ? : React.CSSProperties,\n}\n\nconst DappPutLayout : FC<DappPutInputProps> & {\n    Header : FC,\n    Content : FC\n} = ({\n    style,\n    children\n}) =>{\n\n    const {\n        Header,\n        Content\n    } = getComponentMembers(Members, children);\n\n    return (\n\n        <div style={{\n            textAlign : \"left\",\n            overflowWrap : \"anywhere\",\n            paddingTop : DesktopSizes.Padding.standard,\n            paddingBottom : DesktopSizes.Padding.standard,\n            paddingLeft : DesktopSizes.Padding.standard,\n            paddingRight : DesktopSizes.Padding.standard,\n            borderRadius : DesktopSizes.BorderRadius.standard,\n            ...style\n        }}>\n            <div>\n                {Header}\n            </div>\n            <div>\n                {Content}\n            </div>\n        </div>\n\n    )\n\n}\n\nDappPutLayout.Header = generateNamedMember(\"Header\");\nDappPutLayout.Content = generateNamedMember(\"Content\")\n\nexport {DappPutLayout};","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards';\nimport { HandIndexFill } from 'react-bootstrap-icons';\n\nexport type DappInteractputHeaderProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputHeader : FC<DappInteractputHeaderProps>  = ({\n    dappInteractput\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappInteractput}>\n            <DefaultHeader.Pre>\n                <HandIndexFill size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import Color from \"color\";\nimport React from \"react\";\n\nexport const lightenStandard = (color : React.CSSProperties[\"color\"])=>{\n\n    return Color(color).lighten(.2).hex();\n\n}\n\nexport const darkenStandard = (color : React.CSSProperties[\"color\"])=>{\n    return Color(color).darken(.2).hex();\n}","import React, {FC, ReactElement} from 'react';\nimport {AthenaButton} from \"../../../Components/Buttons\"\nimport {\n    lightenStandard,\n    darkenStandard\n} from \"../Methods\";\nimport {Colors} from \"../../../Theme\";\nimport {\n    DappInteractputI\n} from \"../DappPutType\";\nimport { useNavigate } from 'react-router-dom';\n\nexport type DappInteractputContentProps = {\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractputContent : FC<DappInteractputContentProps>  = ({\n    dappInteractput\n}) =>{\n\n    const navigate = useNavigate();\n\n    return (\n\n        <div style={{\n            display : \"flex\"\n        }}>\n            <AthenaButton \n                onClick={()=>{\n                    navigate(dappInteractput.value)\n                }}\n                primaryColor={darkenStandard(Colors.lilac)}\n                secondaryColor={lightenStandard(Colors.deepPurple)}>\n                    Launch interactive session\n                </AthenaButton>\n                &emsp;\n                <AthenaButton\n                    primaryColor={darkenStandard(Colors.failedRed)}\n                    secondaryColor={lightenStandard(Colors.deepPurple)}\n                >\n                    Reject interactive session\n                </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInteractputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappInteractputHeader } from './DappInteractputHeader';\nimport {DappInteractputContent} from \"./DappInteractputContent\";\n\nexport type DappPutInteractputProps = {\n    style ? : React.CSSProperties\n    dappInteractput : DappInteractputI\n}\n\nexport const DappInteractput : FC<DappPutInteractputProps>  = ({\n    dappInteractput,\n    style\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : Colors.deepPurple,\n            border : `1px solid ${Colors.lilac}`,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappInteractputHeader dappInteractput={dappInteractput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappInteractputContent dappInteractput={dappInteractput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards/DefaultHeader\";\nimport {ArrowReturnRight} from \"react-bootstrap-icons\";\n\nexport type DappOutputHeaderProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputHeader : FC<DappOutputHeaderProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappOutput}>\n            <DefaultHeader.Pre>\n                <ArrowReturnRight size={18}/>\n            </DefaultHeader.Pre>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Clipboard } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappOutputI } from '../DappPutType';\n\nexport type DappOutputContentProps = {\n    dappOutput : DappOutputI\n}\n\nexport const DappOutputContent : FC<DappOutputContentProps>  = ({\n    dappOutput\n}) =>{\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor,\n            width : \"100%\",\n            display : \"flex\",\n            alignContent : 'center',\n            alignItems : \"center\"\n        }}>\n            <AthenaButton primaryColor={Colors.royalBlue} secondaryColor={Colors.skyBlue} action={async ()=>{\n                navigator.clipboard.writeText(dappOutput.value||\"\");\n            }}>\n               <div style={{\n                   display : \"flex\",\n                   alignContent : \"center\",\n                   alignItems : \"center\"\n               }}>\n                    <Clipboard \n                    style={{\n                        color : Colors.primaryTextColor\n                    }}/>\n               </div>\n            </AthenaButton>\n            &emsp;\n            <div style={{\n                color : Colors.secondaryTextColor\n            }}>\n                {dappOutput.value}\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOutputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport {DappOutputHeader} from \"./DappOutputHeader\";\nimport { DappOutputContent } from '../DappOutput/DappOutputContent';\n\nexport type DappPutOutputProps = {\n    style ? : React.CSSProperties\n    dappOutput : DappOutputI\n}\n\nexport const DappOutput : FC<DappPutOutputProps>  = ({\n    style,\n    dappOutput\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : Colors.skyBlue,\n            border : `1px solid ${Colors.royalBlue}`,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOutputHeader dappOutput={dappOutput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOutputContent dappOutput={dappOutput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill} from \"react-bootstrap-icons\";\n\nexport type DappErrputHeaderProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputHeader : FC<DappErrputHeaderProps>  = ({\n    dappErrput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            dappPut={dappErrput}>\n                <DefaultHeader.Pre>\n                    <ExclamationCircleFill size={18}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappErrputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\n\nexport type DappErrputContentProps = {\n    dappErrput : DappErrputI\n}\n\nexport const DappErrputContent : FC<DappErrputContentProps>  = ({\n    dappErrput\n}) =>{\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor\n        }}>\n            {dappErrput.value}\n            <br/>\n            <br/>\n            <AthenaButton\n                    primaryColor={darkenStandard(Colors.failedRed)}\n                    secondaryColor={lightenStandard(Colors.fadedRed)}\n                >\n                    Reset args\n                </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappErrputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappErrputHeader } from './DappErrputHeader';\nimport { DappErrputContent } from './DappErrputContent';\n\nexport type DappPutErrputProps = {\n    style ? : React.CSSProperties\n    dappErrput : DappErrputI\n}\n\nexport const DappErrput : FC<DappPutErrputProps>  = ({\n    dappErrput,\n    style\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : Colors.fadedRed,\n            border : `1px solid ${Colors.failedRed}`,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappErrputHeader dappErrput={dappErrput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappErrputContent dappErrput={dappErrput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill} from \"react-bootstrap-icons\";\n\nexport type DappDescputHeaderProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputHeader : FC<DappDescputHeaderProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            dappPut={dappDescput}>\n                <DefaultHeader.Pre>\n                    <b>ƒ<sub>x</sub></b>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors } from '../../../Theme';\nimport { DappDescputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\n\nexport type DappDescputContentProps = {\n    dappDescput : DappDescputI\n}\n\nexport const DappDescputContent : FC<DappDescputContentProps>  = ({\n    dappDescput\n}) =>{\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor\n        }}>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappDescputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappDescputHeader } from './DappDescputHeader';\nimport { DappDescputContent } from './DappDescputContent';\n\nexport type DappPutDescputProps = {\n    style ? : React.CSSProperties\n    dappDescput : DappDescputI\n}\n\nexport const DappDescput : FC<DappPutDescputProps>  = ({\n    dappDescput,\n    style\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : Colors.arizonaOrange,\n            border : `1px solid ${Colors.infoYellow}`,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappDescputHeader dappDescput={dappDescput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappDescputContent dappDescput={dappDescput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DefaultHeader } from '../Standards/DefaultHeader';\nimport {ExclamationCircleFill, Eyeglasses} from \"react-bootstrap-icons\";\n\nexport type DappOracleputHeaderProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputHeader : FC<DappOracleputHeaderProps>  = ({\n    dappOracleput\n}) =>{\n\n    return (\n\n        <DefaultHeader\n            dappPut={dappOracleput}>\n                <DefaultHeader.Pre>\n                    <Eyeglasses size={24}/>\n                </DefaultHeader.Pre>\n            </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Check, X, Circle, CircleFill} from 'react-bootstrap-icons';\nimport { Ellipsis } from 'react-bootstrap/esm/PageItem';\nimport {ReadyT} from \"../../../Components/Ready\"\nimport { Colors } from '../../../Theme';\n\nexport type OracleLinkProps = {\n    ready ? :ReadyT,\n    link : string\n}\n\nexport const OracleLink : FC<OracleLinkProps>  = ({\n    ready,\n    link\n}) =>{\n\n\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            alignContent : \"center\",\n            alignItems : \"center\"\n        }}>\n\n            <div style={{\n                width : \"30px\",\n                display : \"flex\",\n                alignItems : \"center\",\n                alignContent : 'center',\n                justifyItems : \"center\",\n                justifyContent : \"center\"\n            }}>\n                {ready === \"ready\"  && \n                    <Check size={20} style={{\n                        color : Colors.forestEdge\n                    }} />\n                }\n                {!ready || (ready === \"failed\") && \n                    <X size={20} style={{\n                        color : Colors.failedRed\n                    }}/>\n                }\n                {ready === \"not ready\" && \n                    <CircleFill size={10} style={{\n                        color : Colors.arizonaOrange\n                    }}/>\n                }\n            </div>\n            <div>\n            &emsp;<a style ={{\n                color  : Colors.babyBlue\n            }} href={link}>{link}</a>\n            </div>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { AthenaButton } from '../../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport { DappOracleputI } from '../DappPutType';\nimport { darkenStandard, lightenStandard } from '../Methods';\nimport {OracleLink} from \"./OracleLink\"\n\nexport type DappOracleputContentProps = {\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleputContent : FC<DappOracleputContentProps>  = ({\n    dappOracleput\n}) =>{\n\n    const [load, setLoad] = useState(false);\n\n    return (\n\n        <div style={{\n            color : Colors.primaryTextColor\n        }}>\n            <br/>\n            <br/>\n            <AthenaButton\n            onClick={()=>{\n                setLoad(true);\n            }}\n                    primaryColor={darkenStandard(Colors.deepCyan)}\n                    secondaryColor={lightenStandard(Colors.cyan)}\n                >\n                    Load oracle data\n            </AthenaButton>\n            <br/>\n            <br/>\n           {load && <div style={{\n               border : `1px solid ${Colors.cyan}`,\n               borderRadius : DesktopSizes.BorderRadius.standard,\n               padding : DesktopSizes.Padding.standard,\n               background : Colors.primaryTextColor,\n               color : Colors.deepCyan\n           }}>\n                <h6>Awaiting 2/4...</h6>\n                <OracleLink link={\"https://sample.com/a\"} ready={\"ready\"}/>\n                <OracleLink link={\"https://sample.com/b\"} ready={\"ready\"}/>\n                <OracleLink link={\"https://sample.com/c\"} ready={\"failed\"}/>\n                <OracleLink link={\"https://sample.com/d\"} ready={\"not ready\"}/>\n           </div>}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappOracleputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappOracleputHeader } from './DappOracleputHeader';\nimport { DappOracleputContent } from './DappOracleputContent';\n\nexport type DappPutOracleputProps = {\n    style ? : React.CSSProperties\n    dappOracleput : DappOracleputI\n}\n\nexport const DappOracleput : FC<DappPutOracleputProps>  = ({\n    dappOracleput,\n    style\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : Colors.deepCyan,\n            border : `1px solid ${Colors.cyan}`,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappOracleputHeader dappOracleput={dappOracleput}/>\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappOracleputContent dappOracleput={dappOracleput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappInputI, DappPutI , DappErrputI, DappDescputI, DappInteractputI, DappOutputI, DappOracleputI} from '../DappPutType';\nimport {DappInput} from \"../DappInput\";\nimport {DappOutput} from \"../DappOutput\";\nimport { DappDescput } from '../DappDescput';\nimport {DappInteractput} from \"../DappInteractput\";\nimport {DappErrput} from \"../DappErrput\";\nimport {DappOracleput} from \"../DappOracleput\";\n\nexport type DappPutProps = {\n    put : DappPutI,\n    index : number,\n    setPut ? : (put : DappPutI, index : number)=>void\n}\n\nexport const DappPut : FC<DappPutProps>  = ({\n    put,\n    index,\n    setPut\n}) =>{\n\n    const handleSetPut = (put : DappPutI)=>{\n\n        setPut && setPut(put, index);\n\n    }\n\n    switch(put.putType){\n\n        case (\"input\") :{\n\n            return (\n                <DappInput  dappInput={put as DappInputI} setInput={handleSetPut}/>\n            )\n\n        }\n\n        case (\"output\") :{\n\n            return (\n                <DappOutput  dappOutput={put as DappOutputI}/>\n            )\n\n        }\n\n        case (\"error\") : {\n\n            return (\n                <DappErrput dappErrput={put as DappErrputI}/>\n            )\n\n        }\n\n        case (\"interactive\") : {\n\n            return (\n                <DappInteractput dappInteractput={put as DappInteractputI}/>\n            )\n\n        }\n\n        case (\"oracle\") : {\n            \n            return (\n                <DappOracleput dappOracleput={put as DappOracleputI}/>\n            )\n\n        }\n\n        default : {\n            return (\n                <DappDescput dappDescput={put as DappDescputI}/>\n            )\n        }\n\n    }\n\n}","import React, {FC, ReactElement} from 'react';\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport {DefaultHeader} from \"../Standards\";\n\nexport type DappResultputHeaderProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n}\n\nexport const DappResultputHeader : FC<DappResultputHeaderProps>  = ({\n    dappResultput,\n    style\n}) =>{\n\n    return (\n\n        <DefaultHeader dappPut={dappResultput} style={{\n            color : Colors.babyBlue,\n            ...style\n        }}>\n            <DefaultHeader.Pre>\n                𝑦      \n            </DefaultHeader.Pre>\n            <DefaultHeader.Post>\n                &emsp;=&emsp;<b style={{\n                    color : Colors.Maintheme\n                }}>{dappResultput.value||\"undefined\"}</b>\n            </DefaultHeader.Post>\n        </DefaultHeader>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport { Colors } from '../../../Theme';\nimport { DappResultputI } from '../DappPutType';\nimport Color from \"color\";\nimport {darkenStandard, lightenStandard} from \"../Methods\";\n\n\nexport type DappResultputContentProps = {\n    dappResultput : DappResultputI,\n    setResultput ? : (Resultput : DappResultputI)=>void\n}\n\nexport const DappResultputContent : FC<DappResultputContentProps>  = ({\n    dappResultput, \n    setResultput\n}) =>{\n\n    const onTextResultput = (text : string)=>{\n        setResultput && setResultput({\n            ...dappResultput,\n            value : text\n        })\n    }\n\n    return (\n\n        <div>\n            \n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DappResultputI } from '../DappPutType';\nimport { DappPutLayout } from '../DappPutLayout';\nimport {Colors} from \"../../../Theme/Colors\";\nimport { DappResultputHeader } from './DappResultputHeader';\nimport { DappResultputContent } from './DappResultputContent';\nimport { darkenStandard } from '../Methods';\n\nexport type DappPutResultputProps = {\n    style ? : React.CSSProperties\n    dappResultput : DappResultputI,\n    setResultput ? : (Resultput : DappResultputI)=>void,\n}\n\nexport const DappResultput : FC<DappPutResultputProps>  = ({\n    dappResultput,\n    style,\n    setResultput\n}) =>{\n\n    return (\n\n        <DappPutLayout style={{\n            background : Colors.arizonaOrange,\n            color : Colors.primaryTextColor,\n            ...style\n        }}>\n            <DappPutLayout.Header>\n                <DappResultputHeader dappResultput={dappResultput} />\n            </DappPutLayout.Header>\n            <DappPutLayout.Content>\n                <DappResultputContent setResultput={setResultput} dappResultput={dappResultput}/>\n            </DappPutLayout.Content>\n        </DappPutLayout>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {Form, FormControlProps} from \"react-bootstrap\";\n\nexport type TextInputApolloProps = FormControlProps & {\n    style ? : React.CSSProperties,\n    onTextInput ? : (text : string)=>void,\n    placeholder ? : string\n}\n\nexport const TextInputApollo : FC<TextInputApolloProps>  = (props) =>{\n\n    const {\n        onTextInput,\n        ...rest\n    } = {\n        ...props,\n        type : \"text\"\n    };\n\n    const handleKeyDown = (e : React.KeyboardEvent<HTMLInputElement>)=>{\n\n        const char = e.key.length < 2 ? e.key : \"\";\n\n        onTextInput && onTextInput((e.target as any).value + char);\n\n    }\n\n\n    return (\n\n        <Form.Control\n\n            onKeyDown={handleKeyDown}\n            {...props}\n        />\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { Play, PlayCircleFill, PlayFill } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { DappI, parseGitUrl } from '../Dapp/Dapp';\nimport { DappInput, DappPut } from '../DappPut';\nimport { DappDescputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI } from '../DappPut/DappPutType';\nimport {to} from \"await-to-js\";\nimport { useEffect } from 'react';\nimport { DappInputHeader } from '../DappPut/DappInput/DappInputHeader';\nimport { DappResultput } from '../DappPut/DappResultput';\nimport { ArrowReturnRight } from 'react-bootstrap-icons';\nimport { TextInputApollo } from '../../Components/TextInput';\nexport const createResult = (contractFunction : OpenContractFunctionI) : DappResultputI=>{\n    return {\n        name : contractFunction.name,\n        value : contractFunction.result,\n        putType : \"result\"\n    }\n}\n\nexport type DappFunctionLogRunButtonProps = {\n    contractFunction : OpenContractFunctionI,\n    puts : DappPutI[],\n    handleCall : ()=>void,\n    setPut : (put : DappPutI, index : number)=>void\n}\n\nexport const DappFunctionLogRunButton : FC<DappFunctionLogRunButtonProps>  = ({\n    puts,\n    contractFunction,\n    handleCall,\n    setPut\n}) =>{\n\n    console.log(puts);\n\n    const inputs = puts.reduce((agg, put, index)=>{\n        console.log(put);\n        const onTextInput = (text : string)=>{\n            setPut({\n                ...put,\n                value : text\n            } as DappInputI, index)\n        }\n        return [\n            ...agg,\n            ...put.putType === \"input\" ? [\n                (\n                    <div style={{\n                        alignContent : 'center',\n                        alignItems : \"center\",\n                        paddingBottom : DesktopSizes.Padding.standard,\n                        lineHeight : \"18px\"\n                    }}>\n                        <DappInputHeader dappInput={put as DappInputI} style={{\n                            width : \"50px\",\n                            fontSize : \"16px\",\n                        }}/>\n                        <br/>\n                        <div style={{\n                            display : \"flex\",\n                            color : Colors.secondaryTextColor,\n                            alignContent : \"center\",\n                            alignItems : \"center\",\n                            fontSize : \"16px\"\n                        }}>\n                           &emsp;<span style={{\n                               fontSize : \"16px\"\n                           }}>=&emsp;</span><TextInputApollo\n                            onTextInput={onTextInput}\n                            style={{\n                                fontSize : \"16px\"\n                           }}/>\n                        </div>\n                    </div>\n                )\n            ] : []\n        ]\n    }, [] as React.ReactNode[])\n\n    const [isHovered, setHovered] = useState(false);\n    const handleMouseOver = ()=>{\n        setHovered(true);\n    }\n    const handleMouseOut = ()=>{\n        setHovered(false);\n    }\n\n    return (\n        <div \n            onMouseOver={handleMouseOver}\n            onMouseOut={handleMouseOut}\n        >\n             <div style={{\n                position : \"relative\",\n            }}>\n                <div\n                    style={{\n                        width : \"100%\",\n                        padding : DesktopSizes.Padding.standard,\n                        borderTopLeftRadius : DesktopSizes.BorderRadius.standard,\n                        borderTopRightRadius : DesktopSizes.BorderRadius.standard,\n                        borderBottomLeftRadius : \"0px\",\n                        borderBottom : \"none\",\n                        borderLeft :`1px solid ${Colors.Maintheme}`,\n                        borderRight : `1px solid ${Colors.Maintheme}`,\n                        borderTop : `1px solid ${Colors.Maintheme}`,\n                        borderBottomRightRadius : \"0px\",\n                        background : 'white'\n                    }}>\n                    <div style={{\n                        fontSize : \"24px\",\n                        textAlign : \"left\"\n                    }}>\n                        <p><PlayCircleFill/>&emsp;{contractFunction.name}<sub>x</sub></p>\n                        <div style={{\n                            paddingLeft : DesktopSizes.Padding.whitespacePreferred\n                        }}>\n                            {inputs}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div style={{\n                display : \"grid\",\n                alignContent : \"center\",\n                alignItems : \"center\",\n                gridTemplateColumns : \"1fr 9fr\"\n            }}>\n                <div\n                onClick={handleCall}\n                style={{\n                    display : \"flex\",\n                    alignContent : \"center\",\n                    alignItems : \"center\",\n                    justifyContent : \"center\",\n                    height : \"100%\",\n                    width : \"100%\",\n                    borderTopLeftRadius : \"0px\",\n                    borderTopRightRadius : \"0px\",\n                    borderBottomRightRadius : \"0px\",\n                    zIndex : 100,\n                    borderTop : \"none\",\n                    borderRight : \"none\",\n                    borderBottom : `1px solid ${Colors.Maintheme}`,\n                    borderLeft : `1px solid ${Colors.Maintheme}`,\n                    background :  \"white\",\n                    borderBottomLeftRadius : DesktopSizes.BorderRadius.standard\n                }}><ArrowReturnRight size={30}/></div>\n                <div style={{\n                    background : isHovered ? Colors.Maintheme : \"white\",\n                    borderBottomLeftRadius : \"0px\",\n                    borderBottomRightRadius : DesktopSizes.BorderRadius.standard,\n                }}>\n                    <DappResultput\n                        dappResultput={createResult(contractFunction)}\n                        style={{\n                            borderTopLeftRadius : DesktopSizes.BorderRadius.standard,\n                            borderBottomLeftRadius : \"0px\",\n                            borderTopRightRadius : \"0px\",\n                            borderLeft : `1px solid ${Colors.Maintheme}`,\n                            borderRight : `1px solid ${Colors.bloodOrange}`,\n                            borderTop : `1px solid ${Colors.Maintheme}`,\n                            borderBottom : `1px solid ${Colors.bloodOrange}`\n                        }}\n                />\n                </div>\n            </div>\n        </div>\n      \n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors } from '../../Theme';\n\nexport type DappFunctionSubmitStateProps = {\n    contractFunction : OpenContractFunctionI,\n    call : ()=>void\n}\n\nexport const DappFunctionSubmitState : FC<DappFunctionSubmitStateProps>  = ({\n    contractFunction,\n    call\n}) =>{\n\n    const [oracleLoaded, setOracleLoaded] = useState(false);\n\n    return (\n\n        <div style={{\n            display : \"flex\",\n            justifyContent : \"right\",\n            justifyItems : \"right\"\n        }}>\n            {contractFunction.requiresOracle && <AthenaButton \n                primaryColor={\"white\"}\n                secondaryColor={Colors.Maintheme}>\n                Load oracle data        \n            </AthenaButton>}\n            <AthenaButton\n                onClick={call}\n                disabled={contractFunction.requiresOracle && !oracleLoaded}\n                primaryColor={\"white\"}\n                secondaryColor={Colors.Maintheme}\n            >\n                Call function\n            </AthenaButton>\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { Play, PlayCircleFill, PlayFill } from 'react-bootstrap-icons';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { DappI, parseGitUrl } from '../Dapp/Dapp';\nimport { DappInput, DappPut } from '../DappPut';\nimport { DappDescputI, DappErrputI, DappInputI, DappInteractputI, DappOracleputI, DappOutputI, DappPutI, DappResultputI } from '../DappPut/DappPutType';\nimport {to} from \"await-to-js\";\nimport { useEffect } from 'react';\nimport { DappInputHeader } from '../DappPut/DappInput/DappInputHeader';\nimport { DappResultput } from '../DappPut/DappResultput';\nimport { ArrowReturnRight } from 'react-bootstrap-icons';\nimport {DappFunctionLogRunButton} from \"./DappFunctionLogRunButton\";\nimport {DappFunctionSubmitState} from \"./DappFunctionSubmitState\";\n\nexport interface OpenContractLogStateI {\n    log : any[]\n}\n\nexport type DappFunctionLogAthenaProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setDappFunction ? : (func : OpenContractFunctionI)=>void\n}\n\nexport const transformToDappPut = (put : OpenContractFunctionI[\"inputs\"] | OpenContractFunctionI[\"prints\"])=>{\n\n}\n\nexport const createInputs = (contractFunction : OpenContractFunctionI) : DappInputI[]=>{\n    return contractFunction.inputs.map((input)=>{\n        return {\n            ...input,\n            putType : \"input\"\n        } as DappInputI\n    })\n}\n\nexport const createErrors = (contractFunction : OpenContractFunctionI) : DappErrputI[]=>{\n    return contractFunction.errors ? contractFunction.errors.map((error)=>{\n        return {\n            ...error,\n            putType : \"error\"\n        }\n    }) : []\n}\n\nexport const createXpras = (contractFunction : OpenContractFunctionI) : DappInteractputI[]=>{\n    return contractFunction.xpras ? contractFunction.xpras.map((xpra)=>{\n        return {\n            ...xpra,\n            putType : \"interactive\"\n        } \n    }) : []\n}\n\nexport const createOutputs = (contractFunction : OpenContractFunctionI) : DappOutputI[]=>{\n    return contractFunction.prints ? contractFunction.prints.map((xpra)=>{\n        return {\n            ...xpra,\n            putType : \"output\"\n        } \n    }) : []\n}\n\nexport const createOracleData = (\n    contractFunction : OpenContractFunctionI,\n    setFunc ? : (func : OpenContractFunctionI)=>void\n) : DappOracleputI=>{\n\n    const setOracleData = (data : OpenContractFunctionI[\"oracleData\"])=>{\n        setFunc && setFunc({\n            ...contractFunction,\n            oracleData : data\n        })\n    }\n\n    return {\n        name : contractFunction.name,\n        contractFunction : contractFunction,\n        putType : \"oracle\",\n        setOracleData : setOracleData\n    } as DappOracleputI\n\n}\n\nexport const createResult = (contractFunction : OpenContractFunctionI) : DappResultputI=>{\n    return {\n        name : contractFunction.name,\n        value : contractFunction.result,\n        putType : \"result\"\n    }\n}\n\nexport const createDescriptionData = (contractFunction : OpenContractFunctionI) : DappDescputI[]=>{\n    return [\n        {\n            name : contractFunction.name,\n            description : contractFunction.description,\n            putType : \"description\",\n            value : contractFunction.name,\n\n        }\n    ]\n}\n\nexport const aggregateContractFunctionPuts = (\n    contractFunction : OpenContractFunctionI,\n    setFunc ? : (func : OpenContractFunctionI)=>void\n)=>{\n\n    return [\n        ...createInputs(contractFunction),\n        ...contractFunction.requiresOracle ? [createOracleData(contractFunction, setFunc)] : [],\n        ...createErrors(contractFunction),\n        ...createXpras(contractFunction),\n        ...createOutputs(contractFunction),\n    ]\n\n}\n\nexport const getContractFunctionInputs = (puts : DappPutI[])=>{\n\n\n    return puts.filter((put)=>{\n        \n        return put.putType === \"input\";\n    })\n\n}\n\nexport const DappFunctionLogAthena : FC<DappFunctionLogAthenaProps>  = ({\n    dapp,\n    contractFunction,\n    setDappFunction\n}) =>{\n\n    const logState : OpenContractLogStateI = {\n        log : aggregateContractFunctionPuts(contractFunction)\n    }\n\n    const setPut = (put : DappPutI, index : number)=>{\n        logState.log[index] = put;\n        setDappFunction && setDappFunction({\n            ...contractFunction,\n            inputs : getContractFunctionInputs(logState.log)\n        })\n    }\n\n    const puts = logState.log.map((put, index)=>{\n        return (\n            <div style={{\n                width : \"100%\",\n                paddingBottom : DesktopSizes.Padding.standard\n            }}><DappPut setPut={setPut} index={index} put={put}/></div>\n        )\n    })\n\n    const addOutput = (name : string, message : string)=>{\n        setDappFunction && setDappFunction({\n            ...contractFunction,\n            prints : [...contractFunction.prints||[], {\n                name : name,\n                value : message\n            }]\n        })\n    }\n\n    contractFunction.printHandler = async (message : string)=>{\n        addOutput(\"Output received!\", message)\n    }\n\n    const addError = (name : string, e : any)=>{\n\n        setDappFunction && setDappFunction({\n            ...contractFunction,\n            errors : [...contractFunction.errors||[], {\n                name : name,\n                description : e\n            }]\n        })\n\n    }\n\n    const handleError = async (message : string)=>{\n\n        addError(\"An error occurred!\", message);\n\n    }\n    contractFunction.errorHandler = handleError;\n\n    const addOracleData = (data : OpenContractFunctionI[\"oracleData\"])=>{\n        setDappFunction && setDappFunction({\n            ...contractFunction,\n            oracleData : data\n        })\n    }\n\n    const addResult = (data : OpenContractFunctionI[\"result\"])=>{\n        setDappFunction &&  setDappFunction && setDappFunction({\n            ...contractFunction,\n            result : data\n        })\n    }\n\n    const handleCall = async ()=>{\n\n        if(contractFunction.requiresOracle){\n\n            const {\n                owner,\n                repo\n            } = parseGitUrl(dapp.gitUrl)\n\n            const [error, data]= await to(window.githubOracleDownloader(\n                owner || \"\",\n                repo || \"\",\n                \"main\",\n                contractFunction.oracleFolder\n            ));\n\n            if(error){\n                addError(\"An error occurred!\", \"GitHub download failed.\");\n                return;\n            }\n\n            addOracleData(data||{} as any)\n\n            contractFunction.oracleData = data || {} as any;\n\n            contractFunction.call(contractFunction).then((data)=>{\n                addResult(data);\n            }).catch((err)=>{\n                addError(\"An error occurred!\", err.toString());\n            })\n\n        }\n        contractFunction.call(contractFunction).then((data)=>{\n            addResult(data);\n        }).catch((err)=>{\n            addError(\"An error occurred!\", err.toString());\n        })\n\n    }\n\n    const addInteractput = (name : string, targetUrl : string, sessionUrl : string)=>{\n\n        setDappFunction && setDappFunction({\n            ...contractFunction,\n            xpras : [...contractFunction.xpras||[], {\n                name : name,\n                description : sessionUrl,\n                value : targetUrl\n            }]\n        })\n    }\n\n    contractFunction.xpraHandler = async (targetUrl, sessionUrl, xpraExit)=>{\n\n        addInteractput(\"Interactive session requested.\", targetUrl, sessionUrl);\n\n    }\n\n    const inputs = contractFunction.inputs.map((input)=>{\n        return (\n            <div style={{\n                alignContent : 'center',\n                alignItems : \"center\",\n                paddingBottom : DesktopSizes.Padding.standard,\n                lineHeight : \"18px\"\n            }}>\n                <DappInputHeader dappInput={input as DappInputI} style={{\n                    width : \"50px\",\n                    fontSize : \"16px\",\n                }}/>\n                <span style={{\n                    color : Colors.forestEdge,\n                    fontSize : \"16px\"\n                }}>&emsp;=&ensp;{input.value||\"undefined\"}</span>\n            </div>\n        )\n    })\n\n    console.log(logState);\n\n    return (\n\n        <>\n            <div style={{\n                width : \"100%\",\n                paddingBottom : DesktopSizes.Padding.standard,\n            }}>\n                <DappFunctionLogRunButton\n                    puts={logState.log}\n                    setPut={setPut}\n                    contractFunction={contractFunction}\n                    handleCall={handleCall}\n                />\n                {puts}\n                <DappFunctionSubmitState\n                    call={handleCall}\n                    contractFunction={contractFunction}\n                />\n            </div>\n        </>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport {DappI} from \"../Dapp\";\nimport { DappFunctionLogAthena } from './DappFunctionLogAthena';\n\nexport type DappFunctionAthenaProps = {\n    dapp : DappI,\n    contractFunction : OpenContractFunctionI,\n    setDappFunction ? : (func : OpenContractFunctionI)=>void\n}\n\nexport const DappFunctionAthena : FC<DappFunctionAthenaProps>  = ({\n    dapp,\n    contractFunction,\n    setDappFunction\n}) =>{\n\n    return (\n\n        <DappFunctionLogAthena setDappFunction={setDappFunction} dapp={dapp} contractFunction={contractFunction}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { DesktopSizes } from '../../../Theme';\nimport {DappI} from \"../../Dapp\";\nimport { DappFunctionAthena } from '../../DappFunction';\n\nexport type ApolloRunDappFunctionViewProps = {\n    dapp : DappI,\n    setDappFunction : (contractFunction : OpenContractFunctionI)=>void\n    contractFunction ? : OpenContractFunctionI\n}\n\nexport const ApolloRunDappFunctionView : FC<ApolloRunDappFunctionViewProps>  = ({\n    dapp,\n    setDappFunction,\n    contractFunction\n}) =>{\n\n    return (\n\n        <div style={{\n            padding: DesktopSizes.Padding.standard\n        }}>\n            {contractFunction && \n                <>\n                    <h3 style={{\n                        textAlign : \"left\"\n                    }}>{contractFunction.name}</h3>\n                    <p style={{\n                        textAlign : \"left\"\n                    }}>\n                        {contractFunction.description}\n                    </p>\n                    <DappFunctionAthena\n                        dapp={dapp}\n                        setDappFunction={setDappFunction}\n                        contractFunction={contractFunction}\n                    />\n                </>\n            }\n            {!contractFunction && <h2>No function selected.</h2>}\n        </div>\n\n    )\n\n}","import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport { DappI, getDappName, getDappSolidityContract, getDappOracle, getDappImageUri, getDappReadMe, parseGitUrl, getDappContract } from '../Dapp';\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport { Colors, DesktopSizes } from '../../../Theme';\nimport {ApolloRunDappContent} from \"./ApolloRunDappContent\";\nimport { ApolloRunDappFunctionGridView } from './ApolloRunDappFunctionGridView';\nimport { ApolloRunDappFunctionView } from './ApolloRunDappFunctionView';\nimport { useErrorContext } from '../../../Error/ErrorProvider';\n\n\nexport type ApolloRunDappMainItemReadmeProps = {\n    style ? : React.CSSProperties,\n    readme : string | undefined\n}\n\nexport const ApolloRunDappMainItemReadMe : FC<ApolloRunDappMainItemReadmeProps> = ({\n    style,\n    readme\n})=>{\n\n    return (\n        <div style={{\n            ...style,\n            textAlign : 'left'\n        }}>\n            {!readme && <Skeleton width=\"100%\" count={5}/>}\n            {readme && <ReactMarkdown plugins={[remarkGfm]}>\n                {readme}    \n            </ReactMarkdown>}\n        </div>\n    )\n\n}\n\nexport type ApolloRunDappMainItemInternalsProps = {\n    dappItem : DappI,\n    setDappItem ? : (dappItem : DappI)=>void,\n    style? : React.CSSProperties,\n    key? : React.Key,\n}\n\nexport const ApolloRunDappMainItemInternals : FC<ApolloRunDappMainItemInternalsProps>  = ({\n    dappItem,\n    style,\n    setDappItem\n}) =>{\n\n    const [which, setWhich] = useState<string|undefined>(undefined);\n\n    const _selectedFunc = dappItem.contract && dappItem.contract.contractFunctions ? \n                            dappItem.contract.contractFunctions.filter((func)=>{\n                                return func.name === which\n                            })[0] : undefined\n\n    const selectedFunc = _selectedFunc || (\n        dappItem.contract?.contractFunctions[0]\n    )\n\n    const setFunc = (contractFunction : OpenContractFunctionI)=>{\n\n        \n\n        if(dappItem.contract && setDappItem){\n\n            const newContractFunctions = dappItem.contract.contractFunctions.reduce((agg, oldContractFunction)=>{\n\n                return [\n                    ...agg,\n                    ...(contractFunction.name === oldContractFunction.name) ? [contractFunction] : [oldContractFunction]\n                ]\n            }, [] as OpenContractFunctionI[])\n\n        \n    \n            setDappItem({\n                ...dappItem,\n                contract : {\n                    ...dappItem.contract,\n                    contractFunctions : newContractFunctions\n                }\n            })\n\n        }\n\n    }\n\n    const [grid, setGrid] = useState(true);\n    const handleWhich = (which : string)=>{\n        setGrid(false);\n        setWhich(which);\n    }\n\n    return (\n\n        <div style={{\n            width : \"100%\",\n            paddingBottom : DesktopSizes.Padding.whitespacePreferred,\n            ...style\n        }}>\n            <div>\n                <div style={{\n                    textAlign : \"left\",\n                    color : Colors.Maintheme\n                }}>\n                    <h1>{dappItem.name}</h1>\n                </div>\n                <br/>\n                <ApolloRunDappContent grid={grid} setGrid={setGrid}>\n                    <ApolloRunDappContent.Grid>\n                        <ApolloRunDappFunctionGridView\n                            dapp={dappItem}\n                            setWhich={handleWhich}\n                            which={which}\n                        />\n                    </ApolloRunDappContent.Grid>\n                    <ApolloRunDappContent.Single>\n                        <ApolloRunDappFunctionView\n                            dapp={dappItem}\n                            setDappFunction={setFunc}\n                            contractFunction={selectedFunc}\n                        />\n                    </ApolloRunDappContent.Single>\n                </ApolloRunDappContent>\n            </div>\n        </div>\n\n    )\n\n}\n\nexport type ApolloRunDappMainItemProps = {\n    dappItem : DappI,\n    style? : React.CSSProperties,\n    key? : React.Key,\n    updateDapp ? : (dapp : DappI)=>void,\n    forceLoad ? : boolean\n}\n\nexport const ApolloRunDappMainItem : FC<ApolloRunDappMainItemProps>  = ({\n    dappItem,\n    style,\n    updateDapp,\n    forceLoad = false\n}) =>{\n\n    const {\n        dispatch\n    } = useErrorContext();\n\n    const [dappState, setDappState] = useState(dappItem);\n    useEffect(()=>{\n\n        if((dappState !== dappItem) && updateDapp){\n            \n            updateDapp(dappState)\n        }\n\n    })\n\n    const [nameLoad, setNameLoad] = useState<string|undefined>(undefined);\n    useEffect(()=>{\n\n        if(!nameLoad){\n            getDappName(\n                dappItem,\n                (name : string)=>setNameLoad(name)\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [])\n    useEffect(()=>{\n\n        if(dappState.name !== nameLoad){\n            setDappState({\n                ...dappState,\n                name : nameLoad\n            })\n        }\n\n    })\n\n    const [contractLoad, setContractLoad] = useState<OpenContractI|undefined>(undefined);\n    const [contractLoaded, setContracLoaded] = useState(false);\n    useEffect(()=>{\n\n        if(!contractLoad){\n            getDappContract(\n                dappItem,\n                (contract : OpenContractI)=>{\n                    \n                    setContractLoad(contract)\n                }\n            ).catch((err)=>{\n                dispatch((state)=>{\n                    return {\n                        ...state,\n                        error : err\n                    }\n                })\n            })\n        }\n\n    }, [])\n    useEffect(()=>{\n\n        if(contractLoad && (dappState.contract !== contractLoad) && !contractLoaded){\n            setDappState({\n                ...dappState,\n                contract : contractLoad\n            })\n            setContracLoaded(true);\n        }\n\n    })\n\n    const handleSetDappState = (dapp :DappI)=>{\n        \n        \n        setDappState(dapp);\n    }\n    \n\n    return (\n\n        <ApolloRunDappMainItemInternals setDappItem={handleSetDappState} dappItem={dappState} style={style}/>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { DappI } from '../../Items';\nimport { ApolloRunDappMainItem } from '../../Items/Dapp/ApolloDapp/ApolloRunDappMainItem';\n\nexport type RunBenchDesktopProps = {\n    dapp ? : DappI\n}\n\nexport const RunBenchDesktop : FC<RunBenchDesktopProps>  = ({\n    dapp\n}) =>{\n\n    const [dappState, setDappState] = useState<DappI|undefined>(dapp);\n\n    const handleUpdate = (dapp  : DappI)=>{\n\n        \n        setDappState(dapp);\n\n    }\n\n\n    return (\n\n        <>{dappState  ? \n            <ApolloRunDappMainItem dappItem={dappState} updateDapp={handleUpdate} />\n            : \"No dapp\"\n        }</>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { RunBenchDesktop } from '../../Benches';\nimport { DappI } from '../../Items';\n\nexport type RunPageWithRepoProps = {\n    stepStatus : StepStatusT,\n    repo : {\n        owner : string,\n        repo : string\n    }\n}\n\nexport const RunPageWithRepo : FC<RunPageWithRepoProps>  = ({\n    stepStatus,\n    repo\n}) =>{\n\n    const dapp : DappI = {\n        __isDapp__ : true,\n        gitUrl : `https://github.com/${repo.owner}/${repo.repo}`,\n        id : `${repo.owner}/${repo.repo}`\n    } \n\n    \n\n    return (\n\n        <MediaResponsive>\n            <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderDesktop crt={stepStatus.crt} enclave={stepStatus.enclave} wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <RunBenchDesktop dapp={dapp} />\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n            <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <RunBenchDesktop dapp={dapp} />\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Laptop>\n            <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <RunBenchDesktop dapp={dapp} />\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n            </MediaResponsive.Tablet>\n            <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <RunBenchDesktop dapp={dapp} />\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n            </MediaResponsive.Mobile>\n        </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement, useState} from 'react';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { TextInputApollo } from '../../Components/TextInput';\nimport { useNavigate } from 'react-router-dom';\nimport { AthenaButton } from '../../Components/Buttons';\nimport { Colors } from '../../Theme';\nimport { parseGitUrl } from '../../Items';\n\nexport type RunPageNoRepoProps = {\n    stepStatus : StepStatusT\n}\n\n\nexport const RunPageNoRepo : FC<RunPageNoRepoProps>  = ({\n    stepStatus\n}) =>{\n\n    const navigate = useNavigate();\n    const [text, setText] = useState(\"\");\n\n    const handleSubmit = ()=>{\n        const {\n            owner,\n            repo\n        } = parseGitUrl(text);\n\n        navigate(`#/${owner}/${repo}`);\n\n    }\n\n    return (\n\n        <MediaResponsive>\n            <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderDesktop crt={stepStatus.crt} enclave={stepStatus.enclave} wallet={stepStatus.wallet}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <div style={{\n                            display : \"flex\",\n                            alignContent : \"center\",\n                            alignItems : \"center\"\n                        }}>\n                            <TextInputApollo \n                            placeholder={\"Enter repo\"}\n                            onTextInput={setText}/>&emsp;<AthenaButton \n                            onClick={handleSubmit}\n                            primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                                Submit\n                            </AthenaButton>\n                        </div>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n            <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                    <div style={{\n                            display : \"flex\",\n                            alignContent : \"center\",\n                            alignItems : \"center\"\n                        }}>\n                            <TextInputApollo \n                            placeholder={\"Enter repo\"}\n                            onTextInput={setText}/>&emsp;<AthenaButton \n                            onClick={handleSubmit}\n                            primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                                Submit\n                            </AthenaButton>\n                        </div>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Laptop>\n            <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                    <div style={{\n                            display : \"flex\",\n                            alignContent : \"center\",\n                            alignItems : \"center\"\n                        }}>\n                            <TextInputApollo \n                            placeholder={\"Enter repo\"}\n                            onTextInput={setText}/>&emsp;<AthenaButton \n                            onClick={handleSubmit}\n                            primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                                Submit\n                            </AthenaButton>\n                        </div>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n            </MediaResponsive.Tablet>\n            <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                    <div style={{\n                            display : \"flex\",\n                            alignContent : \"center\",\n                            alignItems : \"center\"\n                        }}>\n                            <TextInputApollo \n                            placeholder={\"Enter repo\"}\n                            onTextInput={setText}/>&emsp;<AthenaButton \n                            onClick={handleSubmit}\n                            primaryColor={Colors.Maintheme} secondaryColor={Colors.primaryTextColor}>\n                                Submit\n                            </AthenaButton>\n                        </div>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n            </MediaResponsive.Mobile>\n        </MediaResponsive>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderDesktop, HeaderResponsive } from '../../Maps/Headers';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport { StepStatusT } from '../../Statics/Steps/Steps';\nimport { RunBenchDesktop } from '../../Benches';\nimport { Params, useParams } from 'react-router-dom';\nimport { RunPageWithRepo } from './RunPageWithRepo';\nimport { RunPageNoRepo } from './RunPageNoRepo';\n\nexport type ReadyToRunProps = {\n    stepStatus : StepStatusT\n}\n\nexport const ReadyToRun : FC<ReadyToRunProps>  = ({\n    stepStatus\n}) =>{\n\n    const {\n        owner,\n        repo\n    } = useParams();\n\n    \n\n\n    if(owner && repo){\n        \n        \n\n        return (<RunPageWithRepo stepStatus={stepStatus} repo={{\n            owner : owner ,\n            repo : repo\n        }}/>)\n    }\n\n    return (\n\n       <RunPageNoRepo stepStatus={stepStatus}/>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {RunSteps} from \"../../Statics/Steps/RunSteps\";\nimport { StepStatusT, AllSteps } from '../../Statics/Steps/Steps';\nimport { ethers } from 'ethers';\nimport {NotReadyToRun} from \"./NotReadyToRun\";\nimport {ReadyToRun} from \"./ReadyToRun\";\n\ndeclare global {\n    interface Window {\n        ethereum : ethers.providers.ExternalProvider\n    }\n}\n\nexport type RunPageProps = {\n}\n\nexport const simulateNetworkRequest =  async <T extends any>(value : T, upperBound : number = 5000) : Promise<T> =>{\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            resolve(value);\n        }, Math.random() * upperBound)\n    })\n}\n\nexport const RunPage : FC<RunPageProps>  = () =>{\n\n\n    const [stepStatus, setStepStatus] = useState<StepStatusT>({\n        wallet : \"not ready\",\n    });\n\n    const [readyToRun, setReadyToRun] = useState(false);\n    const handleAllDone = ()=>{\n        setReadyToRun(true);\n    }\n\n    const _setStepStatus = (stepStatus : StepStatusT)=>{\n        \n        setStepStatus(stepStatus);\n    }\n\n    if(!readyToRun) {\n        return (\n            <NotReadyToRun setStepStatus={_setStepStatus} stepStatus={stepStatus} handleAllDone={handleAllDone}/>\n        )\n    }\n   \n    return (\n\n       <ReadyToRun stepStatus={stepStatus}/>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { RunBenchDesktop } from '../../Benches';\nimport { LogoA } from '../../Glitter';\nimport { isDapp } from '../../Items';\nimport { MainLayoutDesktop } from '../../Layouts';\nimport { HeaderResponsive } from '../../Maps/Headers';\nimport { Colors, DesktopSizes } from '../../Theme';\nimport { useColorStore } from '../../Theme/ColorProvider';\nimport { HOME } from '../../Maps/Headers';\nimport { MediaResponsive } from '../../Sytems';\nimport { MainLayoutMobile } from '../../Layouts';\nimport {ErrorNotification} from \"../../Error\";\n\nexport type ErrorPageProps = {}\n\nexport const ErrorPage : FC<ErrorPageProps>  = () =>{\n\n\n    return (\n\n       <MediaResponsive>\n           <MediaResponsive.Desktop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n            </MediaResponsive.Desktop>\n           <MediaResponsive.Laptop>\n                <MainLayoutDesktop>\n                    <MainLayoutDesktop.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutDesktop.Header>\n                    <MainLayoutDesktop.Content>\n                        <ErrorNotification/>\n                    </MainLayoutDesktop.Content>\n                </MainLayoutDesktop>\n           </MediaResponsive.Laptop>\n           <MediaResponsive.Tablet>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Tablet>\n           <MediaResponsive.Mobile>\n                <MainLayoutMobile>\n                    <MainLayoutMobile.Header>\n                        <HeaderResponsive selected={HOME}/>\n                    </MainLayoutMobile.Header>\n                    <MainLayoutMobile.Content>\n                        <ErrorNotification/>\n                    </MainLayoutMobile.Content>\n                </MainLayoutMobile>\n           </MediaResponsive.Mobile>\n       </MediaResponsive>\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { IntegratedErrorBoundary } from '../Error/IntegratedErrorBoundary';\nimport { RunPage } from '../Pages';\nimport { ErrorPage } from '../Pages/ErrorPage';\n\nexport type MainRouterProps = {}\n\nexport const MainRouter : FC<MainRouterProps>  = () =>{\n\n    return (\n\n        <HashRouter>\n            <IntegratedErrorBoundary>\n                <Routes>\n                    <Route path=\"/\" element={<RunPage/>}/>\n                    <Route path=\"/:owner/:repo\" element={<RunPage/>}/>\n                    <Route path=\"/:owner/:repo/error\" element={<ErrorPage/>}/>\n                    <Route path=\"/error\" element={<ErrorPage/>}/>\n                </Routes>\n            </IntegratedErrorBoundary>\n        </HashRouter>\n\n    )\n\n}","import React, {FC, ReactElement} from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { generateRandomDappItems } from '../Demo';\nimport { useErrorContext } from '../Error/ErrorProvider';\nimport { DappI, getDappName } from '../Items';\nimport { MainRouter } from '../Router';\nimport { getFeaturedDapps } from '../Sytems/Featured';\nimport { Colors, DesktopSizes } from '../Theme';\nimport { ColorProvider } from '../Theme/ColorProvider';\nimport {DependencyProvider} from \"../Sytems/DependencyStatus\";\nimport { RunPage } from '../Pages';\n\nexport type MainSegmentProps = {}\n\nexport const MainSegment : FC<MainSegmentProps>  = () =>{\n\n    return (\n\n       <div style={{\n           background : \"white\"\n       }}>\n           <MainRouter/>\n       </div>\n\n\n    )\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './App.css';\nimport \"./CSS/Main.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { MainRouter } from './Router';\nimport { MainSegment } from './Segments';\nimport {editor} from \"monaco-editor\";\nimport {Colors} from \"./Theme\"\nimport { RunPage } from './Pages';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainSegment/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}